{"loadMethods":{},"label":"Alchemy","name":"alchemy","icon":"https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Alchemy/alchemy.svg","type":"action","category":"Network Provider","version":1.1,"description":"Perform Alchemy on-chain operations","incoming":1,"outgoing":1,"networks":[{"label":"Network","name":"network","type":"options","options":[{"label":"Mainnet","name":"homestead"},{"label":"Goerli","name":"goerli"},{"label":"Polygon Mainnet","name":"matic"},{"label":"Polygon Mumbai","name":"maticmum"},{"label":"Arbitrum Mainnet","name":"arbitrum"},{"label":"Arbitrum Goerli","name":"arbitrum-goerli"},{"label":"Optimism Mainnet","name":"optimism"},{"label":"Optimism Goerli","name":"optimism-goerli"},{"label":"Solana Mainnet","name":"solana"},{"label":"Solana Devnet","name":"solana-devnet"}]}],"credentials":[{"label":"Credential Method","name":"credentialMethod","type":"options","options":[{"label":"Alchemy API Key","name":"alchemyApi"}],"default":"alchemyApi"}],"inputParameters":[{"label":"API","name":"api","type":"options","options":[{"label":"EVM Chain API","name":"chainAPI","description":"API for fetching standard EVM onchain data using Alchemy supported calls","show":{"networks.network":["homestead","goerli","matic","maticmum","optimism","optimism-goerli","arbitrum","arbitrum-goerli"]}},{"label":"NFT API","name":"nftAPI","description":"API for fetching NFT data, including ownership, metadata attributes, and more.","show":{"networks.network":["homestead","goerli","matic","maticmum"]}},{"label":"Transaction Receipts API","name":"txReceiptsAPI","description":"API that gets all transaction receipts for a given block by number or block hash.","show":{"networks.network":["homestead","goerli","matic","maticmum","arbitrum","arbitrum-goerli"]}},{"label":"Token API","name":"tokenAPI","description":"The Token API allows you to easily get token information, minimizing the number of necessary requests.","show":{"networks.network":["homestead","goerli","matic","maticmum","optimism","optimism-goerli","arbitrum","arbitrum-goerli"]}},{"label":"Solana API","name":"solanaAPI","description":"API for fetching Solana on-chain data using Alchemy supported calls","show":{"networks.network":["solana","solana-devnet"]}}],"default":"chainAPI"},{"label":"Chain Category","name":"chainCategory","type":"options","options":[{"label":"Retrieving Blocks","name":"retrievingBlocks","description":"Retrieve onchain blocks data"},{"label":"EVM/Smart Contract Execution","name":"evmExecution","description":"Execute or submit transaction onto blockchain"},{"label":"Reading Transactions","name":"readingTransactions","description":"Read onchain transactions data"},{"label":"Account Information","name":"accountInformation","description":"Retrieve onchain account information"},{"label":"Event Logs","name":"eventLogs","description":"Fetch onchain logs"},{"label":"Chain Information","name":"chainInformation","description":"Get general selected blockchain information"},{"label":"Retrieving Uncles","name":"retrievingUncles","description":"Retrieve onchain uncles blocks data"},{"label":"Filters","name":"filters","description":"Get block filters and logs, or create new filter"}],"show":{"inputParameters.api":["chainAPI"]}},{"label":"Chain Category","name":"chainCategory","type":"options","options":[{"label":"Reading & Writing Transactions","name":"readWriteTransactions","description":"Read and Write transactins onto Solana chain"},{"label":"Getting Blocks","name":"gettingBlocks","description":"Get Solana blocks data"},{"label":"Account Information","name":"accountInformation","description":"Retrieve Solana onchain account information"},{"label":"Network Information","name":"networkInformation","description":"Get Solana network onchain information"},{"label":"Slot Information","name":"slotInformation","description":"Fetch Solana slot information"},{"label":"Node Information","name":"nodeInformation","description":"Retrieve Solana node onchain information"},{"label":"Token Information","name":"tokenInformation","description":"Fetch Solana onchain token information"},{"label":"Network Inflation","name":"networkInflation","description":"Retrieve Solana network inflation onchain data"}],"show":{"inputParameters.api":["solanaAPI"]}},{"label":"Operation","name":"operation","type":"asyncOptions","loadMethod":"getOperations"},{"label":"Owner Address","name":"owner","type":"string","description":"Address for NFT owner (can be in ENS format!)","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTs"]}},{"label":"PageKey","name":"pageKey","type":"string","description":"UUID for pagination. If more results are available, a UUID pageKey will be returned in the response. Pass that UUID into pageKey to fetch the next 100 NFTs.","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTs"]},"optional":true},{"label":"Metadata","name":"withMetadata","type":"boolean","description":"If boolean is set to true the query will include metadata for each returned token.","default":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTs"]}},{"label":"Contract Address","name":"contractAddress","type":"string","description":"Address of NFT contract","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTMetadata"]}},{"label":"Token Id","name":"tokenId","type":"string","description":"Id for NFT","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTMetadata"]}},{"label":"Token Type","name":"tokenType ","type":"options","description":"\"ERC721\" or \"ERC1155\"; specifies type of token to query for","options":[{"label":"ERC721","name":"ERC721"},{"label":"ERC1155","name":"ERC1155"},{"label":"","name":""}],"default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTMetadata"]}},{"label":"Contract Address","name":"contractAddress","type":"string","description":"Contract address for the NFT collection","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTsForCollection"]}},{"label":"Start Token","name":"startToken","type":"string","description":"An offset used for pagination. Can be a hex string, or a decimal.","default":"","optional":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTsForCollection"]}},{"label":"Metadata","name":"withMetadata","type":"boolean","description":"If set to true, returns NFT metadata; otherwise will only return tokenIds","default":true,"optional":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTsForCollection"]}},{"label":"Limit","name":"limit","type":"number","description":"Sets the total number of NFTs returned in the response. Defaults to 100.","default":100,"optional":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTsForCollection"]}},{"label":"Token Uri Timeout In Ms","name":"tokenUriTimeoutInMs","type":"number","description":"No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to only access the cache and not live fetch any metadata for cache misses then set this value to 0.","optional":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getNFTsForCollection"]}},{"label":"Contract Address","name":"contractAddress","type":"string","description":"Contract address for the NFT collection (ERC721 and ERC1155 supported).","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getOwnersForCollection"]}},{"label":"With Token Balances","name":"withTokenBalances","type":"boolean","description":"If set to true the query will include the token balances per token id for each owner. false by default.","default":false,"optional":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getOwnersForCollection"]}},{"label":"Block","name":"block","type":"string","description":"The point in time or block number (in hex or decimal) to fetch collection ownership information for.","default":"","optional":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getOwnersForCollection"]}},{"label":"PageKey","name":"pageKey","type":"string","description":"used for collections with >50,000 owners. pageKey field can be passed back as request parameter to get the next page of results.","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getOwnersForCollection"]},"optional":true},{"label":"Contract Address","name":"contractAddress","type":"string","description":"Contract address for the NFT collection (ERC721 and ERC1155 supported).","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getOwnersForToken","isSpamContract","reingestContract","getFloorPrice","computeRarity","summarizeNFTAttributes","reportSpamContract"]}},{"label":"Token Id","name":"tokenId","type":"string","description":"The ID of the token. Can be in hex or decimal format.","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getOwnersForToken","computeRarity"]}},{"label":"Query","name":"query","type":"string","description":"The search string that you want to search for in contract metadata","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["searchContractMetadata"]}},{"label":"Contract Address","name":"contractAddress","type":"string","description":"Contract address for the NFT collection (ERC721 and ERC1155 supported).","default":"","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["isHolderOfCollection"]}},{"label":"Wallet","name":"wallet","type":"string","description":"Wallet address to check for collection ownership.","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["isHolderOfCollection"]}},{"label":"Owner","name":"owner","type":"string","description":"Address for NFT owner (can be in ENS format!).","placeholder":"vitalk.eth","show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getContractsForOwner"]}},{"label":"PageKey","name":"pageKey","type":"string","description":"key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.","optional":true,"show":{"inputParameters.api":["nftAPI"],"inputParameters.operation":["getContractsForOwner"]}},{"label":"Parameters","name":"parameters","type":"json","placeholder":"[\"param1\", \"param2\"]","optional":true,"description":"Operation parameters in array. Ex: [\"param1\", \"param2\"]","show":{"inputParameters.api":["chainAPI","txReceiptsAPI","tokenAPI","solanaAPI"]}}],"filePath":"https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Alchemy/Alchemy.js"}
