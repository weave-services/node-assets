{"loadMethods":{},"label":"Infura","name":"infura","icon":"https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Infura/infura.svg","type":"action","category":"Network Provider","version":1.1,"description":"Perform Infura onchain operations","incoming":1,"outgoing":1,"actions":[{"label":"API","name":"api","type":"options","options":[{"label":"Chain API","name":"chainAPI","description":"API for fetching standard onchain data using Infura supported calls."},{"label":"IPFS API","name":"ipfsAPI","description":"API for interacting with IPFS, a distributed, peer-to-peer (p2p) storage network used for storing and accessing files, websites, applications, and data."}],"default":"chainAPI"}],"credentials":[{"label":"Credential Method","name":"credentialMethod","type":"options","options":[{"label":"Infura API Key","name":"infuraApi"}],"default":"infuraApi"}],"networks":[{"label":"Network","name":"network","type":"options","options":[{"label":"Mainnet","name":"homestead","parentGroup":"Ethereum"},{"label":"Goerli","name":"goerli","parentGroup":"Ethereum"},{"label":"Polygon Mainnet","name":"matic","parentGroup":"Polygon"},{"label":"Polygon Mumbai","name":"maticmum","parentGroup":"Polygon"},{"label":"Arbitrum Mainnet","name":"arbitrum","parentGroup":"Arbitrum"},{"label":"Arbitrum Goerli","name":"arbitrum-goerli","parentGroup":"Arbitrum"},{"label":"Optimism Mainnet","name":"optimism","parentGroup":"Optimism"},{"label":"Optimism Goerli","name":"optimism-goerli","parentGroup":"Optimism"},{"label":"Avalanche Mainnet","name":"avalanche","parentGroup":"Avalanche"},{"label":"Avalanche Testnet","name":"avalanche-testnet","parentGroup":"Avalanche"}],"show":{"actions.api":["chainAPI"]}}],"inputParameters":[{"label":"Chain Category","name":"chainCategory","type":"options","options":[{"label":"Retrieving Blocks","name":"retrievingBlocks","description":"Retrieve onchain blocks data"},{"label":"EVM/Smart Contract Execution","name":"evmExecution","description":"Execute or submit transaction onto blockchain"},{"label":"Reading Transactions","name":"readingTransactions","description":"Read onchain transactions data"},{"label":"Account Information","name":"accountInformation","description":"Retrieve onchain account information"},{"label":"Event Logs","name":"eventLogs","description":"Fetch onchain logs"},{"label":"Chain Information","name":"chainInformation","description":"Get general selected blockchain information"},{"label":"Retrieving Uncles","name":"retrievingUncles","description":"Retrieve onchain uncles blocks data"},{"label":"Filters","name":"filters","description":"Get block filters and logs, or create new filter"}],"show":{"actions.api":["chainAPI"]},"default":"retrievingBlocks"},{"label":"Operation","name":"operation","type":"asyncOptions","loadMethod":"getOperations"},{"label":"File","name":"file","type":"file","description":"The path to a file to be added to IPFS.","show":{"inputParameters.operation":["add","block_put","dag_put","pin_add"]}},{"label":"Block Hash","name":"arg","type":"string","description":"The base58 multihash of an existing block to get.","default":"","show":{"inputParameters.operation":["block_get","block_stat"]}},{"label":"IPFS Object Hash","name":"arg","type":"string","description":"The IPFS object hash.","default":"","show":{"inputParameters.operation":["cat"]}},{"label":"Dag Object","name":"arg","type":"string","description":"The DAG object to get/resolve.","default":"","show":{"inputParameters.operation":["dag_get","dag_resolve"]}},{"label":"Output Codec","name":"output-codec","type":"string","description":"Format the object will be decoded in. Default: dag-json.","optional":true,"default":"","show":{"inputParameters.operation":["dag_get"]}},{"label":"Store Codec","name":"store-codec","type":"string","description":"Codec that the stored object will be encoded with. Default: dag-cbor.","optional":true,"default":"","show":{"inputParameters.operation":["dag_put"]}},{"label":"Input Codec","name":"input-codec","type":"string","description":"Codec that the input object is encoded in. Default: dag-json.","optional":true,"default":"","show":{"inputParameters.operation":["dag_put"]}},{"label":"Pin","name":"pin","type":"boolean","description":"Pin this object when adding.","optional":true,"default":true,"show":{"inputParameters.operation":["dag_put","object_put"]}},{"label":"Hash","name":"hash","type":"string","description":"Hash function to use. Default: sha2-256.","optional":true,"default":"","show":{"inputParameters.operation":["dag_put"]}},{"label":"IPFS Object Hash","name":"arg","type":"string","description":"The IPFS object hash.","default":"","show":{"inputParameters.operation":["get"]}},{"label":"Object Key","name":"arg","type":"string","description":"Key of the object to retrieve, in base58-encoded multihash format.","default":"","show":{"inputParameters.operation":["object_data","object_get","object_stat"]}},{"label":"File","name":"file","type":"file","description":"The file to be stored as a DAG object.","show":{"inputParameters.operation":["object_put"]}},{"label":"Input Encoding","name":"inputenc","type":"options","description":"Encoding type of input data.","options":[{"label":"Protobuf","name":"protobuf"},{"label":"Json","name":"json"}],"default":"json","show":{"inputParameters.operation":["object_put"]}},{"label":"Data Field Encoding","name":"datafieldenc","type":"options","description":"Encoding type of data field.","options":[{"label":"Text","name":"text"},{"label":"Base64","name":"base64"}],"default":"text","show":{"inputParameters.operation":["object_put"]}},{"label":"Object(s) Path","name":"arg","type":"string","description":"Path to object(s) to be listed.","default":"","show":{"inputParameters.operation":["pin_ls"]}},{"label":"Object(s) Path","name":"arg","type":"string","description":"Path to object(s) to be unpinned.","default":"","show":{"inputParameters.operation":["pin_rm"]}},{"label":"Object(s) Path","name":"arg","type":"string","description":"Path to object(s) to be pinned.","default":"","show":{"inputParameters.operation":["pin_add"]}},{"label":"Type","name":"inputenc","type":"options","description":"The type of pinned keys to list.","options":[{"label":"Direct","name":"direct"},{"label":"Indirect","name":"indirect"},{"label":"Recursive","name":"recursive"},{"label":"All","name":"all"}],"default":"all","show":{"inputParameters.operation":["pin_ls"]}},{"label":"Parameters","name":"parameters","type":"json","placeholder":"[\"param1\", \"param2\"]","optional":true,"description":"Operation parameters in array. Ex: [\"param1\", \"param2\"]","show":{"actions.api":["chainAPI"]}}],"filePath":"https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Infura/Infura.js"}
