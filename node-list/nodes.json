[
  {
    "nodeState": null,
    "loadMethods": {},
    "label": "Webhook Trigger",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Webhook/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Webhook/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Webhook/dark.svg"
    },
    "name": "webhook",
    "type": "webhook",
    "category": "Utilities",
    "version": 2,
    "description": "Start workflow when webhook is called",
    "incoming": 0,
    "outgoing": 1,
    "inputParameters": [
      {
        "label": "HTTP Method",
        "name": "httpMethod",
        "type": "options",
        "options": [
          {
            "label": "GET",
            "name": "GET"
          },
          {
            "label": "POST",
            "name": "POST"
          }
        ],
        "default": "GET",
        "description": "The HTTP method to listen to."
      },
      {
        "label": "Authorization",
        "name": "authorization",
        "type": "options",
        "options": [
          {
            "label": "API",
            "name": "headerAuth",
            "description": "Webhook header must contains \"X-API-KEY\" with matching key"
          },
          {
            "label": "None",
            "name": "none"
          }
        ],
        "default": "none",
        "description": "The way to authorize incoming webhook."
      },
      {
        "label": "API key",
        "name": "apiKey",
        "type": "asyncOptions",
        "loadMethod": "getAPIKeys",
        "description": "Incoming call must consists header \"x-api-key\" with matching API key. You can create new key from the dashboard",
        "show": {
          "inputParameters.authorization": [
            "headerAuth"
          ]
        }
      },
      {
        "label": "Response Code",
        "name": "responseCode",
        "type": "number",
        "default": 200,
        "description": "The HTTP response code to return when a HTTP request is made to this endpoint URL. Valid range: 1XX - 5XX"
      },
      {
        "label": "What/How to Return",
        "name": "returnType",
        "type": "options",
        "options": [
          {
            "label": "Immediate Reponse",
            "name": "immediateResponse",
            "description": "Returns response immediately once webhook is called"
          },
          {
            "label": "When Last Node Finishes",
            "name": "lastNodeResponse",
            "description": "Returns output response of the last executed node"
          }
        ],
        "default": "immediateResponse",
        "description": "What data or message, and how should Webhook node return upon successful calling"
      },
      {
        "label": "Response Data",
        "name": "responseData",
        "type": "string",
        "default": "",
        "description": "Custom response data to return when a HTTP request is made to this webhook endpoint URL. If not provided, default to: Webhook received!",
        "optional": true,
        "show": {
          "inputParameters.returnType": [
            "immediateResponse"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Webhook/Webhook.js"
  },
	{
  "_events": {},
  "_eventsCount": 0,
  "loadMethods": {},
  "label": "QuickNode Trigger",
  "name": "quickNodeTrigger",
  "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/QuickNode/quicknode.svg",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/QuickNode/quicknode.svg",
    "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/QuickNode/quicknode.svg"
  },
  "type": "trigger",
  "category": "Network Provider",
  "version": 1,
  "description": "Start workflow whenever subscribed event happened",
  "incoming": 0,
  "outgoing": 1,
  "networks": [
    {
      "label": "Network",
      "name": "network",
      "type": "options",
      "options": [
        {
          "label": "Mainnet",
          "name": "homestead"
        },
        {
          "label": "Goerli",
          "name": "goerli"
        },
        {
          "label": "Polygon Mainnet",
          "name": "matic"
        },
        {
          "label": "Polygon Mumbai",
          "name": "maticmum"
        },
        {
          "label": "Binance Smart Chain Mainnet",
          "name": "bsc"
        },
        {
          "label": "Binance Smart Chain Testnet",
          "name": "bsc-testnet"
        },
        {
          "label": "Arbitrum Mainnet",
          "name": "arbitrum"
        },
        {
          "label": "Arbitrum Goerli",
          "name": "arbitrum-goerli"
        },
        {
          "label": "Arbitrum Nova",
          "name": "arbitrum-nova"
        },
        {
          "label": "Avalanche Mainnet",
          "name": "avalanche"
        },
        {
          "label": "Avalanche Testnet",
          "name": "avalanche-testnet"
        },
        {
          "label": "Optimism Mainnet",
          "name": "optimism"
        },
        {
          "label": "Optimism Goerli",
          "name": "optimism-goerli"
        },
        {
          "label": "Fantom Mainnet",
          "name": "fantom"
        },
        {
          "label": "Celo Mainnet",
          "name": "celo"
        },
        {
          "label": "Gnosis Mainnet",
          "name": "gnosis"
        },
        {
          "label": "Solana Mainnet",
          "name": "solana"
        },
        {
          "label": "Solana Devnet",
          "name": "solana-devnet"
        },
        {
          "label": "Solana Testnet",
          "name": "solana-testnet"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "QuickNode Endpoints",
          "name": "quickNodeEndpoints"
        }
      ],
      "default": "quickNodeEndpoints"
    }
  ],
  "inputParameters": [
    {
      "label": "Subscribe Operation",
      "name": "subscribeOperation",
      "type": "asyncOptions",
      "loadMethod": "getSubscribeOperations"
    },
    {
      "label": "Parameters",
      "name": "parameters",
      "type": "json",
      "placeholder": "[\n  \"param1\",\n  \"param2\"\n]",
      "optional": true,
      "description": "Operation parameters in array. Ex: [\"param1\", \"param2\"]"
    },
    {
      "label": "Unsubscribe Operation",
      "name": "unsubscribeOperation",
      "type": "asyncOptions",
      "loadMethod": "getUnsubscribeOperations"
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/QuickNode/QuickNodeTrigger.js"
},
	{
  "loadMethods": {},
  "label": "YOP Mail",
  "name": "yopMail",
  "icons": {
    "default": "https://raw.githubusercontent.com/jasp402/Easy-YOPmail/refs/heads/main/Writerside/images/logo.png",
    "light": "https://raw.githubusercontent.com/jasp402/Easy-YOPmail/refs/heads/main/Writerside/images/logo.png",
    "dark": "https://raw.githubusercontent.com/jasp402/Easy-YOPmail/refs/heads/main/Writerside/images/logo.png"
  },
  "type": "action",
  "category": "Email",
  "version": 1,
  "description": "Manage temporary email addresses using Easy-YOPmail for Node.js.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Generate Temporary Email",
          "name": "generateEmail",
          "description": "Generate a unique temporary email address."
        },
        {
          "label": "Get Inbox",
          "name": "getInbox",
          "description": "Retrieve the inbox of a specified temporary email address."
        },
        {
          "label": "Read Message",
          "name": "readMessage",
          "description": "Read a specific message from an inbox."
        }
      ],
      "default": "generateEmail"
    }
  ],
  "credentials": [
    {
      "label": "YOPmail API Key",
      "name": "apiKey",
      "type": "string",
      "description": "API key for accessing Easy-YOPmail functionalities.",
      "optional": true
    }
  ],
  "inputParameters": [
    {
      "label": "Email Address",
      "name": "emailAddress",
      "type": "string",
      "description": "The temporary email address to manage.",
      "show": {
        "actions.operation": [
          "getInbox",
          "readMessage"
        ]
      }
    },
    {
      "label": "Message ID",
      "name": "messageId",
      "type": "string",
      "description": "The ID of the message to read.",
      "show": {
        "actions.operation": [
          "readMessage"
        ]
      }
    },
    {
      "label": "Format",
      "name": "format",
      "type": "options",
      "options": [
        {
          "label": "Text",
          "name": "TXT"
        },
        {
          "label": "HTML",
          "name": "HTML"
        }
      ],
      "default": "TXT",
      "description": "The format in which to retrieve the message content.",
      "show": {
        "actions.operation": [
          "readMessage"
        ]
      }
    }
  ],
  "filePath": "https://example.com/easyYopmail/easyYopmail.js"
},
	  {
    "nodeState": null,
    "loadMethods": {},
    "label": "Alchemy Webhook",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/nodes/Alchemy/alchemy.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/nodes/Alchemy/alchemy.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/nodes/Alchemy/alchemy.svg"
    },
    "name": "AlchemyWebhook",
    "type": "webhook",
    "category": "Utilities",
    "version": 2,
    "description": "Start workflow when webhook is called",
    "incoming": 0,
    "outgoing": 1,
    "inputParameters": [
      {
        "label": "HTTP Method",
        "name": "httpMethod",
        "type": "options",
        "options": [
          {
            "label": "GET",
            "name": "GET"
          },
          {
            "label": "POST",
            "name": "POST"
          }
        ],
        "default": "GET",
        "description": "The HTTP method to listen to."
      },
      {
        "label": "Authorization",
        "name": "authorization",
        "type": "options",
        "options": [
          {
            "label": "API",
            "name": "headerAuth",
            "description": "Webhook header must contains \"X-API-KEY\" with matching key"
          },
          {
            "label": "None",
            "name": "none"
          }
        ],
        "default": "none",
        "description": "The way to authorize incoming webhook."
      },
      {
        "label": "API key",
        "name": "apiKey",
        "type": "asyncOptions",
        "loadMethod": "getAPIKeys",
        "description": "Incoming call must consists header \"x-api-key\" with matching API key. You can create new key from the dashboard",
        "show": {
          "inputParameters.authorization": [
            "headerAuth"
          ]
        }
      },
      {
        "label": "Response Code",
        "name": "responseCode",
        "type": "number",
        "default": 200,
        "description": "The HTTP response code to return when a HTTP request is made to this endpoint URL. Valid range: 1XX - 5XX"
      },
      {
        "label": "What/How to Return",
        "name": "returnType",
        "type": "options",
        "options": [
          {
            "label": "Immediate Reponse",
            "name": "immediateResponse",
            "description": "Returns response immediately once webhook is called"
          },
          {
            "label": "When Last Node Finishes",
            "name": "lastNodeResponse",
            "description": "Returns output response of the last executed node"
          }
        ],
        "default": "immediateResponse",
        "description": "What data or message, and how should Webhook node return upon successful calling"
      },
      {
        "label": "Response Data",
        "name": "responseData",
        "type": "string",
        "default": "",
        "description": "Custom response data to return when a HTTP request is made to this webhook endpoint URL. If not provided, default to: Webhook received!",
        "optional": true,
        "show": {
          "inputParameters.returnType": [
            "immediateResponse"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Webhook/Webhook.js"
  },
  {
    "_events": {},
    "_eventsCount": 0,
    "label": "Scheduler Trigger",
    "name": "scheduler",
    "icons": {
      "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Scheduler/scheduler.svg",
      "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Scheduler/scheduler.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/02709375e19a733ba6db1fcb8ae8f597312a4099/nodes/Scheduler/darkmode.png"
    },
    "type": "scheduler",
    "category": "Utilities",
    "version": 1.1,
    "description": "Start workflow at scheduled times",
    "incoming": 0,
    "outgoing": 1,
    "inputParameters": [
      {
        "label": "Pattern",
        "name": "pattern",
        "type": "options",
        "options": [
          {
            "label": "Repetitive",
            "name": "repetitive",
            "description": "Workflow will be triggered repetitively every X"
          },
          {
            "label": "Once",
            "name": "once",
            "description": "Workflow will be triggered only once at specific time"
          }
        ],
        "default": "repetitive"
      },
      {
        "label": "Date Time",
        "name": "specificDateTime",
        "type": "date",
        "description": "Choose a specific date time to trigger the workflow once",
        "show": {
          "inputParameters.pattern": [
            "once"
          ]
        }
      },
      {
        "label": "Schedules",
        "name": "scheduleTimes",
        "type": "array",
        "show": {
          "inputParameters.pattern": [
            "repetitive"
          ]
        },
        "array": [
          {
            "label": "Mode",
            "name": "mode",
            "type": "options",
            "options": [
              {
                "label": "Every Day",
                "name": "everyDay"
              },
              {
                "label": "Every Week",
                "name": "everyWeek"
              },
              {
                "label": "Every Month",
                "name": "everyMonth"
              },
              {
                "label": "Every X",
                "name": "everyX"
              },
              {
                "label": "Every Specific Time",
                "name": "specific"
              }
            ],
            "default": "everyDay"
          },
          {
            "label": "Specific Date Time",
            "name": "specificDateTime",
            "type": "date",
            "description": "Choose a specific date time to trigger the workflow",
            "show": {
              "inputParameters.scheduleTimes[$index].mode": [
                "specific"
              ]
            }
          },
          {
            "label": "Hour",
            "name": "hour",
            "type": "number",
            "hide": {
              "inputParameters.scheduleTimes[$index].mode": [
                "everyX",
                "specific"
              ]
            },
            "default": 21,
            "description": "[24H Format] Scheduled hour to trigger workflow"
          },
          {
            "label": "Minute",
            "name": "minute",
            "type": "number",
            "hide": {
              "inputParameters.scheduleTimes[$index].mode": [
                "everyX",
                "specific"
              ]
            },
            "default": 35,
            "description": "[0 - 59] Scheduled minute to trigger workflow"
          },
          {
            "label": "Day of Month",
            "name": "dayOfMonth",
            "type": "number",
            "show": {
              "inputParameters.scheduleTimes[$index].mode": [
                "everyMonth"
              ]
            },
            "default": 6,
            "description": "[1 - 31] Scheduled day to trigger workflow"
          },
          {
            "label": "Weekday",
            "name": "weekday",
            "type": "options",
            "show": {
              "inputParameters.scheduleTimes[$index].mode": [
                "everyWeek"
              ]
            },
            "options": [
              {
                "label": "Monday",
                "name": "1"
              },
              {
                "label": "Tuesday",
                "name": "2"
              },
              {
                "label": "Wednesday",
                "name": "3"
              },
              {
                "label": "Thursday",
                "name": "4"
              },
              {
                "label": "Friday",
                "name": "5"
              },
              {
                "label": "Saturday",
                "name": "6"
              },
              {
                "label": "Sunday",
                "name": "0"
              }
            ],
            "default": "3",
            "description": "Scheduled weekday to trigger workflow"
          },
          {
            "label": "Value",
            "name": "value",
            "type": "number",
            "show": {
              "inputParameters.scheduleTimes[$index].mode": [
                "everyX"
              ]
            },
            "default": 1,
            "description": "Scheduled X seconds/minutes/hours to trigger workflow"
          },
          {
            "label": "Unit",
            "name": "unit",
            "type": "options",
            "show": {
              "inputParameters.scheduleTimes[$index].mode": [
                "everyX"
              ]
            },
            "options": [
              {
                "label": "Minutes",
                "name": "minutes"
              },
              {
                "label": "Hours",
                "name": "hours"
              }
            ],
            "default": "hours",
            "description": "Units of scheduled X seconds / minutes / hours"
          }
        ]
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Scheduler/Scheduler.js"
  },
  {
  "label": "GitHub Webhook",
  "name": "GitHubWebhook",
  "type": "webhook",
  "version": 1,
  "description": "Start workflow whenever a GitHub webhook event occurs",
  "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GitHub/GitHub-Logo.png",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GitHub/GitHub-Logo.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/github-icon-1024x994-4h5sdmko.png"
  },
  "category": "Development",
  "incoming": 0,
  "outgoing": 1,
  "actions": [
    {
      "label": "Events",
      "name": "events",
      "type": "options",
      "options": [
        {
          "label": "Branch Protection Rule",
          "name": "branch_protection_rule",
          "description": "Activity related to a branch protection rule."
        },
        {
          "label": "Check Run",
          "name": "check_run",
          "description": "Check run activity has occurred."
        },
        {
          "label": "Check Suite",
          "name": "check_suite",
          "description": "Check suite activity has occurred."
        },
        {
          "label": "Code Scanning Alert",
          "name": "code_scanning_alert",
          "description": "Activity related to code scanning alerts in a repository."
        },
        {
          "label": "Commit Comment",
          "name": "commit_comment",
          "description": "A commit comment is created."
        },
        {
          "label": "Create",
          "name": "create",
          "description": "A Git branch or tag is created."
        },
        {
          "label": "Delete",
          "name": "delete",
          "description": "A Git branch or tag is deleted."
        },
        {
          "label": "Dependabot Alert",
          "name": "dependabot_alert",
          "description": "Activity related to Dependabot alerts."
        },
        {
          "label": "Deploy Key",
          "name": "deploy_key",
          "description": "A deploy key is added or removed from a repository."
        },
        {
          "label": "Deployment",
          "name": "deployment",
          "description": "A deployment is created."
        },
        {
          "label": "Deployment Status",
          "name": "deployment_status",
          "description": "A deployment status is created."
        },
        {
          "label": "Discussion",
          "name": "discussion",
          "description": "Activity related to a discussion."
        },
        {
          "label": "Discussion Comment",
          "name": "discussion_comment",
          "description": "Activity related to a comment in a discussion."
        },
        {
          "label": "Fork",
          "name": "fork",
          "description": "A user forks a repository."
        },
        {
          "label": "GitHub App Authorization",
          "name": "github_app_authorization",
          "description": "When someone revokes their authorization of a GitHub App, this event occurs."
        },
        {
          "label": "Gollum",
          "name": "gollum",
          "description": "A wiki page is created or updated."
        },
        {
          "label": "Installation",
          "name": "installation",
          "description": "Activity related to a GitHub App installation."
        },
        {
          "label": "Installation Repositories",
          "name": "installation_repositories",
          "description": "Activity related to repositories being added to a GitHub App installation."
        },
        {
          "label": "Issue Comment",
          "name": "issue_comment",
          "description": "Activity related to an issue or pull request comment."
        },
        {
          "label": "Issues",
          "name": "issues",
          "description": "Activity related to an issue."
        },
        {
          "label": "Label",
          "name": "label",
          "description": "Activity related to a label."
        },
        {
          "label": "Marketplace Purchase",
          "name": "marketplace_purchase",
          "description": "Activity related to a GitHub Marketplace purchase."
        },
        {
          "label": "Member",
          "name": "member",
          "description": "Activity related to repository collaborators."
        },
        {
          "label": "Membership",
          "name": "membership",
          "description": "Activity related to team membership."
        },
        {
          "label": "Merge Group",
          "name": "merge_group",
          "description": "Activity related to merge groups in a merge queue."
        },
        {
          "label": "Meta",
          "name": "meta",
          "description": "The webhook this event is configured on was deleted."
        },
        {
          "label": "Milestone",
          "name": "milestone",
          "description": "Activity related to milestones."
        },
        {
          "label": "Organization",
          "name": "organization",
          "description": "Activity related to an organization and its members."
        },
        {
          "label": "Org Block",
          "name": "org_block",
          "description": "Activity related to people being blocked in an organization."
        },
        {
          "label": "Package",
          "name": "package",
          "description": "Activity related to GitHub Packages."
        },
        {
          "label": "Page Build",
          "name": "page_build",
          "description": "Represents an attempted build of a GitHub Pages site."
        },
        {
          "label": "Ping",
          "name": "ping",
          "description": "When you create a new webhook, we send you a simple ping event to let you know you have set up the webhook correctly."
        },
        {
          "label": "Project",
          "name": "project",
          "description": "Activity related to classic projects."
        },
        {
          "label": "Project Card",
          "name": "project_card",
          "description": "Activity related to cards in a classic project."
        },
        {
          "label": "Project Column",
          "name": "project_column",
          "description": "Activity related to columns in a classic project."
        },
        {
          "label": "Projects V2 Item",
          "name": "projects_v2_item",
          "description": "Activity related to items in a project."
        },
        {
          "label": "Public",
          "name": "public",
          "description": "When a private repository is made public."
        },
        {
          "label": "Pull Request",
          "name": "pull_request",
          "description": "Activity related to pull requests."
        },
        {
          "label": "Pull Request Review",
          "name": "pull_request_review",
          "description": "Activity related to pull request reviews."
        },
        {
          "label": "Pull Request Review Comment",
          "name": "pull_request_review_comment",
          "description": "Activity related to pull request review comments in the pull request unified diff."
        },
        {
          "label": "Pull Request Review Thread",
          "name": "pull_request_review_thread",
          "description": "Activity related to a comment thread on a pull request being marked as resolved or unresolved."
        },
        {
          "label": "Push",
          "name": "push",
          "description": "Activity related to one or more commits pushed to a repository branch or tag."
        },
        {
          "label": "Release",
          "name": "release",
          "description": "Activity related to a release."
        },
        {
          "label": "Repository Dispatch",
          "name": "repository_dispatch",
          "description": "Occurs when a GitHub App sends a POST request to the 'Create a repository dispatch event' endpoint."
        },
        {
          "label": "Repository",
          "name": "repository",
          "description": "Activity related to a repository."
        },
        {
          "label": "Repository Import",
          "name": "repository_import",
          "description": "Activity related to a repository being imported to GitHub."
        },
        {
          "label": "Repository Vulnerability Alert",
          "name": "repository_vulnerability_alert",
          "description": "Activity related to security vulnerability alerts in a repository."
        },
        {
          "label": "Security Advisory",
          "name": "security_advisory",
          "description": "Activity related to a security advisory reviewed by GitHub."
        },
        {
          "label": "Sponsorship",
          "name": "sponsorship",
          "description": "Activity related to a sponsorship listing."
        }
      ],
      "default": "push"
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "GitHub Webhook Secret",
          "name": "githubWebhookSecret"
        }
      ],
      "default": "githubWebhookSecret"
    }
  ],
  "inputParameters": [
    {
      "label": "Webhook Secret",
      "name": "webhookSecret",
      "type": "string",
      "description": "The secret used to validate GitHub webhook requests.",
      "optional": true,
      "show": {
        "actions.events": []
      }
    }
  ]
},
{
  "loadMethods": {},
  "label": "Tinfoil.sh Confidential AI API",
  "name": "tinfoilAI",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/node-schemas/tinfoil.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/node-schemas/tinfoil.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/node-schemas/tinfoil.png"
  },
  "type": "action",
  "category": "Artificial Intelligence",
  "version": 1,
  "description": "Chat completion via Tinfoil.sh API",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Chat Completion",
          "name": "chatCompletion"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Tinfoil API Key",
          "name": "tinfoilApi"
        }
      ],
      "default": "tinfoilApi"
    }
  ],
  "inputParameters": [
    {
      "label": "Model",
      "name": "model",
      "type": "options",
      "options": [
        {
          "label": "DeepSeek-R1-Distill-Llama-70B",
          "name": "deepseek-r1-70b"
        },
        {
          "label": "Mistral-Small-3.1-24B",
          "name": "mistral-small-3.1-24b"
        },
        {
          "label": "Llama 3.3 70B",
          "name": "llama-3.3-70b"
        },
        {
          "label": "Llama 3.2 1B",
          "name": "llama-3.2-1b"
        },
        {
          "label": "Llama Guard 3 1B",
          "name": "llama-guard-3-1b"
        },
        {
          "label": "Qwen 2.5 Coder 0.5B",
          "name": "qwen-2.5-coder-0.5b"
        },
        {
          "label": "Nomic Embed Text",
          "name": "nomic-embed-text"
        }
      ],
      "description": "Which Tinfoil model to use for the chat completion.",
      "default": "deepseek-r1-70b",
      "show": {
        "actions.operation": [
          "chatCompletion"
        ]
      }
    },
    {
      "label": "Enclave",
      "name": "enclave",
      "type": "string",
      "description": "The Tinfoil enclave host for your model.",
      "default": "deepseek-r1-70b-p.model.tinfoil.sh",
      "show": {
        "actions.operation": [
          "chatCompletion"
        ]
      }
    },
    {
      "label": "Repository",
      "name": "repo",
      "type": "string",
      "description": "The Tinfoil repo path backing your model deployment.",
      "default": "tinfoilsh/confidential-deepseek-r1-70b-prod",
      "show": {
        "actions.operation": [
          "chatCompletion"
        ]
      }
    },
     {
      "label": "Messages",
      "name": "messages",
      "type": "string",
      "default": "",
      "placeholder": "Say this is a test",
      "description": "The prompt to generate completions for",
      "show": {
        "actions.operation": [
          "chatCompletion"
        ]
      }
    },
    {
      "label": "Stream",
      "name": "stream",
      "type": "boolean",
      "description": "Whether to stream tokens as they’re generated.",
      "optional": true,
      "default": false,
      "show": {
        "actions.operation": [
          "chatCompletion"
        ]
      }
    }
  ],
  "filePath": "https://github.com/your-org/nodes/blob/main/nodes/TinfoilAI/TinfoilAI.js"
},
{
  "loadMethods": {},
  "label": "Google Gemini",
  "name": "gemini",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/gemini/nodes/Gemini/default.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/gemini/nodes/Gemini/light.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/gemini/nodes/Gemini/dark.svg"
  },
  "type": "action",
  "category": "Artificial Intelligence",
  "version": 2,
  "description": "Chat completions (and embeddings) via Gemini 2 models using OpenAI API compatibility",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Chat Completions",
          "name": "chatgpt"
        },
        {
          "label": "Chat Completions With History",
          "name": "chatCompletionsWithHistory"
        }
      ],
      "default": "chatgpt"
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Gemini API Key",
          "name": ""
        }
      ],
      "default": ""
    }
  ],
  "inputParameters": [
    {
      "label": "Model",
      "name": "model",
      "type": "asyncOptions",
      "loadMethod": "listModels",
      "description": "Gemini 2 model to use for text completions.",
      "default": "gemini-2.0-flash",
      "show": {
        "actions.operation": [
          "textCompletion"
        ]
      }
    },
    {
      "label": "Model",
      "name": "model",
      "type": "options",
      "options": [
        {
          "label": "Gemini 2.0 Flash",
          "name": "gemini-2.0-flash"
        },
        {
          "label": "Gemini 2.0 Flash-Lite",
          "name": "gemini-2.0-flash-lite"
        },
        {
          "label": "Gemini 1.5 Pro",
          "name": "gemini-1.5-pro"
        }
      ],
      "description": "Gemini 2 model to use for chat completions.",
      "default": "gemini-1.5-pro",
      "show": {
        "actions.operation": [
          "chatgpt",
          "chatCompletionsWithHistory"
        ]
      }
    },
    {
     "label": "Max Tokens",
    "name": "max_tokens",
      "type": "number",
     "description": "The maximum number of tokens to generate.",
"optional": true,
    "default": 2000,
     "show": {
      "actions.operation": [
        "chatgpt", 
        "textCompletion",
        "chatCompletionsWithHistory"
      ]
    }
     },
     {
       "label": "Top P",
       "name": "top_p",
       "type": "number",
       "description": "Nucleus sampling parameter to control diversity (between 0 and 1).",
       "optional": true,
       "default": 1.0,
       "show": {
         "actions.operation": [
           "chatgpt",
           "textCompletion",
           "chatCompletionsWithHistory"
         ]
       }
     },
     {
       "label": "Temperature",
       "name": "temperature",
       "type": "number",
       "description": "Controls randomness in output (between 0 and 1).",
 "optional": true,
 "default": 0.7,
 "show": {
   "actions.operation": [
         "chatgpt",
        "textCompletion",
        "chatCompletionsWithHistory"
         ]
      }
     },
{
 "label": "Top K",
       "name": "top_k",
 "type": "number",
      "description": "Limits number of options considered at each token generation (for certain models).",
      "optional": true,
      "default": 40,
     "show": {
        "actions.operation": [
         "chatgpt",
         "textCompletion",
         "chatCompletionsWithHistory"
        ]
       }
   },
    {
      "label": "Text Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Write me a 250 words essay on fish",
      "description": "The prompt for chat completions",
      "show": {
        "actions.operation": [
          "chatgpt",
          "chatCompletionsWithHistory"
        ]
      }
    },
    {
      "label": "Chat History",
      "name": "chatHistory",
      "type": "string",
      "default": "",
      "placeholder": "",
      "description": "Chat History",
      "show": {
        "actions.operation": [
          "textCompletion",
          "chatCompletionsWithHistory"
        ]
      }
    },
    {
      "label": "Image URL",
      "name": "imageURL",
      "type": "string",
      "default": "{{webhook_0.data.base64GIF}}",
      "placeholder": "Say this is a test",
      "description": "The base64 encoded image",
      "optional": true,
      "show": {
        "actions.operation": [
          "textCompletion",
          "chatgpt"
        ]
      }
    },
    {
      "label": "Text Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Say this is a test",
      "description": "The prompt to generate text completions",
      "show": {
        "actions.operation": [
          "textCompletion"
        ]
      }
    },
    {
      "label": "Image Description",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Photograph of an astronaut riding a horse",
      "description": "Description of the image you want to generate. The maximum length is 1000 characters.",
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Image Number",
      "name": "imageNumber",
      "type": "number",
      "placeholder": "1",
      "default": "1",
      "description": "The number of images to generate. Must be between 1 and 10.",
      "optional": true,
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Image Size",
      "name": "imageSize",
      "type": "options",
      "description": "The size of the generated images.",
      "options": [
        {
          "label": "256x256",
          "name": "256x256"
        },
        {
          "label": "512x512",
          "name": "512x512"
        },
        {
          "label": "1024x1024",
          "name": "1024x1024"
        }
      ],
      "optional": true,
      "default": "1024x1024",
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Response Format",
      "name": "response_format",
      "type": "options",
      "description": "The format in which the generated images are returned.",
      "options": [
        {
          "label": "url",
          "name": "url"
        },
        {
          "label": "b64_json",
          "name": "b64_json"
        }
      ],
      "default": "url",
      "optional": true,
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Gemini2/Gemini2.js"
},
	{
  "loadMethods": {},
  "label": "Lyft",
  "name": "lyft",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/3c742a177e34046a671d4a5e798857303deca92a/node-list/lyft.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/3c742a177e34046a671d4a5e798857303deca92a/node-list/lyft.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/3c742a177e34046a671d4a5e798857303deca92a/node-list/lyft.png"
  },
  "type": "webhook",
  "category": "Artificial Intelligence",
  "version": 1,
  "description": "Enrich and extend AI models with memory, tools, and templated context using MCP.",
  "incoming": 0,
  "outgoing": 1,
  "actions": [
    {
      "label": "Order Ride",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Use Prompt Template",
          "name": "promptTemplate"
        },
        {
          "label": "Call a Tool",
          "name": "callTool"
        },
        {
          "label": "Fetch Context Memory",
          "name": "getMemory"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "MCP API Key",
          "name": "mcpApiKey"
        }
      ],
      "default": "mcpApiKey"
    }
  ],
  "inputParameters": [
    {
      "label": "Template Name",
      "name": "templateName",
      "type": "string",
      "description": "Name of the prompt template to use.",
      "show": {
        "actions.operation": ["promptTemplate"]
      }
    },
    {
      "label": "Variables",
      "name": "templateVariables",
      "type": "json",
      "description": "Key-value pairs to fill the template.",
      "default": "{}",
      "show": {
        "actions.operation": ["promptTemplate"]
      }
    },
    {
      "label": "Tool Name",
      "name": "toolName",
      "type": "string",
      "description": "The name of the tool you'd like to run.",
      "show": {
        "actions.operation": ["callTool"]
      }
    },
    {
      "label": "Tool Input",
      "name": "toolInput",
      "type": "json",
      "description": "Input to provide to the tool.",
      "default": "{}",
      "show": {
        "actions.operation": ["callTool"]
      }
    },
    {
      "label": "Memory Key",
      "name": "memoryKey",
      "type": "string",
      "description": "Key or namespace to fetch context memory from.",
      "show": {
        "actions.operation": ["getMemory"]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/ModelContextProtocol/ModelContextProtocol.js"
},
  {
    "nodeState": null,
    "loadMethods": {},
    "label": "Azure OpenAI",
    "name": "azureOpenAI",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/AzureOpenAI/default.png",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/AzureOpenAI/light.png",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/AzureOpenAI/dark.png"
    },
    "type": "action",
    "category": "Artificial Intelligence",
    "version": 1,
    "description": "Wrapper around Azure OpenAI Enterprise for OpenAI large language models",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Select Operation",
        "name": "operation",
        "type": "options",
        "options": [
          {
            "label": "Generate Text",
            "name": "textCompletion"
          }
        ]
      }
    ],
    "credentials": [
      {
        "label": "Connect Credential",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "Bearer Token Auth",
            "name": "azureOpenAIApiKey"
          }
        ],
        "default": "azureOpenAIApiKey"
      }
    ],
    "inputParameters": [
      {
        "label": "Model Name",
        "name": "modelName",
        "type": "string",
        "default": "text-davinci-003"
      },
      {
        "label": "Temperature",
        "name": "temperature",
        "type": "number",
        "step": 0.1,
        "default": 0.9,
        "optional": true
      },
      {
        "label": "Max Tokens",
        "name": "maxTokens",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Top Probability",
        "name": "topP",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Frequency Penalty",
        "name": "frequencyPenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Presence Penalty",
        "name": "presencePenalty",
        "type": "number",
        "step": 0.1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      },
      {
        "label": "Best Of",
        "name": "bestOf",
        "type": "number",
        "step": 1,
        "optional": true,
        "additionalParams": true
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/AzureOpenAI/azureopenai.js"
  },
	{
  "loadMethods": {},
  "label": "zkSync Ethereum JSON-RPC API",
  "name": "zkSyncEthereumJSONRPC",
  "icons": {
    "default": "https://raw.githubusercontent.com/fruitbox12/ndoes/a9ab5c0b47803102408f1533a28c9116d6d2f14c/packages/server/nodes/73895099.png",
    "light": "https://raw.githubusercontent.com/fruitbox12/ndoes/a9ab5c0b47803102408f1533a28c9116d6d2f14c/packages/server/nodes/73895099.png",
    "dark": "https://raw.githubusercontent.com/fruitbox12/ndoes/a9ab5c0b47803102408f1533a28c9116d6d2f14c/packages/server/nodes/73895099.png"
  },
  "type": "action",
  "category": "Blockchain",
  "version": 1,
  "description": "Interact with zkSync's Ethereum-compatible JSON-RPC API to perform various blockchain operations.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Get Chain ID",
          "name": "eth_chainId",
          "description": "Retrieve the current chain ID."
        },
        {
          "label": "Call Smart Contract",
          "name": "eth_call",
          "description": "Execute a new message call immediately without creating a transaction on the blockchain."
        },
        {
          "label": "Estimate Gas",
          "name": "eth_estimateGas",
          "description": "Estimate the amount of gas needed to execute a transaction."
        },
        {
          "label": "Get Block Number",
          "name": "eth_blockNumber",
          "description": "Retrieve the number of the most recent block."
        },
        {
          "label": "Get Balance",
          "name": "eth_getBalance",
          "description": "Get the balance of an account at a specific block."
        }
      ],
      "default": "eth_chainId"
    }
  ],
  "credentials": [
    {
      "label": "RPC Endpoint",
      "name": "rpcEndpoint",
      "type": "string",
      "description": "The URL of the zkSync Ethereum JSON-RPC endpoint."
    }
  ],
  "inputParameters": [
    {
      "label": "From Address",
      "name": "from",
      "type": "string",
      "description": "The address the transaction is sent from.",
      "optional": true,
      "show": {
        "actions.operation": [
          "eth_call",
          "eth_estimateGas"
        ]
      }
    },
    {
      "label": "To Address",
      "name": "to",
      "type": "string",
      "description": "The address the transaction is directed to.",
      "show": {
        "actions.operation": [
          "eth_call",
          "eth_estimateGas"
        ]
      }
    },
    {
      "label": "Gas",
      "name": "gas",
      "type": "string",
      "description": "The gas provided for the transaction execution.",
      "optional": true,
      "show": {
        "actions.operation": [
          "eth_call",
          "eth_estimateGas"
        ]
      }
    },
    {
      "label": "Gas Price",
      "name": "gasPrice",
      "type": "string",
      "description": "The gas price used for each paid gas.",
      "optional": true,
      "show": {
        "actions.operation": [
          "eth_call",
          "eth_estimateGas"
        ]
      }
    },
    {
      "label": "Value",
      "name": "value",
      "type": "string",
      "description": "The value sent with this transaction.",
      "optional": true,
      "show": {
        "actions.operation": [
          "eth_call",
          "eth_estimateGas"
        ]
      }
    },
    {
      "label": "Data",
      "name": "data",
      "type": "string",
      "description": "The compiled code of a contract OR the hash of the invoked method signature and encoded parameters.",
      "optional": true,
      "show": {
        "actions.operation": [
          "eth_call",
          "eth_estimateGas"
        ]
      }
    },
    {
      "label": "Block Parameter",
      "name": "blockParameter",
      "type": "string",
      "description": "The block number or one of 'latest', 'earliest', 'pending'.",
      "optional": true,
      "default": "latest",
      "show": {
        "actions.operation": [
          "eth_call",
          "eth_getBalance"
        ]
      }
    },
    {
      "label": "Address",
      "name": "address",
      "type": "string",
      "description": "The address to get the balance of.",
      "show": {
        "actions.operation": [
          "eth_getBalance"
        ]
      }
    }
  ],
  "filePath": "https://example.com/zkSyncEthereumJSONRPC/zkSyncEthereumJSONRPC.js"
},
	{
  "loadMethods": {},
  "label": "zkSync L2 JSON-RPC",
  "name": "zkSyncL2JSONRPC",
  "icons": {
    "default": "https://raw.githubusercontent.com/fruitbox12/ndoes/a9ab5c0b47803102408f1533a28c9116d6d2f14c/packages/server/nodes/73895099.png",
    "light": "https://raw.githubusercontent.com/fruitbox12/ndoes/a9ab5c0b47803102408f1533a28c9116d6d2f14c/packages/server/nodes/73895099.png",
    "dark": "https://raw.githubusercontent.com/fruitbox12/ndoes/a9ab5c0b47803102408f1533a28c9116d6d2f14c/packages/server/nodes/73895099.png"
  },
  "type": "action",
  "category": "Blockchain",
  "version": 1,
  "description": "Interact with the zkSync Layer 2 JSON-RPC API for various blockchain operations.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Estimate Fee",
      "name": "zks_estimateFee",
      "description": "Estimate the fee for a given transaction call."
    },
    {
      "label": "Estimate Gas for L1 to L2",
      "name": "zks_estimateGasL1ToL2",
      "description": "Estimate the gas required for a transaction from Layer 1 to Layer 2."
    },
    {
      "label": "Get Bridge Contracts",
      "name": "zks_getBridgeContracts",
      "description": "Retrieve the addresses of bridge contracts for tokens on L2."
    },
    {
      "label": "Get L1 Chain ID",
      "name": "zks_L1ChainId",
      "description": "Return the chain ID of the connected Layer 1 network."
    },
    {
      "label": "Get L2 to L1 Log Proof",
      "name": "zks_getL2ToL1LogProof",
      "description": "Generate a proof for an L2 → L1 log."
    },
    {
      "label": "Get Main Contract",
      "name": "zks_getMainContract",
      "description": "Retrieve the address of the zkSync main contract."
    },
    {
      "label": "Get Testnet Paymaster",
      "name": "zks_getTestnetPaymaster",
      "description": "Retrieve the address of the testnet paymaster (only available on testnet)."
    }
  ],
  "credentials": [
    {
      "label": "zkSync RPC Endpoint",
      "name": "rpcEndpoint",
      "type": "string",
      "description": "The RPC endpoint URL for the zkSync network.",
      "default": "https://mainnet.era.zksync.io"
    }
  ],
  "inputParameters": [
    {
      "label": "From Address",
      "name": "from",
      "type": "string",
      "description": "The sender's address.",
      "optional": true,
      "show": {
        "actions.operation": [
          "zks_estimateFee",
          "zks_estimateGasL1ToL2"
        ]
      }
    },
    {
      "label": "To Address",
      "name": "to",
      "type": "string",
      "description": "The recipient's address.",
      "optional": true,
      "show": {
        "actions.operation": [
          "zks_estimateFee",
          "zks_estimateGasL1ToL2"
        ]
      }
    },
    {
      "label": "Data",
      "name": "data",
      "type": "string",
      "description": "The data payload for the transaction.",
      "optional": true,
      "show": {
        "actions.operation": [
          "zks_estimateFee",
          "zks_estimateGasL1ToL2"
        ]
      }
    },
    {
      "label": "Log Index",
      "name": "logIndex",
      "type": "number",
      "description": "The index of the log entry to prove.",
      "optional": true,
      "show": {
        "actions.operation": [
          "zks_getL2ToL1LogProof"
        ]
      }
    },
    {
      "label": "Transaction Hash",
      "name": "transactionHash",
      "type": "string",
      "description": "The hash of the transaction containing the log.",
      "optional": true,
      "show": {
        "actions.operation": [
          "zks_getL2ToL1LogProof"
        ]
      }
    }
  ],
  "filePath": "https://example.com/zksyncL2JSONRPC/zksyncL2JSONRPC.js"
},

{
  "label": "Optimism Scan",
  "name": "opscan",
   "icons": {
        "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/OptimismScan/optimismScan.svg",
        "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/OptimismScan/optimismScan.svg",
        "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/OptimismScan/optimismScan.svg"
      },
  "type": "action",
  "category": "Block Explorer",
  "version": 1,
  "description": "Perform Arbiscan operations",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "API",
      "name": "api",
      "type": "options",
      "options": [
        {
          "label": "Get Ether Balance for a Single Address",
          "name": "getEtherBalance",
          "description": "Returns the Ether balance of a given address."
        },
        {
          "label": "Get Ether Balance for Multiple Addresses(separated by a comma)",
          "name": "getEtherBalanceMulti",
          "description": "Returns the Ether balance of the addresses(each address separated by a comma) entered."
        },
        {
          "label": "Get transactions",
          "name": "getTransactions",
          "description": "Returns the list of transactions performed by an address, with optional pagination."
        },
        {
          "label": "Get internal transactions",
          "name": "getInternalTransactions",
          "description": "Returns the list of internal transactions performed by an address, with optional pagination."
        },
        {
          "label": "Get internal transactions by hash",
          "name": "getInternalTransactionsByHash",
          "description": "Returns the list of internal transactions performed within a transaction."
        },
        {
          "label": "Get internal transactions by block",
          "name": "getInternalTransactionsByBlock",
          "description": "Returns the list of internal transactions performed within a block range, with optional pagination."
        },
        {
          "label": "Get Contract ABI",
          "name": "getAbi",
          "description": "Returns the contract Application Binary Interface ( ABI ) of a verified smart contract."
        },
        {
          "label": "Get Contract Source Code",
          "name": "getContractSourceCode",
          "description": "Returns the Solidity source code of a verified smart contract."
        },
        {
          "label": "Check Transaction Receipt Status",
          "name": "getTransactionReceiptStatus",
          "description": "Returns the status code of a transaction execution."
        },
        {
          "label": "Check Contract Execution Status",
          "name": "getContractExecutionStatus",
          "description": "Returns the status code of a contract execution."
        },
        {
          "label": "Get ERC20 Token Supply",
          "name": "getErc20TokenSupply",
          "description": "Returns the total supply of a ERC-20 token. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
        },
        {
          "label": "Get ERC20 Token Balance",
          "name": "getErc20TokenBalance",
          "description": "Returns the current balance of a ERC-20 token of an address. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
        },
        {
          "label": "Get ETHER Price",
          "name": "getEtherPrice",
          "description": "Returns the latest price of 1 ETHER."
        },
        {
          "label": "Get Total Supply of Ether",
          "name": "getEtherSupply",
          "description": "Returns the current amount of Ether in circulation."
        }
      ],
      "default": "getEtherBalance"
    }
  ],
  "networks": [
    {
      "label": "Network",
      "name": "network",
      "type": "options",
      "options": [
        {
          "label": "Arbitrum Mainnet",
          "name": "arbitrum"
        },
        {
          "label": "Arbitrum Goerli",
          "name": "arbitrum-goerli"
        }
      ],
      "default": "homestead"
    }
  ],
 "credentials": [
          {
              "label": "Credential Method",
              "name": "credentialMethod",
              "type": "string",
              "options": [
                  {
                      "label": "Arbiscan API Key",
                      "name": "arbiscanApi"
                  }
              ],
              "default": "arbiscanApi"
          }
      ],
  "inputParameters": [
    {
      "label": "Address",
      "name": "address",
      "type": "string",
      "description": "The address parameter(s) required",
      "show": {
        "actions.api": [
          "getEtherBalance",
          "getTransactions",
          "getInternalTransactions",
          "getAbi",
          "getContractSourceCode",
          "getErc20TokenBalance"
        ]
      }
    },
    {
      "label": "Start Block",
      "name": "startBlock",
      "type": "number",
      "optional": true,
      "description": "the block number to start searching for transactions",
      "show": {
        "actions.api": [
          "getTransactions",
          "getInternalTransactions",
          "getInternalTransactionsByBlock"
        ]
      },
      "default": 0
    },
    {
      "label": "End Block",
      "name": "endBlock",
      "type": "number",
      "optional": true,
      "description": "the block number to stop searching for transactions",
      "show": {
        "actions.api": [
          "getTransactions",
          "getInternalTransactions",
          "getInternalTransactionsByBlock"
        ]
      }
    },
    {
      "label": "Page",
      "name": "page",
      "type": "number",
      "optional": true,
      "description": "the page number, if pagination is enabled",
      "show": {
        "actions.api": [
          "getTransactions",
          "getInternalTransactions",
          "getInternalTransactionsByBlock"
        ]
      },
      "default": 1
    },
    {
      "label": "Offset",
      "name": "offset",
      "type": "number",
      "optional": true,
      "description": "the number of transactions displayed per page",
      "show": {
        "actions.api": [
          "getTransactions",
          "getInternalTransactions",
          "getInternalTransactionsByBlock"
        ]
      },
      "default": 10
    },
    {
      "label": "Sort By",
      "name": "sortBy",
      "type": "options",
      "optional": true,
      "options": [
        {
          "label": "Desc",
          "name": "desc"
        },
        {
          "label": "Asc",
          "name": "asc"
        }
      ],
      "show": {
        "actions.api": [
          "getTransactions",
          "getInternalTransactions",
          "getInternalTransactionsByBlock"
        ]
      },
      "default": "desc"
    },
    {
      "label": "Transaction Hash",
      "name": "txhash",
      "type": "string",
      "description": "the string representing the transaction hash to check for internal transactions",
      "show": {
        "actions.api": [
          "getInternalTransactionsByHash",
          "getTransactionReceiptStatus",
          "getContractExecutionStatus"
        ]
      }
    },
    {
      "label": "Contract Address",
      "name": "contractAddress",
      "type": "string",
      "description": "the contract address of the ERC-20 token",
      "show": {
        "actions.api": [
          "getErc20TokenSupply",
          "getErc20TokenBalance"
        ]
      }
    },
    {
      "label": "Tag",
      "name": "tag",
      "type": "options",
      "options": [
        {
          "label": "latest",
          "name": "latest"
        }
      ],
      "default": "latest",
      "show": {
        "actions.api": [
          "getErc20TokenBalance"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Arbiscan/Arbiscan.js"
},
  {
    "label": "Arbiscan",
    "name": "arbiscan",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Arbiscan/arbitrum.png",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Arbiscan/arbitrum.png",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Arbiscan/arbitrum.png"
    },
    "type": "action",
    "category": "Block Explorer",
    "version": 1,
    "description": "Perform Arbiscan operations",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "API",
        "name": "api",
        "type": "options",
        "options": [
          {
            "label": "Get Ether Balance for a Single Address",
            "name": "getEtherBalance",
            "description": "Returns the Ether balance of a given address."
          },
          {
            "label": "Get Ether Balance for Multiple Addresses(separated by a comma)",
            "name": "getEtherBalanceMulti",
            "description": "Returns the Ether balance of the addresses(each address separated by a comma) entered."
          },
          {
            "label": "Get transactions",
            "name": "getTransactions",
            "description": "Returns the list of transactions performed by an address, with optional pagination."
          },
          {
            "label": "Get internal transactions",
            "name": "getInternalTransactions",
            "description": "Returns the list of internal transactions performed by an address, with optional pagination."
          },
          {
            "label": "Get internal transactions by hash",
            "name": "getInternalTransactionsByHash",
            "description": "Returns the list of internal transactions performed within a transaction."
          },
          {
            "label": "Get internal transactions by block",
            "name": "getInternalTransactionsByBlock",
            "description": "Returns the list of internal transactions performed within a block range, with optional pagination."
          },
          {
            "label": "Get Contract ABI",
            "name": "getAbi",
            "description": "Returns the contract Application Binary Interface (ABI) of a verified smart contract."
          },
          {
            "label": "Get Contract Source Code",
            "name": "getContractSourceCode",
            "description": "Returns the Solidity source code of a verified smart contract."
          },
          {
            "label": "Check Transaction Receipt Status",
            "name": "getTransactionReceiptStatus",
            "description": "Returns the status code of a transaction execution."
          },
          {
            "label": "Check Contract Execution Status",
            "name": "getContractExecutionStatus",
            "description": "Returns the status code of a contract execution."
          },
          {
            "label": "Get ERC20 Token Supply",
            "name": "getErc20TokenSupply",
            "description": "Returns the total supply of an ERC-20 token. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
          },
          {
            "label": "Get ERC20 Token Balance",
            "name": "getErc20TokenBalance",
            "description": "Returns the current balance of an ERC-20 token of an address. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
          },
          {
            "label": "Get ETHER Price",
            "name": "getEtherPrice",
            "description": "Returns the latest price of 1 ETHER."
          },
          {
            "label": "Get Total Supply of Ether",
            "name": "getEtherSupply",
            "description": "Returns the current amount of Ether in circulation."
          }
        ],
        "default": "getEtherBalance"
      }
    ],
    "networks": [
      {
        "label": "Network",
        "name": "network",
        "type": "options",
        "options": [
          {
            "label": "Arbitrum Mainnet",
            "name": "arbitrum"
          },
          {
            "label": "Arbitrum Goerli",
            "name": "arbitrum-goerli"
          }
        ],
        "default": "arbitrum"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "options",
        "options": [
          {
            "label": "Arbiscan API Key",
            "name": "arbiscanApi"
          }
        ],
        "default": "arbiscanApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Address",
        "name": "address",
        "type": "string",
        "description": "The address parameter(s) required",
        "show": {
          "actions.api": [
            "getEtherBalance",
            "getTransactions",
            "getInternalTransactions",
            "getAbi",
            "getContractSourceCode",
            "getErc20TokenBalance"
          ]
        }
      },
      {
        "label": "Start Block",
        "name": "startBlock",
        "type": "number",
        "optional": true,
        "description": "the block number to start searching for transactions",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": 0
      },
      {
        "label": "End Block",
        "name": "endBlock",
        "type": "number",
        "optional": true,
        "description": "the block number to stop searching for transactions",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        }
      },
      {
        "label": "Page",
        "name": "page",
        "type": "number",
        "optional": true,
        "description": "the page number, if pagination is enabled",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": 1
      },
      {
        "label": "Offset",
        "name": "offset",
        "type": "number",
        "optional": true,
        "description": "the number of transactions displayed per page",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": 10
      },
      {
        "label": "Sort By",
        "name": "sortBy",
        "type": "options",
        "optional": true,
        "options": [
          {
            "label": "Desc",
            "name": "desc"
          },
          {
            "label": "Asc",
            "name": "asc"
          }
        ],
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": "desc"
      },
      {
        "label": "Transaction Hash",
        "name": "txhash",
        "type": "string",
        "description": "the string representing the transaction hash to check for internal transactions",
        "show": {
          "actions.api": [
            "getInternalTransactionsByHash",
            "getTransactionReceiptStatus",
            "getContractExecutionStatus"
          ]
        }
      },
      {
        "label": "Contract Address",
        "name": "contractAddress",
        "type": "string",
        "description": "the contract address of the ERC-20 token",
        "show": {
          "actions.api": [
            "getErc20TokenSupply",
            "getErc20TokenBalance"
          ]
        }
      },
      {
        "label": "Tag",
        "name": "tag",
        "type": "options",
        "options": [
          {
            "label": "latest",
            "name": "latest"
          }
        ],
        "default": "latest",
        "show": {
          "actions.api": [
            "getErc20TokenBalance"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Arbiscan/Arbiscan.js"
  },
  {
    "nodeState": null,
    "_events": {},
    "_eventsCount": 0,
    "loadMethods": {},
    "label": "Zapier API Trigger",
    "name": "ZapierAPITrigger",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/ZapierAPITrigger/default.png",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/ZapierAPITrigger/light.png",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/ZapierAPITrigger/dark.png"
    },
    "type": "action",
    "category": "Integrations",
    "version": 1,
    "description": "Start workflow based on Zapier API events",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Select Endpoint",
        "name": "endpoint",
        "type": "options",
        "options": [
          {
            "label": "Get Apps [v1]",
            "name": "apps/v1"
          },
          {
            "label": "Get Apps [v2]",
            "name": "apps/v2"
          },
          {
            "label": "Get Categories",
            "name": "categories"
          },
          {
            "label": "Create Account",
            "name": "accounts"
          },
          {
            "label": "User Profile",
            "name": "accounts/profile"
          },
          {
            "label": "Get Zap Templates",
            "name": "zap-templates"
          },
          {
            "label": "Create a Zap",
            "name": "zaps"
          },
          {
            "label": "Get Zaps [v1]",
            "name": "zaps/v1"
          },
          {
            "label": "Get Zaps [v2]",
            "name": "zaps/v2"
          },
          {
            "label": "Get Actions",
            "name": "actions"
          },
          {
            "label": "Get Input Fields",
            "name": "actions/input-fields"
          },
          {
            "label": "Get Output Fields",
            "name": "actions/output-fields"
          },
          {
            "label": "Get Choices",
            "name": "actions/choices"
          },
          {
            "label": "Step Test",
            "name": "actions/step-test"
          },
          {
            "label": "Get Authentications",
            "name": "authentications"
          },
          {
            "label": "Create Authentication",
            "name": "authentications"
          }
        ]
      }
    ],
    "inputParameters": [
      {
        "label": "Payload",
        "name": "payload",
        "type": "json",
        "placeholder": "{\"key\": \"value\"}",
        "optional": true
      },
      {
        "label": "Query Parameters",
        "name": "queryParams",
        "type": "json",
        "placeholder": "{\"key\": \"value\"}",
        "optional": true
      }
    ],
    "credentials": [
      {
        "label": "Authorization",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "Bearer Token Auth",
            "name": "zapierBearerTokenAuth"
          }
        ],
        "default": "zapierBearerTokenAuth"
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Zapier/zapier.js"
  },
	{
	"nodeState": null,
    "loadMethods": {},
  "label": "Microsoft Teams",
  "name": "teams",
  "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/refs/heads/master/packages/components/nodes/Teams/teams.svg",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/refs/heads/master/packages/components/nodes/Teams/teams.svg",
    "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/refs/heads/master/packages/components/nodes/Teams/teams.svg"
  },
  "type": "action",
  "category": "Communication",
  "version": 1,
  "description": "Post message in Teams channel",
  "incoming": 1,
  "outgoing": 1,
  "inputParameters": [
    {
      "label": "Webhook URL",
      "name": "webhookUrl",
      "type": "string",
      "default": "",
      "description": "Webhook URL for the channel. Learn more: https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook"
    },
    {
      "label": "Message",
      "name": "text",
      "type": "string",
      "default": "",
      "description": "Message contents"
    }
  ]
},
  {
    "nodeState": null,
    "label": "Discord",
    "name": "discord",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Discord/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Discord/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Discord/dark.svg"
    },
    "type": "action",
    "category": "Communication",
    "version": 1,
    "description": "Post message in Discord channel",
    "incoming": 1,
    "outgoing": 1,
    "inputParameters": [
      {
        "label": "Webhook URL",
        "name": "webhookUrl",
        "type": "string",
        "default": "",
        "description": "Webhook URL for the channel. Learn how to get: https://www.youtube.com/watch?v=K8vgRWZnSZw"
      },
      {
        "label": "Content",
        "description": "Message contents (up to 2000 characters)",
        "name": "content",
        "type": "string",
        "default": ""
      },
      {
        "label": "Username",
        "name": "username",
        "type": "string",
        "default": "",
        "description": "Override the default username of the webhook",
        "optional": true
      },
      {
        "label": "Avatar URL",
        "name": "avatarUrl",
        "type": "string",
        "default": "",
        "description": "Override the default avatar of the webhook",
        "optional": true
      },
      {
        "label": "TTS",
        "name": "tts",
        "type": "boolean",
        "default": false,
        "description": "Send as Text To Speech message",
        "optional": true
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Discord/Discord.js"
  },
  {
    "nodeState": null,
    "label": "Send Email",
    "name": "emailSend",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/EmailSend/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/EmailSend/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/EmailSend/dark.svg"
    },
    "version": 1,
    "type": "action",
    "category": "Communication",
    "description": "Send email to single or multiple recipients",
    "incoming": 1,
    "outgoing": 1,
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "options",
        "options": [
          {
            "label": "Email Send Smtp",
            "name": "emailSendSmtp"
          }
        ],
        "default": "emailSendSmtp"
      },
      {
        "label": "SMTP Credentials",
        "name": "smtpCredentials",
        "type": "array",
        "description": "SMTP server credentials",
        "array": [
          {
            "label": "Host",
            "name": "host",
            "type": "string",
            "default": "",
            "description": "SMTP server host."
          },
          {
            "label": "Port",
            "name": "port",
            "type": "number",
            "default": 587,
            "description": "SMTP server port."
          },
          {
            "label": "Secure",
            "name": "secure",
            "type": "boolean",
            "default": false,
            "description": "Use TLS for secure connection."
          },
          {
            "label": "User",
            "name": "user",
            "type": "string",
            "default": "",
            "description": "Username for SMTP authentication.",
            "optional": true
          },
          {
            "label": "Password",
            "name": "password",
            "type": "string",
            "default": "",
            "description": "Password for SMTP authentication.",
            "optional": true
          }
        ]
      }
    ],
    "inputParameters": [
      {
        "label": "From Email",
        "name": "fromEmail",
        "type": "string",
        "default": "",
        "description": "Email address of the sender."
      },
      {
        "label": "To Email",
        "name": "toEmail",
        "type": "string",
        "default": "",
        "description": "Email address of the recipient. Multiple emails can be comma-separated.",
        "optional": true
      },
      {
        "label": "CC Email",
        "name": "ccEmail",
        "type": "string",
        "default": "",
        "description": "Email address of CC recipient. Multiple emails can be comma-separated.",
        "optional": true
      },
      {
        "label": "Subject",
        "name": "subject",
        "type": "string",
        "default": "",
        "description": "Subject line of the email."
      },
      {
        "label": "Body - Plain Text",
        "name": "text",
        "type": "string",
        "rows": 5,
        "default": "",
        "description": "Plain text message of email.",
        "optional": true
      },
      {
        "label": "Body - HTML",
        "name": "html",
        "type": "string",
        "rows": 5,
        "default": "",
        "description": "HTML text message of email.",
        "optional": true
      },
      {
        "label": "Ignore SSL",
        "name": "ignoreSSL",
        "type": "boolean",
        "default": false,
        "description": "Send email regardless of SSL validation.",
        "optional": true
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/EmailSend/EmailSend.js"
  },
  {
    "nodeState": null,
    "label": "Etherscan",
    "name": "etherscan",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Etherscan/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Etherscan/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Etherscan/dark.svg"
    },
    "type": "action",
    "category": "Block Explorer",
    "version": 1,
    "description": "Perform Etherscan operations",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "API",
        "name": "api",
        "type": "options",
        "options": [
          {
            "label": "Get Ether Balance for a Single Address",
            "name": "getEtherBalance",
            "description": "Returns the Ether balance of a given address."
          },
          {
            "label": "Get Ether Balance for Multiple Addresses(separated by a comma)",
            "name": "getEtherBalanceMulti",
            "description": "Returns the Ether balance of the addresses(each address separated by a comma) entered."
          },
          {
            "label": "Get transactions",
            "name": "getTransactions",
            "description": "Returns the list of transactions performed by an address, with optional pagination."
          },
          {
            "label": "Get internal transactions",
            "name": "getInternalTransactions",
            "description": "Returns the list of internal transactions performed by an address, with optional pagination."
          },
          {
            "label": "Get internal transactions by hash",
            "name": "getInternalTransactionsByHash",
            "description": "Returns the list of internal transactions performed within a transaction."
          },
          {
            "label": "Get internal transactions by block",
            "name": "getInternalTransactionsByBlock",
            "description": "Returns the list of internal transactions performed within a block range, with optional pagination."
          },
          {
            "label": "Get list of Blocks Validated by Address",
            "name": "getBlocksValidated",
            "description": "Returns the list of blocks validated by an address."
          },
          {
            "label": "Get Contract ABI",
            "name": "getAbi",
            "description": "Returns the contract Application Binary Interface ( ABI ) of a verified smart contract."
          },
          {
            "label": "Get Contract Source Code",
            "name": "getContractSourceCode",
            "description": "Returns the Solidity source code of a verified smart contract."
          },
          {
            "label": "Check Transaction Receipt Status",
            "name": "getTransactionReceiptStatus",
            "description": "Returns the status code of a transaction execution."
          },
          {
            "label": "Get ERC20 Token Supply",
            "name": "getErc20TokenSupply",
            "description": "Returns the total supply of a ERC-20 token. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
          },
          {
            "label": "Get ERC20 Token Balance",
            "name": "getErc20TokenBalance",
            "description": "Returns the current balance of a ERC-20 token of an address. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
          },
          {
            "label": "Get Historical ERC-20 Token TotalSupply by ContractAddress & BlockNo [PRO]",
            "name": "getHistoricalErc20TokenSupply",
            "description": "Returns the historical amount of a ERC-20 token in circulation at a certain block height. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
          },
          {
            "label": "Get Historical ERC-20 Token Account Balance by ContractAddress & BlockNo [PRO]",
            "name": "getHistoricalErc20TokenBalance",
            "description": "Returns the balance of a ERC-20 token of an address at a certain block height. The result is returned in the token's smallest decimal representation.\n                        Eg. a token with a balance of 215.241526476136819398 and 18 decimal places will be returned as 215241526476136819398"
          },
          {
            "label": "Get Token Info [PRO]",
            "name": "getTokenInfo",
            "description": "Returns project information and social media links of an ERC-20/ERC-721 token."
          },
          {
            "label": "Get ETHER Price",
            "name": "getEtherPrice",
            "description": "Returns the latest price of 1 ETHER."
          },
          {
            "label": "Get Historical ETHER Price [PRO]",
            "name": "getHistoricalEtherPrice",
            "description": "Returns the historical price of ETHER."
          }
        ],
        "default": "getEtherBalance"
      }
    ],
    "networks": [
      {
        "label": "Network",
        "name": "network",
        "type": "options",
        "options": [
          {
            "label": "Mainnet",
            "name": "homestead"
          },
          {
            "label": "Goerli",
            "name": "goerli"
          }
        ],
        "default": "homestead"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "Etherscan API Key",
            "name": "etherscanApi"
          }
        ],
        "default": "etherscanApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Address",
        "name": "address",
        "type": "string",
        "description": "The address parameter(s) required",
        "show": {
          "actions.api": [
            "getEtherBalance",
            "getHistoricalEtherBalance",
            "getTransactions",
            "getInternalTransactions",
            "getBlocksValidated",
            "getAbi",
            "getContractSourceCode",
            "getErc20TokenBalance",
            "getHistoricalErc20TokenBalance"
          ]
        }
      },
      {
        "label": "Block Number",
        "name": "blockno",
        "type": "number",
        "description": "the block number to check balance for eg. 2000000",
        "show": {
          "actions.api": [
            "getHistoricalEtherBalance",
            "getHistoricalErc20TokenSupply",
            "getHistoricalErc20TokenBalance"
          ]
        }
      },
      {
        "label": "Start Block",
        "name": "startBlock",
        "type": "number",
        "optional": true,
        "description": "the block number to start searching for transactions",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": 0
      },
      {
        "label": "End Block",
        "name": "endBlock",
        "type": "number",
        "optional": true,
        "description": "the block number to stop searching for transactions",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        }
      },
      {
        "label": "Page",
        "name": "page",
        "type": "number",
        "optional": true,
        "description": "the page number, if pagination is enabled",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock",
            "getBlocksValidated"
          ]
        },
        "default": 1
      },
      {
        "label": "Offset",
        "name": "offset",
        "type": "number",
        "optional": true,
        "description": "the number of transactions displayed per page",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock",
            "getBlocksValidated"
          ]
        },
        "default": 10
      },
      {
        "label": "Sort By",
        "name": "sortBy",
        "type": "options",
        "optional": true,
        "options": [
          {
            "label": "Desc",
            "name": "desc"
          },
          {
            "label": "Asc",
            "name": "asc"
          }
        ],
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": "desc"
      },
      {
        "label": "Transaction Hash",
        "name": "txhash",
        "type": "string",
        "description": "the string representing the transaction hash to check for internal transactions",
        "show": {
          "actions.api": [
            "getInternalTransactionsByHash",
            "getTransactionReceiptStatus"
          ]
        }
      },
      {
        "label": "Block Type",
        "name": "blockType",
        "type": "options",
        "options": [
          {
            "label": "blocks",
            "name": "blocks"
          }
        ],
        "default": "blocks",
        "show": {
          "actions.api": [
            "getBlocksValidated"
          ]
        }
      },
      {
        "label": "Contract Address",
        "name": "contractAddress",
        "type": "string",
        "description": "the contract address of the ERC-20 token",
        "show": {
          "actions.api": [
            "getErc20TokenSupply",
            "getErc20TokenBalance",
            "getHistoricalErc20TokenSupply",
            "getHistoricalErc20TokenBalance",
            "getTokenInfo"
          ]
        }
      },
      {
        "label": "Tag",
        "name": "tag",
        "type": "options",
        "options": [
          {
            "label": "latest",
            "name": "latest"
          }
        ],
        "default": "latest",
        "show": {
          "actions.api": [
            "getErc20TokenBalance"
          ]
        }
      },
      {
        "label": "Start Time",
        "name": "startTime",
        "type": "date",
        "optional": true,
        "show": {
          "actions.api": [
            "getHistoricalEtherPrice"
          ]
        }
      },
      {
        "label": "End Time",
        "name": "endTime",
        "type": "date",
        "optional": true,
        "show": {
          "actions.api": [
            "getHistoricalEtherPrice"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Etherscan/Etherscan.js"
  },
  {
    "nodeState": null,
    "label": "Any REST API (HTTP)",
    "name": "http",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/HTTP/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/HTTP/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/HTTP/dark.svg"
    },
    "type": "action",
    "category": "Development",
    "version": 1,
    "description": "Execute HTTP request",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Method",
        "name": "method",
        "type": "options",
        "options": [
          {
            "label": "GET",
            "name": "GET"
          },
          {
            "label": "POST",
            "name": "POST"
          },
          {
            "label": "PUT",
            "name": "PUT"
          },
          {
            "label": "DELETE",
            "name": "DELETE"
          },
          {
            "label": "HEAD",
            "name": "HEAD"
          }
        ],
        "default": "GET",
        "description": "HTTP method"
      }
    ],
    "credentials": [
      {
        "label": "Authorization",
        "name": "credentialMethod",
        "type": "options",
        "options": [
          {
            "label": "Basic Auth",
            "name": "httpBasicAuth"
          },
          {
            "label": "Bearer Token Auth",
            "name": "httpBearerTokenAuth"
          },
          {
            "label": "No Auth",
            "name": "noAuth",
            "hideRegisteredCredential": true
          }
        ],
        "default": "noAuth",
        "description": "Select the type of authorization to be used"
      }
    ],
    "inputParameters": [
      {
        "description": "Place the endpoint you want to target here",
        "label": "URL",
        "name": "url",
        "type": "string",
        "default": "",
        "placeholder": "http://<your-url>.com/"
      },
      {
        "description": "Indicate the headers you will be using",
        "label": "Headers",
        "name": "headers",
        "type": "array",
        "array": [
          {
            "label": "Key",
            "name": "key",
            "type": "string",
            "default": ""
          },
          {
            "label": "Value",
            "name": "value",
            "type": "string",
            "default": ""
          }
        ],
        "optional": true
      },
      {
        "description": "Indicate the Query Params you will be using",
        "label": "Query Params",
        "name": "queryParams",
        "type": "array",
        "array": [
          {
            "label": "Key",
            "name": "key",
            "type": "string",
            "default": ""
          },
          {
            "label": "Value",
            "name": "value",
            "type": "string",
            "default": ""
          }
        ],
        "optional": true
      },
      {
        "description": "Indicate the body type to be used json or text",
        "label": "Body Type",
        "name": "bodyType",
        "type": "options",
        "options": [
          {
            "label": "JSON",
            "name": "json"
          },
          {
            "label": "Text",
            "name": "text"
          }
        ],
        "default": "json",
        "optional": true
      },
      {
        "description": "Place a query body if applicable",
        "label": "Body",
        "name": "body",
        "type": "json",
        "show": {
          "inputParameters.bodyType": [
            "json"
          ]
        },
        "placeholder": "{\"var1\": \"value1\"}",
        "optional": true
      },
      {
        "description": "Place a query body if applicable",
        "label": "Body",
        "name": "body",
        "type": "string",
        "show": {
          "inputParameters.bodyType": [
            "text"
          ]
        },
        "default": "",
        "optional": true
      },
      {
        "description": "Indicate the response type to be used json, text, array buffer or raw(base64)",
        "label": "Response Type",
        "name": "responseType",
        "type": "options",
        "options": [
          {
            "label": "JSON",
            "name": "json"
          },
          {
            "label": "Text",
            "name": "text"
          },
          {
            "label": "Array Buffer",
            "name": "arraybuffer"
          },
          {
            "label": "Raw (Base64)",
            "name": "base64"
          }
        ],
        "optional": true
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/HTTP/HTTP.js"
  },
  {
    "nodeState": null,
    "loadMethods": {},
    "label": "Hugging Face",
    "name": "huggingFace",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/HuggingFace/default.png",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/HuggingFace/light.png",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/HuggingFace/dark.png"
    },
    "type": "action",
    "category": "Artificial Intelligence",
    "version": 1,
    "description": "Execute HuggingFace Inference API",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "description": "Select the type of Category",
        "label": "Category",
        "name": "category",
        "type": "options",
        "options": [
          {
            "label": "Image Classification",
            "name": "image-classification"
          },
          {
            "label": "Feature Extraction",
            "name": "feature-extraction"
          },
          {
            "label": "Object Detection",
            "name": "object-detection"
          },
          {
            "label": "Text Classification",
            "name": "text-classification"
          }
        ]
      },
      {
        "description": "Select a model for the tasks you need to perform",
        "label": "Model",
        "name": "model",
        "type": "asyncOptions",
        "loadMethod": "listModels"
      },
      {
        "description": "Select a image",
        "label": "Image File",
        "name": "imageFile",
        "type": "file",
        "show": {
          "actions.category": [
            "image-classification",
            "object-detection"
          ]
        }
      },
      {
        "description": "Insert a text",
        "label": "Input Text",
        "name": "inputText",
        "type": "string",
        "rows": 5,
        "show": {
          "actions.category": [
            "feature-extraction",
            "text-classification"
          ]
        }
      },
      {
        "label": "Inference Endpoint",
        "name": "inferenceURL",
        "type": "string",
        "optional": true,
        "description": "If this is not specify, the default free URL with limited usage will be used"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "HuggingFace Access Token",
            "name": "huggingFaceAccessToken"
          }
        ],
        "default": "huggingFaceAccessToken"
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/HuggingFace/HuggingFace.js"
  },
  {
    "nodeState": null,
    "label": "If Else",
    "name": "ifElse",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/IfElse/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/IfElse/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/IfElse/dark.svg"
    },
    "version": 1,
    "type": "action",
    "category": "Utilities",
    "description": "Split flows according to conditions set",
    "incoming": 1,
    "outgoing": 2,
    "inputParameters": [
      {
        "label": "Mode",
        "name": "mode",
        "type": "options",
        "options": [
          {
            "label": "AND",
            "name": "and",
            "description": "When all conditions are met"
          },
          {
            "label": "OR",
            "name": "or",
            "description": "When any of the conditions is met"
          }
        ],
        "default": "or",
        "description": "Type of conditions"
      },
      {
        "label": "Conditions",
        "name": "conditions",
        "type": "array",
        "description": "Values to compare",
        "array": [
          {
            "description": "Type of value to be used",
            "label": "Type",
            "name": "type",
            "type": "options",
            "options": [
              {
                "label": "String",
                "name": "string"
              },
              {
                "label": "Number",
                "name": "number"
              },
              {
                "label": "Boolean",
                "name": "boolean"
              }
            ],
            "default": "string"
          },
          {
            "label": "Value 1",
            "name": "value1",
            "type": "string",
            "default": "",
            "description": "First value to be compared with",
            "show": {
              "inputParameters.conditions[$index].type": [
                "string"
              ]
            }
          },
          {
            "label": "Operation",
            "name": "operation",
            "type": "options",
            "options": [
              {
                "label": "Contains",
                "name": "contains"
              },
              {
                "label": "Ends With",
                "name": "endsWith"
              },
              {
                "label": "Equal",
                "name": "equal"
              },
              {
                "label": "Not Contains",
                "name": "notContains"
              },
              {
                "label": "Not Equal",
                "name": "notEqual"
              },
              {
                "label": "Regex",
                "name": "regex"
              },
              {
                "label": "Starts With",
                "name": "startsWith"
              },
              {
                "label": "Is Empty",
                "name": "isEmpty"
              },
              {
                "label": "Not Empty",
                "name": "notEmpty"
              }
            ],
            "default": "equal",
            "description": "Type of operation",
            "show": {
              "inputParameters.conditions[$index].type": [
                "string"
              ]
            }
          },
          {
            "label": "Value 2",
            "name": "value2",
            "type": "string",
            "default": "",
            "description": "Second value to be compared with",
            "show": {
              "inputParameters.conditions[$index].type": [
                "string"
              ]
            },
            "hide": {
              "inputParameters.conditions[$index].operation": [
                "isEmpty",
                "notEmpty"
              ]
            }
          },
          {
            "label": "Value 1",
            "name": "value1",
            "type": "number",
            "default": "",
            "description": "First value to be compared with",
            "show": {
              "inputParameters.conditions[$index].type": [
                "number"
              ]
            }
          },
          {
            "label": "Operation",
            "name": "operation",
            "type": "options",
            "options": [
              {
                "label": "Smaller",
                "name": "smaller"
              },
              {
                "label": "Smaller Equal",
                "name": "smallerEqual"
              },
              {
                "label": "Equal",
                "name": "equal"
              },
              {
                "label": "Not Equal",
                "name": "notEqual"
              },
              {
                "label": "Larger",
                "name": "larger"
              },
              {
                "label": "Larger Equal",
                "name": "largerEqual"
              },
              {
                "label": "Is Empty",
                "name": "isEmpty"
              },
              {
                "label": "Not Empty",
                "name": "notEmpty"
              }
            ],
            "default": "equal",
            "description": "Type of operation",
            "show": {
              "inputParameters.conditions[$index].type": [
                "number"
              ]
            }
          },
          {
            "label": "Value 2",
            "name": "value2",
            "type": "number",
            "default": 0,
            "description": "Second value to be compared with",
            "show": {
              "inputParameters.conditions[$index].type": [
                "number"
              ]
            },
            "hide": {
              "inputParameters.conditions[$index].operation": [
                "isEmpty",
                "notEmpty"
              ]
            }
          },
          {
            "label": "Value 1",
            "name": "value1",
            "type": "boolean",
            "default": false,
            "description": "First value to be compared with",
            "show": {
              "inputParameters.conditions[$index].type": [
                "boolean"
              ]
            }
          },
          {
            "label": "Operation",
            "name": "operation",
            "type": "options",
            "options": [
              {
                "label": "Equal",
                "name": "equal"
              },
              {
                "label": "Not Equal",
                "name": "notEqual"
              }
            ],
            "default": "equal",
            "description": "Type of operation",
            "show": {
              "inputParameters.conditions[$index].type": [
                "boolean"
              ]
            }
          },
          {
            "label": "Value 2",
            "name": "value2",
            "type": "boolean",
            "default": false,
            "description": "Second value to be compared with",
            "show": {
              "inputParameters.conditions[$index].type": [
                "boolean"
              ]
            }
          }
        ]
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/IfElse/IfElse.js"
  },
  {
    "nodeState": null,
    "label": "NodeJS",
    "name": "nodeJS",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/NodeJS/default.png",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/NodeJS/light.png",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/NodeJS/dark.png"
    },
    "type": "action",
    "category": "Development",
    "version": 1,
    "description": "Execute code within NodeVM sandbox",
    "incoming": 1,
    "outgoing": 1,
    "inputParameters": [
      {
        "label": "Code",
        "name": "code",
        "type": "code",
        "default": "const example = 'Hello World!';\nreturn example;",
        "description": "Custom code to run"
      },
      {
        "label": "External Modules",
        "name": "external",
        "type": "json",
        "placeholder": "[\"axios\"]",
        "description": "Import installed dependencies within Outerbridge",
        "optional": true
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/NodeJS/NodeJS.js"
  },
  
{
  "loadMethods": {},
  "label": "OpenAI",
  "name": "openAI",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/1681038242chatgpt-logo-png.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/1681038242chatgpt-logo-png.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/1681038242chatgpt-logo-png.svg"
  },
  "type": "action",
  "category": "Artificial Intelligence",
  "version": 1,
  "description": "ChatGPT, image generation or text completion from prompt via OpenAI API",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "ChatGPT",
          "name": "chatgpt"
        },
        {
          "label": "Generate Image via text prompt",
          "name": "generateImage"
        },
        {
          "label": "Generate Text Completion via text prompt",
          "name": "textCompletion"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "OpenAI API Key",
          "name": "openAIApi"
        }
      ],
      "default": "openAIApi"
    }
  ],
  "inputParameters": [
    {
      "label": "Model",
      "name": "model",
      "type": "asyncOptions",
      "loadMethod": "listModels",
      "description": "AI model to use.",
      "default": "text-davinci-003",
      "show": {
        "actions.operation": [
          "textCompletion"
        ]
      }
    },
    {
      "label": "Model",
      "name": "model",
      "type": "options",
      "options": [
        {
          "label": "gpt-3.5-turbo",
          "name": "gpt-3.5-turbo"
        },
        {
          "label": "gpt-3.5-turbo-0125",
          "name": "gpt-3.5-turbo-0125"
        },
        {
          "label": "gpt-4",
          "name": "gpt-4"
        },
        {
          "label": "gpt-4o",
          "name": "gpt-4o"
        },
        {
          "label": "gpt-4-turbo-preview",
          "name": "gpt-4-turbo-preview"
        },
            {
          "label": "gpt-4o-mini",
          "name": "gpt-4o-mini"
        }
      ],
      "description": "ChatGPT model to use.",
      "default": "gpt-3.5-turbo",
      "show": {
        "actions.operation": [
          "chatgpt"
        ]
      }
    },
    {
      "label": "Max Tokens",
      "name": "max_tokens",
      "type": "number",
      "description": "The maximum number of tokens to generate.",
      "optional": true,
      "default": 100,
      "show": {
        "actions.operation": [
          "chatgpt",
          "textCompletion"
        ]
      }
    },
    {
      "label": "Top P",
      "name": "top_p",
      "type": "number",
      "description": "Nucleus sampling parameter to control diversity (between 0 and 1).",
      "optional": true,
      "default": 1.0,
      "show": {
        "actions.operation": [
          "chatgpt",
          "textCompletion"
        ]
      }
    },
    {
      "label": "Temperature",
      "name": "temperature",
      "type": "number",
      "description": "Controls randomness in output (between 0 and 1).",
      "optional": true,
      "default": 0.7,
      "show": {
        "actions.operation": [
          "chatgpt",
          "textCompletion"
        ]
      }
    },
    {
      "label": "Top K",
      "name": "top_k",
      "type": "number",
      "description": "Limits number of options considered at each token generation (for certain models).",
      "optional": true,
      "default": 40,
      "show": {
        "actions.operation": [
          "chatgpt",
          "textCompletion"
        ]
      }
    },
    {
      "label": "Text Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Write me a 250 words essay on fish",
      "description": "The prompt for ChatGPT",
      "show": {
        "actions.operation": [
          "chatgpt"
        ]
      }
    },
      {
      "label": "Stream",
      "name": "stream",
      "type": "boolean",
      "description": "Stream tokens as they arrive (only for chatgpt/textCompletion).",
      "optional": true,
      "default": false,
      "show": { "actions.operation": ["chatgpt", "textCompletion"] }
    },
    {
      "label": "Text Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Say this is a test",
      "description": "The prompt to generate completions for",
      "show": {
        "actions.operation": [
          "textCompletion"
        ]
      }
    },
    {
      "label": "Image Description",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Photograph of an astronaut riding a horse",
      "description": "Description of the image you want to generate. The maximum length is 1000 characters.",
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Image Number",
      "name": "imageNumber",
      "type": "number",
      "placeholder": "1",
      "default": "1",
      "description": "The number of images to generate. Must be between 1 and 10.",
      "optional": true,
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Image Size",
      "name": "imageSize",
      "type": "options",
      "description": "The size of the generated images.",
      "options": [
        {
          "label": "256x256",
          "name": "256x256"
        },
        {
          "label": "512x512",
          "name": "512x512"
        },
        {
          "label": "1024x1024",
          "name": "1024x1024"
        }
      ],
      "optional": true,
      "default": "1024x1024",
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Response Format",
      "name": "response_format",
      "type": "options",
      "description": "The format in which the generated images are returned.",
      "options": [
        {
          "label": "url",
          "name": "url"
        },
        {
          "label": "b64_json",
          "name": "b64_json"
        }
      ],
      "default": "url",
      "optional": true,
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/OpenAI/OpenAI.js"
},
  {
    "nodeState": null,
    "loadMethods": {},
    "label": "OpenAI Embeddings",
    "name": "openAIEmbeddings",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/1681038242chatgpt-logo-png.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/1681038242chatgpt-logo-png.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/1681038242chatgpt-logo-png.svg"
  },
    "type": "action",
    "category": "Artificial Intelligence",
    "version": 1,
    "description": "Generate embeddings for a given text using OpenAI API",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Operation",
        "name": "operation",
        "type": "options",
        "options": [
          {
            "label": "Generate Embeddings",
            "name": "generateEmbeddings"
          }
        ]
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "OpenAI API Key",
            "name": "openAIApi"
          }
        ],
        "default": "openAIApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Model",
        "name": "model",
        "type": "options",
        "options": [
          {
            "label": "text-embedding-ada-002",
            "name": "text-embedding-ada-002"
          },
          {
            "label": "text-similarity-ada-001",
            "name": "text-similarity-ada-001"
          },
          {
            "label": "text-embedding-babbage-001",
            "name": "text-embedding-babbage-001"
          }
        ],
        "description": "The OpenAI model to use for generating embeddings.",
        "default": "text-embedding-ada-002",
        "show": {
          "actions.operation": [
            "generateEmbeddings"
          ]
        }
      },
      {
        "label": "Text",
        "name": "text",
        "type": "string",
        "default": "",
        "placeholder": "Enter the text to generate embeddings for",
        "description": "The input text for generating embeddings.",
        "show": {
          "actions.operation": [
            "generateEmbeddings"
          ]
        }
      },
      {
        "label": "Strip New Lines",
        "name": "stripNewLines",
        "type": "boolean",
        "optional": true,
        "additionalParams": true,
        "description": "Whether to strip new lines from the input text.",
        "show": {
          "actions.operation": [
            "generateEmbeddings"
          ]
        }
      },
      {
        "label": "Batch Size",
        "name": "batchSize",
        "type": "number",
        "optional": true,
        "additionalParams": true,
        "description": "The batch size for generating embeddings.",
        "show": {
          "actions.operation": [
            "generateEmbeddings"
          ]
        }
      },
      {
        "label": "Timeout",
        "name": "timeout",
        "type": "number",
        "optional": true,
        "additionalParams": true,
        "description": "The timeout for the API call.",
        "show": {
          "actions.operation": [
            "generateEmbeddings"
          ]
        }
      },
      {
        "label": "Base Path",
        "name": "basepath",
        "type": "string",
        "optional": true,
        "additionalParams": true,
        "description": "The base path for the OpenAI API.",
        "show": {
          "actions.operation": [
            "generateEmbeddings"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/OpenAI/OpenAIEmbeddings.js"
  },
  {
    "label": "Subscan",
    "name": "subscan",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Subscan/subscan.png",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Subscan/subscan.png",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Subscan/subscan.png"
    },
    "type": "action",
    "category": "Block Explorer",
    "version": 1,
    "description": "Perform Subscan operations",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "API",
        "name": "api",
        "type": "options",
        "options": [
          {
            "label": "Get Account Info",
            "name": "getAccountInfo",
            "description": "Returns the account information of a given address."
          },
          {
            "label": "Get Account Balance",
            "name": "getAccountBalance",
            "description": "Returns the balance of a given address."
          },
          {
            "label": "Get Extrinsics",
            "name": "getExtrinsics",
            "description": "Returns the list of extrinsics performed by an address."
          },
          {
            "label": "Get Transfers",
            "name": "getTransfers",
            "description": "Returns the list of transfers performed by an address."
          },
          {
            "label": "Get Rewards",
            "name": "getRewards",
            "description": "Returns the list of rewards for a given address."
          },
          {
            "label": "Get Slashes",
            "name": "getSlashes",
            "description": "Returns the list of slashes for a given address."
          },
          {
            "label": "Get Staking Info",
            "name": "getStakingInfo",
            "description": "Returns the staking information for a given address."
          },
          {
            "label": "Get Block Info",
            "name": "getBlockInfo",
            "description": "Returns information about a given block."
          },
          {
            "label": "Get Event Info",
            "name": "getEventInfo",
            "description": "Returns information about a given event."
          },
          {
            "label": "Get Validators",
            "name": "getValidators",
            "description": "Returns a list of validators."
          }
        ],
        "default": "getAccountInfo"
      }
    ],
    "networks": [
      {
        "label": "Network",
        "name": "network",
        "type": "options",
        "options": [
          {
            "label": "Polkadot",
            "name": "polkadot"
          },
          {
            "label": "Kusama",
            "name": "kusama"
          },
          {
            "label": "Assethub Polkadot",
            "name": "assethub-polkadot"
          },
          {
            "label": "Assethub Kusama",
            "name": "assethub-kusama"
          },
          {
            "label": "Assethub Rococo",
            "name": "assethub-rococo"
          },
          {
            "label": "Assethub Westend",
            "name": "assethub-westend"
          },
          {
            "label": "Acala",
            "name": "acala"
          },
          {
            "label": "Acala Mandala",
            "name": "acala-mandala"
          },
          {
            "label": "Ajuna",
            "name": "ajuna"
          },
          {
            "label": "Alephzero",
            "name": "alephzero"
          },
          {
            "label": "Alephzero testnet",
            "name": "alephzero-testnet"
          },
          {
            "label": "Altair",
            "name": "altair"
          },
          {
            "label": "Astar",
            "name": "astar"
          },
          {
            "label": "Avail testnet",
            "name": "avail-testnet"
          },
          {
            "label": "Bajun",
            "name": "bajun"
          },
          {
            "label": "Basilisk",
            "name": "basilisk"
          },
          {
            "label": "Bifrost",
            "name": "bifrost"
          },
          {
            "label": "Bifrost Kusama",
            "name": "bifrost-kusama"
          },
          {
            "label": "BridgeHub Polkadot",
            "name": "bridgehub-polkadot"
          },
          {
            "label": "BridgeHub Kusama",
            "name": "bridgehub-kusama"
          },
          {
            "label": "BridgeHub Rococo",
            "name": "bridgehub-rococo"
          },
          {
            "label": "BridgeHub Westend",
            "name": "bridgehub-westend"
          },
          {
            "label": "Calamari",
            "name": "calamari"
          },
          {
            "label": "Centrifuge",
            "name": "centrifuge"
          },
          {
            "label": "Centrifuge Solo",
            "name": "centrifuge-solo"
          },
          {
            "label": "Clover",
            "name": "clover"
          },
          {
            "label": "Composable",
            "name": "composable"
          },
          {
            "label": "Continuum",
            "name": "continuum"
          },
          {
            "label": "Creditcoin",
            "name": "creditcoin"
          },
          {
            "label": "Creditcoin testnet",
            "name": "creditcoin-testnet"
          },
          {
            "label": "Crust",
            "name": "crust"
          },
          {
            "label": "Crust Shadow",
            "name": "crust-shadow"
          },
          {
            "label": "DeepBrain Chain",
            "name": "dbc"
          },
          {
            "label": "Dock",
            "name": "dock"
          },
          {
            "label": "Darwinia",
            "name": "darwinia"
          },
          {
            "label": "Enjin",
            "name": "enjin"
          },
          {
            "label": "Enjin-matrix",
            "name": "enjin-matrix"
          },
          {
            "label": "Enjin-canary-matrix",
            "name": "enjin-canary-matrix"
          },
          {
            "label": "Enjin-canary",
            "name": "enjin-canary"
          },
          {
            "label": "Humanode",
            "name": "humanode"
          },
          {
            "label": "HydraDX",
            "name": "hydradx"
          },
          {
            "label": "IntegriTEE",
            "name": "integritee"
          },
          {
            "label": "Interlay",
            "name": "interlay"
          },
          {
            "label": "Joystream",
            "name": "joystream"
          },
          {
            "label": "Karura",
            "name": "karura"
          },
          {
            "label": "Kintsugi",
            "name": "kintsugi"
          },
          {
            "label": "Khala",
            "name": "khala"
          },
          {
            "label": "Krest",
            "name": "krest"
          },
          {
            "label": "KILT Peregrine",
            "name": "kilt-peregrine"
          },
          {
            "label": "KILT Spiritnet",
            "name": "kilt-spiritnet"
          },
          {
            "label": "Mangata",
            "name": "mangata"
          },
          {
            "label": "Moonbase",
            "name": "moonbase"
          },
          {
            "label": "Moonbeam",
            "name": "moonbeam"
          },
          {
            "label": "Moonriver",
            "name": "moonriver"
          },
          {
            "label": "Manta",
            "name": "manta"
          },
          {
            "label": "Nodle",
            "name": "nodle"
          },
          {
            "label": "NeuroWeb",
            "name": "neuroweb"
          },
          {
            "label": "NeuroWeb Testnet",
            "name": "neuroweb-testnet"
          },
          {
            "label": "Peaq",
            "name": "peaq"
          },
          {
            "label": "Phala",
            "name": "phala"
          },
          {
            "label": "Picasso",
            "name": "picasso"
          },
          {
            "label": "Pioneer",
            "name": "pioneer"
          },
          {
            "label": "Polkadex",
            "name": "polkadex"
          },
          {
            "label": "Polkadex Parachain",
            "name": "polkadex-parachain"
          },
          {
            "label": "Polymesh",
            "name": "polymesh"
          },
          {
            "label": "Polymesh Testnet",
            "name": "polymesh-testnet"
          },
          {
            "label": "Quartz",
            "name": "quartz"
          },
          {
            "label": "Robonomics",
            "name": "robonomics"
          },
          {
            "label": "Rococo",
            "name": "rococo"
          },
          {
            "label": "Shibuya",
            "name": "shibuya"
          },
          {
            "label": "Shiden",
            "name": "shiden"
          },
          {
            "label": "SORA",
            "name": "sora"
          },
          {
            "label": "Subspace",
            "name": "subspace"
          },
          {
            "label": "Stafi",
            "name": "stafi"
          },
          {
            "label": "Turing",
            "name": "turing"
          },
          {
            "label": "Unique",
            "name": "unique"
          },
          {
            "label": "Vara",
            "name": "vara"
          },
          {
            "label": "Westend",
            "name": "westend"
          },
          {
            "label": "Zeitgeist",
            "name": "zeitgeist"
          }
        ],
        "default": "polkadot"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "Subscan API Key",
            "name": "subscanApi"
          }
        ],
        "default": "subscanApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Address",
        "name": "address",
        "type": "string",
        "description": "The address parameter(s) required",
        "show": {
          "actions.api": [
            "getAccountInfo",
            "getAccountBalance",
            "getExtrinsics",
            "getTransfers",
            "getRewards",
            "getSlashes",
            "getStakingInfo"
          ]
        }
      },
      {
        "label": "Block Number",
        "name": "blockNumber",
        "type": "number",
        "description": "The block number to get information for",
        "show": {
          "actions.api": [
            "getBlockInfo"
          ]
        }
      },
      {
        "label": "Event ID",
        "name": "eventId",
        "type": "string",
        "description": "The event ID to get information for",
        "show": {
          "actions.api": [
            "getEventInfo"
          ]
        }
      },
      {
        "label": "Page",
        "name": "page",
        "type": "number",
        "optional": true,
        "description": "The page number for pagination",
        "show": {
          "actions.api": [
            "getExtrinsics",
            "getTransfers",
            "getRewards",
            "getSlashes"
          ]
        },
        "default": 1
      },
      {
        "label": "Page Size",
        "name": "pageSize",
        "type": "number",
        "optional": true,
        "description": "The number of items per page",
        "show": {
          "actions.api": [
            "getExtrinsics",
            "getTransfers",
            "getRewards",
            "getSlashes"
          ]
        },
        "default": 10
      }
    ],
    "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/Subscan/Subscan.js"
  },
  {
    "label": "Typeform",
    "name": "typeform",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Typeform/typeform-icon.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Typeform/typeform-icon.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Typeform/cqwwehj77ryhux9mwnoj.png"
    },
    "type": "action",
    "category": "Communication",
    "version": 1,
    "description": "Perform Typeform operations",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "API",
        "name": "api",
        "type": "options",
        "options": [
          {
            "label": "Get all forms",
            "name": "getAllForms",
            "description": "Returns all the forms associated with your account"
          },
          {
            "label": "Get Typeform Responses",
            "name": "getTypeformResponses",
            "description": "Returns the submissions for your typeforms in JSON format"
          },
          {
            "label": "Create Typeform ",
            "name": "createTypeform",
            "description": "Creates a typeform for you"
          }
        ],
        "default": "getAllForms"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "Typeform API Key",
            "name": "typeformApi"
          }
        ],
        "default": "typeformApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Form Id",
        "name": "formId",
        "type": "string",
        "description": "The form id to retrieve all the responses to your typeform",
        "show": {
          "actions.api": [
            "getTypeformResponses"
          ]
        }
      },
      {
        "label": "Request Body",
        "name": "requestBody",
        "type": "json",
        "description": "The json object to create or update your typeform",
        "show": {
          "actions.api": [
            "createTypeform"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Typeform/Typeform.js"
  },
  {
    "loadMethods": {},
    "label": "Mailchimp",
    "name": "mailchimp",
    "icons": {
      "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Mailchimp/mailchimp.svg",
      "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Mailchimp/mailchimp.svg",
      "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Mailchimp/mailchimp.svg"
    },
    "type": "action",
    "category": "Communication",
    "version": 2,
    "description": "Execute Mailchimp API integration",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Operation",
        "name": "operation",
        "type": "options",
        "options": [
          {
            "label": "Get list of campaigns",
            "name": "listCampaigns",
            "description": "Returns the list of campaigns"
          },
          {
            "label": "Get campaign",
            "name": "getCampaign",
            "description": "Return single campaign"
          },
          {
            "label": "Delete campaign",
            "name": "deleteCampaign",
            "description": "It will delete campaigns"
          },
          {
            "label": "Add user to subscribe list",
            "name": "addUser",
            "description": "Add or update user to a subscribe list"
          },
          {
            "label": "Get user",
            "name": "getUser",
            "description": "Get information about a specific audience"
          },
          {
            "label": "Get list of users",
            "name": "listUsers",
            "description": "Get information about list of members in a specific audience list"
          }
        ],
        "default": "listCampaigns"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "Mailchimp Credentials",
            "name": "mailChimpCredential"
          }
        ],
        "default": "mailChimpCredential"
      }
    ],
    "inputParameters": [
      {
        "label": "Campaign",
        "name": "campaignId",
        "type": "asyncOptions",
        "loadMethod": "getCampaigns",
        "show": {
          "actions.operation": [
            "deleteCampaign",
            "getCampaign"
          ]
        }
      },
      {
        "label": "Audience List",
        "name": "listId",
        "type": "asyncOptions",
        "loadMethod": "getLists",
        "show": {
          "actions.operation": [
            "addUser",
            "getUser",
            "listUsers"
          ]
        }
      },
      {
        "label": "Customer Email",
        "name": "email",
        "type": "string",
        "show": {
          "actions.operation": [
            "addUser",
            "getUser"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Mailchimp/Mailchimp.js"
  },
  {
    "label": "OpenSea",
    "name": "opensea",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Opensea/opensea.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Opensea/opensea.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/Opensea/opensea.svg"
    },
    "type": "action",
    "category": "NFT",
    "version": 1,
    "description": "Query OpenSea information",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Operation",
        "name": "operation",
        "type": "options",
        "options": [
          {
            "label": "Retrieve Assets",
            "name": "retrieveAssets",
            "description": "Returns a set of NFTs."
          },
          {
            "label": "Retrieve Events",
            "name": "retrieveEvents",
            "description": "Returns a list of Events."
          },
          {
            "label": "Retrieve Collections",
            "name": "retrieveCollections",
            "description": "Returns a list of collections supported and vetted by OpenSea."
          },
          {
            "label": "Retrieve Bundles",
            "name": "retrieveBundles",
            "description": "Returns a list of bundles. Bundles are groups of NFTs for sale on OpenSea."
          },
          {
            "label": "Retrieve An Asset",
            "name": "retrieveAnAsset",
            "description": "Fetch information about a single NFT, based on its contract address and token ID."
          },
          {
            "label": "Retrieve A Contract",
            "name": "retrieveAContract",
            "description": "Fetch detailed information about a specified contract."
          },
          {
            "label": "Retrieve A Collection",
            "name": "retrieveACollection",
            "description": "Retrieve more in-depth information about an individual collection, including real time statistics such as floor price."
          },
          {
            "label": "Retrieve Collection Stats",
            "name": "retrieveCollectionStats",
            "description": "Fetch stats for a specific collection, including real-time floor price data."
          }
        ],
        "default": ""
      },
      {
        "label": "Event Type",
        "name": "event_type",
        "type": "options",
        "options": [
          {
            "label": "Auctions",
            "name": "created"
          },
          {
            "label": "Sales",
            "name": "successful"
          },
          {
            "label": "Transfer",
            "name": "transfer"
          },
          {
            "label": "Approve",
            "name": "approve"
          },
          {
            "label": "Bid Entered",
            "name": "bid_entered"
          },
          {
            "label": "Bid Withdrawn",
            "name": "bid_withdrawn"
          },
          {
            "label": "Cancelled",
            "name": "cancelled"
          },
          {
            "label": "All Events",
            "name": "all"
          }
        ],
        "default": "",
        "description": "The event type to filter",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Auction Type",
        "name": "auction_type",
        "type": "options",
        "options": [
          {
            "label": "Sell to the highest bidder",
            "name": "english",
            "description": "The highest bid wins at the end"
          },
          {
            "label": "Sell with a declining price",
            "name": "dutch",
            "description": "The price falls until someone purchases the item"
          },
          {
            "label": "CryptoPunks Auctions",
            "name": "min-price"
          }
        ],
        "default": "",
        "optional": true,
        "description": "Filter by an auction type",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ],
          "actions.event_type": [
            "created"
          ]
        }
      },
      {
        "label": "Environment",
        "name": "environment",
        "type": "options",
        "description": "Environment to execute operation: Test or Main",
        "options": [
          {
            "label": "TEST",
            "name": "https://testnets-api.opensea.io/api/v1",
            "description": "Testnet: https://testnets.opensea.io/"
          },
          {
            "label": "MAIN",
            "name": "https://api.opensea.io/api/v1",
            "description": "Mainnet: https://opensea.io/"
          }
        ],
        "default": ""
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "OpenSea API Key",
            "name": "openSeaApi",
            "description": "How to get API key: https://docs.opensea.io/reference/request-an-api-key"
          }
        ],
        "default": "openSeaApi",
        "show": {
          "actions.environment": [
            "https://api.opensea.io/api/v1"
          ]
        }
      }
    ],
    "inputParameters": [
      {
        "label": "Owner",
        "name": "owner",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "The address of the owner of the assets",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Token Ids",
        "name": "token_ids",
        "type": "json",
        "placeholder": "[\"1\", \"2\"]",
        "optional": true,
        "description": "An array of token IDs to search for",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Asset Contract Address",
        "name": "asset_contract_address",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "The NFT contract address for the assets",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Asset Contract Addresses",
        "name": "asset_contract_addresses",
        "type": "json",
        "placeholder": "[\"0xa\", \"0xb\"]",
        "optional": true,
        "description": "An array of contract addresses to search for",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Order By",
        "name": "order_by",
        "type": "options",
        "options": [
          {
            "label": "Sale Date",
            "name": "sale_date",
            "description": "Last sale's transaction's timestamp"
          },
          {
            "label": "Sale Count ",
            "name": "sale_count",
            "description": "Number of sales"
          },
          {
            "label": "Sale Price ",
            "name": "sale_price",
            "description": "Last sale's total_price"
          }
        ],
        "default": "",
        "optional": true,
        "description": "How to order the assets returned. By default, the API returns the fastest ordering. ",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Order Direction",
        "name": "order_direction",
        "type": "options",
        "options": [
          {
            "label": "Descending",
            "name": "desc"
          },
          {
            "label": "Ascending",
            "name": "asc"
          }
        ],
        "default": "",
        "optional": true,
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Offset",
        "name": "offset",
        "type": "number",
        "default": "",
        "optional": true,
        "description": "Offset for pagination",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Limit",
        "name": "limit",
        "type": "number",
        "default": 20,
        "optional": true,
        "description": "Limit for pagination. Defaults to 20, capped at 50.",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Collection",
        "name": "collection",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "Limit responses to members of a collection. Case sensitive and must match the collection slug exactly. Will return all assets from all contracts in a collection.",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Include Orders",
        "name": "include_orders",
        "type": "boolean",
        "default": false,
        "optional": true,
        "description": "A flag determining if order information should be included in the response.",
        "show": {
          "actions.operation": [
            "retrieveAssets"
          ]
        }
      },
      {
        "label": "Asset Contract Address",
        "name": "asset_contract_address",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "The NFT contract address for the assets for which to show events",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Collection Slug",
        "name": "collection_slug",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "Events from a collection. For instance: if a collection url is: https://opensea.io/collection/my-collection-1, collection slug is my-collection-1.",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Token Id",
        "name": "token_id",
        "type": "number",
        "default": "",
        "optional": true,
        "description": "The token's id to optionally filter by",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Account Address",
        "name": "account_address",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "A user account's wallet address to filter for events on an account",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Only Opensea",
        "name": "only_opensea",
        "type": "boolean",
        "default": false,
        "optional": true,
        "description": "Restrict to events on OpenSea auctions",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Offset",
        "name": "offset",
        "type": "number",
        "default": "",
        "description": "Offset for pagination",
        "optional": true,
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Limit",
        "name": "limit",
        "type": "number",
        "default": 20,
        "optional": true,
        "description": "Limit for pagination",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Occurred Before",
        "name": "occurred_before",
        "type": "date",
        "optional": true,
        "description": "Only show events listed before this date.",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Occurred After",
        "name": "occurred_after",
        "type": "date",
        "optional": true,
        "description": "Only show events listed after this date.",
        "show": {
          "actions.operation": [
            "retrieveEvents"
          ]
        }
      },
      {
        "label": "Asset Owner",
        "name": "asset_owner",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "A wallet address. If specified, will return collections where the owner owns at least one asset belonging to smart contracts in the collection.",
        "show": {
          "actions.operation": [
            "retrieveCollections"
          ]
        }
      },
      {
        "label": "Offset",
        "name": "offset",
        "type": "number",
        "default": "",
        "description": "Offset for pagination",
        "optional": true,
        "show": {
          "actions.operation": [
            "retrieveCollections"
          ]
        }
      },
      {
        "label": "Limit",
        "name": "limit",
        "type": "number",
        "default": 20,
        "optional": true,
        "description": "Limit for pagination",
        "show": {
          "actions.operation": [
            "retrieveCollections"
          ]
        }
      },
      {
        "label": "On Sale",
        "name": "on_sale",
        "type": "boolean",
        "default": false,
        "optional": true,
        "description": "If set to true, only show bundles currently on sale. If set to false, only show bundles that have been sold or cancelled.",
        "show": {
          "actions.operation": [
            "retrieveBundles"
          ]
        }
      },
      {
        "label": "Owner",
        "name": "owner",
        "type": "string",
        "default": "",
        "description": "Account address of the owner of a bundle (and all assets within)",
        "optional": true,
        "show": {
          "actions.operation": [
            "retrieveBundles"
          ]
        }
      },
      {
        "label": "Asset Contract Address",
        "name": "asset_contract_address",
        "type": "string",
        "default": "",
        "optional": true,
        "description": "Contract address of all the assets in a bundle. Only works for homogenous bundles, not mixed ones.",
        "show": {
          "actions.operation": [
            "retrieveBundles"
          ]
        }
      },
      {
        "label": "Asset Contract Addresses",
        "name": "asset_contract_addresses",
        "type": "json",
        "placeholder": "[\"0xa\", \"0xb\"]",
        "optional": true,
        "description": "An array of contract addresses to search for",
        "show": {
          "actions.operation": [
            "retrieveBundles"
          ]
        }
      },
      {
        "label": "Token Ids",
        "name": "token_ids",
        "type": "json",
        "placeholder": "[\"1\", \"2\"]",
        "optional": true,
        "description": "A list of token IDs for showing only bundles with at least one of the token IDs in the list",
        "show": {
          "actions.operation": [
            "retrieveBundles"
          ]
        }
      },
      {
        "label": "Offset",
        "name": "offset",
        "type": "number",
        "default": "",
        "description": "Offset for pagination",
        "optional": true,
        "show": {
          "actions.operation": [
            "retrieveBundles"
          ]
        }
      },
      {
        "label": "Limit",
        "name": "limit",
        "type": "number",
        "default": 20,
        "optional": true,
        "description": "Limit for pagination",
        "show": {
          "actions.operation": [
            "retrieveBundles"
          ]
        }
      },
      {
        "label": "Asset Contract Address",
        "name": "asset_contract_address",
        "type": "string",
        "default": "",
        "description": "The NFT contract address for the assets",
        "show": {
          "actions.operation": [
            "retrieveAnAsset"
          ]
        }
      },
      {
        "label": "Token Id",
        "name": "token_id",
        "type": "string",
        "default": "",
        "description": "Token ID for this item",
        "show": {
          "actions.operation": [
            "retrieveAnAsset"
          ]
        }
      },
      {
        "label": "Asset Contract Address",
        "name": "asset_contract_address",
        "type": "string",
        "default": "",
        "description": "The NFT contract address for the assets",
        "show": {
          "actions.operation": [
            "retrieveAContract"
          ]
        }
      },
      {
        "label": "Collection Slug",
        "name": "collection_slug",
        "type": "string",
        "default": "",
        "description": "For instance: if a collection url is: https://opensea.io/collection/my-collection-1, collection slug is my-collection-1.",
        "show": {
          "actions.operation": [
            "retrieveACollection",
            "retrieveCollectionStats"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Opensea/Opensea.js"
  },
  {
    "label": "OpenAI Assistants",
    "name": "openaiAssistants",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/OpenAI/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/OpenAI/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/OpenAI/dark.svg"
    },
    "type": "action",
    "category": "Artificial Intelligence",
    "version": 1,
    "description": "Perform operations with OpenAI Assistants API",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "API",
        "name": "api",
        "type": "options",
        "options": [
          {
            "label": "List Assistants",
            "name": "listAssistants",
            "description": "Fetches a list of all assistants."
          },
          {
            "label": "Run Assistant With Thread",
            "name": "sendMessageToThreadWithAssistant",
            "description": "Recieves a response from the assistant for a specific thread"
          },
          {
            "label": "Create Assistant",
            "name": "createAssistant",
            "description": "Creates a new assistant."
          },
          {
            "label": "Get Assistant",
            "name": "getAssistant",
            "description": "Retrieves details of a specific assistant using the assistant ID."
          },
          {
            "label": "Modify Assistant",
            "name": "modifyAssistant",
            "description": "Modifies an existing assistant using the assistant ID."
          },
          {
            "label": "Delete Assistant",
            "name": "deleteAssistant",
            "description": "Deletes an assistant using the assistant ID."
          },
          {
            "label": "List Threads",
            "name": "listThreads",
            "description": "Fetches a list of all threads."
          },
          {
            "label": "Create Thread",
            "name": "createThread",
            "description": "Creates a new thread."
          },
          {
            "label": "Get Thread",
            "name": "getThread",
            "description": "Retrieves details of a specific thread using the thread ID."
          },
          {
            "label": "List Messages",
            "name": "listMessages",
            "description": "Fetches a list of all messages."
          },
          {
            "label": "Create Message",
            "name": "createMessage",
            "description": "Creates a new message."
          },
          {
            "label": "Get Message",
            "name": "getMessage",
            "description": "Retrieves details of a specific message using the message ID."
          },
          {
            "label": "List Runs",
            "name": "listRuns",
            "description": "Fetches a list of all runs."
          },
          {
            "label": "Get Run",
            "name": "getRun",
            "description": "Retrieves details of a specific run using the run ID."
          },
          {
            "label": "Cancel Run",
            "name": "cancelRun",
            "description": "Cancels a specific run using the run ID."
          },
          {
            "label": "List Run Steps",
            "name": "listRunSteps",
            "description": "Fetches a list of all run steps."
          },
          {
            "label": "Get Run Step",
            "name": "getRunStep",
            "description": "Retrieves details of a specific run step using the run step ID."
          },
          {
            "label": "List Vector Stores",
            "name": "listVectorStores",
            "description": "Fetches a list of all vector stores."
          },
          {
            "label": "Create Vector Store",
            "name": "createVectorStore",
            "description": "Creates a new vector store."
          },
          {
            "label": "Get Vector Store",
            "name": "getVectorStore",
            "description": "Retrieves details of a specific vector store using the vector store ID."
          },
          {
            "label": "Delete Vector Store",
            "name": "deleteVectorStore",
            "description": "Deletes a vector store using the vector store ID."
          },
          {
            "label": "List Vector Store Files",
            "name": "listVectorStoreFiles",
            "description": "Fetches a list of all vector store files."
          },
          {
            "label": "Upload Vector Store File",
            "name": "uploadVectorStoreFile",
            "description": "Uploads a new vector store file."
          },
          {
            "label": "Get Vector Store File",
            "name": "getVectorStoreFile",
            "description": "Retrieves details of a specific vector store file using the file ID."
          },
          {
            "label": "Delete Vector Store File",
            "name": "deleteVectorStoreFile",
            "description": "Deletes a vector store file using the file ID."
          },
          {
            "label": "List Vector Store File Batches",
            "name": "listVectorStoreFileBatches",
            "description": "Fetches a list of all vector store file batches."
          },
          {
            "label": "Create Vector Store File Batch",
            "name": "createVectorStoreFileBatch",
            "description": "Creates a new vector store file batch."
          },
          {
            "label": "Get Vector Store File Batch",
            "name": "getVectorStoreFileBatch",
            "description": "Retrieves details of a specific vector store file batch using the batch ID."
          },
          {
            "label": "Delete Vector Store File Batch",
            "name": "deleteVectorStoreFileBatch",
            "description": "Deletes a vector store file batch using the batch ID."
          }
        ],
        "default": "listAssistants"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "OpenAI API Key",
            "name": "openAIApi"
          }
        ],
        "default": "openAIApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Assistant ID",
        "name": "assistant_id",
        "type": "string",
        "description": "The ID of the assistant.",
        "show": {
          "actions.api": [
            "getAssistant",
            "modifyAssistant",
            "deleteAssistant",
            "sendMessageToThreadWithAssistant"
          ]
        }
      },
      {
        "label": "Thread ID",
        "name": "thread_id",
        "type": "string",
        "description": "The ID of the thread.",
        "show": {
          "actions.api": [
            "getThread",
            "sendMessageToThreadWithAssistant"
          ]
        }
      },
      {
        "label": "Message",
        "name": "message",
        "type": "string",
        "description": "The message to send to the assistant on the thread",
        "show": {
          "actions.api": [
            "sendMessageToThreadWithAssistant"
          ]
        }
      },
      {
          "label": "Functions",
          "name": "openAIAssistantFunctions",
          "type": "array",
          "description": "The function to send to the assistant on the thread",
          "array": [
              {
                  "label": "Function Name",
                  "name": "functionName",
                  "type": "string",
                  "description": "The function to send to the assistant on the thread"
              },
              {
                  "label": "Webhook URL",
                  "name": "webhookURL",
                  "type": "string",
                  "description": "The function to send to the assistant on the thread"
              }
          ],
          "optional": true
      },
      {
        "label": "Message ID",
        "name": "message_id",
        "type": "string",
        "description": "The ID of the message.",
        "show": {
          "actions.api": [
            "getMessage"
          ]
        }
      },
      {
        "label": "Run ID",
        "name": "run_id",
        "type": "string",
        "description": "The ID of the run.",
        "show": {
          "actions.api": [
            "getRun",
            "cancelRun"
          ]
        }
      },
      {
        "label": "Run Step ID",
        "name": "run_step_id",
        "type": "string",
        "description": "The ID of the run step.",
        "show": {
          "actions.api": [
            "getRunStep"
          ]
        }
      },
      {
        "label": "Vector Store ID",
        "name": "vector_store_id",
        "type": "string",
        "description": "The ID of the vector store.",
        "show": {
          "actions.api": [
            "getVectorStore",
            "deleteVectorStore"
          ]
        }
      },
      {
        "label": "Vector Store File ID",
        "name": "vector_store_file_id",
        "type": "string",
        "description": "The ID of the vector store file.",
        "show": {
          "actions.api": [
            "getVectorStoreFile",
            "deleteVectorStoreFile"
          ]
        }
      },
      {
        "label": "Vector Store File Batch ID",
        "name": "vector_store_file_batch_id",
        "type": "string",
        "description": "The ID of the vector store file batch.",
        "show": {
          "actions.api": [
            "getVectorStoreFileBatch",
            "deleteVectorStoreFileBatch"
          ]
        }
      },
      {
        "label": "Name",
        "name": "name",
        "type": "string",
        "description": "The name of the assistant.",
        "show": {
          "actions.api": [
            "createAssistant",
            "modifyAssistant"
          ]
        }
      },
      {
        "label": "Description",
        "name": "description",
        "type": "string",
        "description": "The description of the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Functions",
        "name": "functions",
        "type": "json",
        "description": "The functions for the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Memory Settings",
        "name": "memory_settings",
        "type": "json",
        "description": "The memory settings for the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Log Settings",
        "name": "log_settings",
        "type": "json",
        "description": "The log settings for the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Configuration",
        "name": "configuration",
        "type": "json",
        "description": "The configuration details for the assistant.",
        "show": {
          "actions.api": [
            "modifyAssistant"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/OpenAIAssistants/OpenAIAssistants.js"
  },
	{
    "label": "OpenAI Assistants V2",
    "name": "openaiAssistantsV2",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/OpenAI/default.svg",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/OpenAI/light.svg",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/OpenAI/dark.svg"
    },
    "type": "action",
    "category": "Artificial Intelligence",
    "version": 2,
    "description": "Perform operations with OpenAI Assistants API",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "API",
        "name": "api",
        "type": "options",
        "options": [
          {
            "label": "List Assistants",
            "name": "listAssistants",
            "description": "Fetches a list of all assistants."
          },
          {
            "label": "Create Assistant",
            "name": "createAssistant",
            "description": "Creates a new assistant."
          },
          {
            "label": "Get Assistant",
            "name": "getAssistant",
            "description": "Retrieves details of a specific assistant using the assistant ID."
          },
          {
            "label": "Modify Assistant",
            "name": "modifyAssistant",
            "description": "Modifies an existing assistant using the assistant ID."
          },
          {
            "label": "Delete Assistant",
            "name": "deleteAssistant",
            "description": "Deletes an assistant using the assistant ID."
          },
          {
            "label": "List Threads",
            "name": "listThreads",
            "description": "Fetches a list of all threads."
          },
          {
            "label": "Create Thread",
            "name": "createThread",
            "description": "Creates a new thread."
          },
          {
            "label": "Get Thread",
            "name": "getThread",
            "description": "Retrieves details of a specific thread using the thread ID."
          },
          {
            "label": "List Messages",
            "name": "listMessages",
            "description": "Fetches a list of all messages."
          },
          {
            "label": "Create Message",
            "name": "createMessage",
            "description": "Creates a new message."
          },
          {
            "label": "Get Message",
            "name": "getMessage",
            "description": "Retrieves details of a specific message using the message ID."
          },
          {
            "label": "List Runs",
            "name": "listRuns",
            "description": "Fetches a list of all runs."
          },
          {
            "label": "Get Run",
            "name": "getRun",
            "description": "Retrieves details of a specific run using the run ID."
          },
          {
            "label": "Cancel Run",
            "name": "cancelRun",
            "description": "Cancels a specific run using the run ID."
          },
          {
            "label": "List Run Steps",
            "name": "listRunSteps",
            "description": "Fetches a list of all run steps."
          },
          {
            "label": "Get Run Step",
            "name": "getRunStep",
            "description": "Retrieves details of a specific run step using the run step ID."
          }
        ],
        "default": "listAssistants"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "OpenAI API Key",
            "name": "openAIApi"
          }
        ],
        "default": "openAIApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Assistant ID",
        "name": "assistant_id",
        "type": "string",
        "description": "The ID of the assistant.",
        "show": {
          "actions.api": [
            "getAssistant",
            "modifyAssistant",
            "deleteAssistant"
          ]
        }
      },
      {
        "label": "Thread ID",
        "name": "thread_id",
        "type": "string",
        "description": "The ID of the thread.",
        "show": {
          "actions.api": [
            "getThread"
          ]
        }
      },
      {
        "label": "Message ID",
        "name": "message_id",
        "type": "string",
        "description": "The ID of the message.",
        "show": {
          "actions.api": [
            "getMessage"
          ]
        }
      },
      {
        "label": "Run ID",
        "name": "run_id",
        "type": "string",
        "description": "The ID of the run.",
        "show": {
          "actions.api": [
            "getRun",
            "cancelRun"
          ]
        }
      },
      {
        "label": "Run Step ID",
        "name": "run_step_id",
        "type": "string",
        "description": "The ID of the run step.",
        "show": {
          "actions.api": [
            "getRunStep"
          ]
        }
      },
      {
        "label": "Vector Store ID",
        "name": "vector_store_id",
        "type": "string",
        "description": "The ID of the vector store.",
        "show": {
          "actions.api": [
            "getVectorStore",
            "deleteVectorStore"
          ]
        }
      },
      {
        "label": "Vector Store File ID",
        "name": "vector_store_file_id",
        "type": "string",
        "description": "The ID of the vector store file.",
        "show": {
          "actions.api": [
            "getVectorStoreFile",
            "deleteVectorStoreFile"
          ]
        }
      },
      {
        "label": "Vector Store File Batch ID",
        "name": "vector_store_file_batch_id",
        "type": "string",
        "description": "The ID of the vector store file batch.",
        "show": {
          "actions.api": [
            "getVectorStoreFileBatch",
            "deleteVectorStoreFileBatch"
          ]
        }
      },
      {
        "label": "Name",
        "name": "name",
        "type": "string",
        "description": "The name of the assistant.",
        "show": {
          "actions.api": [
            "createAssistant",
            "modifyAssistant"
          ]
        }
      },
      {
        "label": "Description",
        "name": "description",
        "type": "string",
        "description": "The description of the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Functions",
        "name": "functions",
        "type": "json",
        "description": "The functions for the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Memory Settings",
        "name": "memory_settings",
        "type": "json",
        "description": "The memory settings for the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Log Settings",
        "name": "log_settings",
        "type": "json",
        "description": "The log settings for the assistant.",
        "show": {
          "actions.api": [
            "createAssistant"
          ]
        }
      },
      {
        "label": "Configuration",
        "name": "configuration",
        "type": "json",
        "description": "The configuration details for the assistant.",
        "show": {
          "actions.api": [
            "modifyAssistant"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/OpenAIAssistants/OpenAIAssistants.js"
  },
  {
    "label": "BaseScan",
    "name": "basescan",
    "icons": {
      "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/BaseScan/8RFezC-o_400x400.png",
      "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/BaseScan/8RFezC-o_400x400.png",
      "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/BaseScan/8RFezC-o_400x400.png"
    },
    "type": "action",
    "category": "Block Explorer",
    "version": 1,
    "description": "Perform BaseScan operations",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "API",
        "name": "api",
        "type": "options",
        "options": [
          {
            "label": "Get Base Balance for a Single Address",
            "name": "getBaseBalance",
            "description": "Returns the Base balance of a given address."
          },
          {
            "label": "Get Base Balance for Multiple Addresses(separated by a comma)",
            "name": "getBaseBalanceMulti",
            "description": "Returns the Base balance of the addresses(each address separated by a comma) entered."
          },
          {
            "label": "Get transactions",
            "name": "getTransactions",
            "description": "Returns the list of transactions performed by an address, with optional pagination."
          },
          {
            "label": "Get internal transactions",
            "name": "getInternalTransactions",
            "description": "Returns the list of internal transactions performed by an address, with optional pagination."
          },
          {
            "label": "Get internal transactions by hash",
            "name": "getInternalTransactionsByHash",
            "description": "Returns the list of internal transactions performed within a transaction."
          },
          {
            "label": "Get internal transactions by block",
            "name": "getInternalTransactionsByBlock",
            "description": "Returns the list of internal transactions performed within a block range, with optional pagination."
          },
          {
            "label": "Get list of Blocks Validated by Address",
            "name": "getBlocksValidated",
            "description": "Returns the list of blocks validated by an address."
          },
          {
            "label": "Get Contract ABI",
            "name": "getAbi",
            "description": "Returns the contract Application Binary Interface ( ABI ) of a verified smart contract."
          },
          {
            "label": "Get Contract Source Code",
            "name": "getContractSourceCode",
            "description": "Returns the Solidity source code of a verified smart contract."
          },
          {
            "label": "Check Transaction Receipt Status",
            "name": "getTransactionReceiptStatus",
            "description": "Returns the status code of a transaction execution."
          },
          {
            "label": "Get ERC20 Token Supply",
            "name": "getErc20TokenSupply",
            "description": "Returns the total supply of a ERC-20 token. The result is returned in the token's smallest decimal representation."
          },
          {
            "label": "Get ERC20 Token Balance",
            "name": "getErc20TokenBalance",
            "description": "Returns the current balance of a ERC-20 token of an address. The result is returned in the token's smallest decimal representation."
          },
          {
            "label": "Get Historical ERC-20 Token TotalSupply by ContractAddress & BlockNo [PRO]",
            "name": "getHistoricalErc20TokenSupply",
            "description": "Returns the historical amount of a ERC-20 token in circulation at a certain block height. The result is returned in the token's smallest decimal representation."
          },
          {
            "label": "Get Historical ERC-20 Token Account Balance by ContractAddress & BlockNo [PRO]",
            "name": "getHistoricalErc20TokenBalance",
            "description": "Returns the balance of a ERC-20 token of an address at a certain block height. The result is returned in the token's smallest decimal representation."
          },
          {
            "label": "Get Token Info [PRO]",
            "name": "getTokenInfo",
            "description": "Returns project information and social media links of an ERC-20/ERC-721 token."
          },
          {
            "label": "Get BASE Price",
            "name": "getBasePrice",
            "description": "Returns the latest price of 1 BASE."
          },
          {
            "label": "Get Historical BASE Price [PRO]",
            "name": "getHistoricalBasePrice",
            "description": "Returns the historical price of BASE."
          }
        ],
        "default": "getBaseBalance"
      }
    ],
    "networks": [
      {
        "label": "Network",
        "name": "network",
        "type": "options",
        "options": [
          {
            "label": "Base Mainnet",
            "name": "homestead"
          },
          {
            "label": "Base Goerli",
            "name": "goerli"
          },
          {
            "label": "Base Sepolia",
            "name": "sepolia"
          }
        ],
        "default": "homestead"
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "BaseScan API Key",
            "name": "basescanApi"
          }
        ],
        "default": "basescanApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Address",
        "name": "address",
        "type": "string",
        "description": "The address parameter(s) required",
        "show": {
          "actions.api": [
            "getBaseBalance",
            "getTransactions",
            "getInternalTransactions",
            "getAbi",
            "getContractSourceCode",
            "getErc20TokenBalance"
          ]
        }
      },
      {
        "label": "Start Block",
        "name": "startBlock",
        "type": "number",
        "optional": true,
        "description": "The block number to start searching for transactions",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": 0
      },
      {
        "label": "End Block",
        "name": "endBlock",
        "type": "number",
        "optional": true,
        "description": "The block number to stop searching for transactions",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        }
      },
      {
        "label": "Page",
        "name": "page",
        "type": "number",
        "optional": true,
        "description": "The page number, if pagination is enabled",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": 1
      },
      {
        "label": "Offset",
        "name": "offset",
        "type": "number",
        "optional": true,
        "description": "The number of transactions displayed per page",
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": 10
      },
      {
        "label": "Sort By",
        "name": "sortBy",
        "type": "options",
        "optional": true,
        "options": [
          {
            "label": "Desc",
            "name": "desc"
          },
          {
            "label": "Asc",
            "name": "asc"
          }
        ],
        "show": {
          "actions.api": [
            "getTransactions",
            "getInternalTransactions",
            "getInternalTransactionsByBlock"
          ]
        },
        "default": "desc"
      },
      {
        "label": "Transaction Hash",
        "name": "txhash",
        "type": "string",
        "description": "The string representing the transaction hash to check for internal transactions",
        "show": {
          "actions.api": [
            "getInternalTransactionsByHash",
            "getTransactionReceiptStatus"
          ]
        }
      },
      {
        "label": "Contract Address",
        "name": "contractAddress",
        "type": "string",
        "description": "The contract address of the ERC-20 token",
        "show": {
          "actions.api": [
            "getErc20TokenSupply",
            "getErc20TokenBalance"
          ]
        }
      },
      {
        "label": "Tag",
        "name": "tag",
        "type": "options",
        "options": [
          {
            "label": "latest",
            "name": "latest"
          }
        ],
        "default": "latest",
        "show": {
          "actions.api": [
            "getErc20TokenBalance"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/BaseScan/BaseScan.js"
  },
  {
    "label": "ChainLink",
    "name": "chainLink",
    "icons": {
      "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ChainLink/chainlink.svg",
      "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ChainLink/chainlink.svg",
      "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ChainLink/chainlink.svg"
    },
    "type": "action",
    "category": "Decentralized Oracle Network",
    "version": 1,
    "description": "Execute ChainLink operations such as Data Feeds, Randomness, Oracles.",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Operation",
        "name": "operation",
        "type": "options",
        "options": [
          {
            "label": "Get Price Feeds",
            "name": "getPriceFeeds",
            "description": "Get real-world market prices of assets using ChainLink Oracle."
          },
          {
            "label": "Get Proof of Reserve",
            "name": "getProofReserve",
            "description": "Provide the status of the reserves for several assets."
          },
          {
            "label": "Get NFT Floor Pricing",
            "name": "getNFTFloorPricing",
            "description": "Get the lowest price of an NFT in a collection using ChainLink Oracle, ONLY available on Goerli."
          }
        ],
        "default": "getPriceFeeds"
      }
    ],
    "networks": [
      {
        "label": "Network",
        "name": "network",
        "type": "options",
        "options": [
          {
            "label": "Mainnet",
            "name": "homestead"
          },
          {
            "label": "Polygon",
            "name": "polygon"
          },
          {
            "label": "Optimism",
            "name": "optimism"
          },
          {
            "label": "Arbitrum One",
            "name": "arbitrum"
          },
          {
            "label": "Base",
            "name": "base"
          },
          {
            "label": "BNB Chain",
            "name": "bsc"
          },
          {
            "label": "Celo",
            "name": "celo"
          },
          {
            "label": "Avalanche",
            "name": "avalanche"
          },
          {
            "label": "Blast",
            "name": "blast"
          }
        ]
      },
      {
        "label": "Network Provider",
        "name": "networkProvider",
        "type": "asyncOptions",
        "loadMethod": "getNetworkProviders"
      },
      {
        "label": "RPC Endpoint",
        "name": "jsonRPC",
        "type": "string",
        "default": "",
        "show": {
          "networks.networkProvider": [
            "customRPC"
          ]
        }
      },
      {
        "label": "Websocket Endpoint",
        "name": "websocketRPC",
        "type": "string",
        "default": "",
        "show": {
          "networks.networkProvider": [
            "customWebsocket"
          ]
        }
      }
    ],
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "ChainLink API Key",
            "name": "chainLinkApi"
          }
        ],
        "default": "chainLinkApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Pair",
        "name": "pair",
        "type": "asyncOptions",
        "loadMethod": "getPairAddress",
        "show": {
          "actions.operation": [
            "getPriceFeeds"
          ]
        }
      },
      {
        "label": "Reserve",
        "name": "reserve",
        "type": "asyncOptions",
        "loadMethod": "getReserveAddress",
        "show": {
          "actions.operation": [
            "getProofReserve"
          ]
        }
      },
      {
        "label": "NFT Collection",
        "name": "nftCollection",
        "type": "asyncOptions",
        "loadMethod": "getNftCollection",
        "show": {
          "actions.operation": [
            "getNFTFloorPricing"
          ]
        }
      }
    ],
    "filePath": "https://example.com/nodes/ChainLink/ChainLink.js"
  },
{
  "label": "Chainlink Functions",
  "name": "chainlinkFunctions",
  "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ChainLink/chainlink.svg",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ChainLink/chainlink.svg",
    "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ChainLink/chainlink.svg"
  },  
  "type": "action",
  "category": "Development",
  "version": 1,
  "description": "Execute code within NodeVM sandbox",
  "incoming": 1,
  "outgoing": 1,
  "inputParameters": [
    {
      "label": "Code",
      "name": "code",
      "type": "code",
      "default": "console.info($nodeData);\nconst example = 'Hello World!';\nreturn example;",
      "description": "Custom code to run"
    },
    {
      "label": "External Modules",
      "name": "external",
      "type": "json",
      "placeholder": "[\"axios\"]",
      "description": "Import installed dependencies within Outerbridge",
      "optional": true
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/NodeJS/NodeJS.js"
},
  {
    "loadMethods": {},
    "label": "Uniswap",
    "name": "uniswap",
    "icons": {
      "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Uniswap/uniswap.png",
      "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Uniswap/uniswap.png",
      "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Uniswap/uniswap.png"
    },
    "type": "action",
    "category": "Decentralized Finance",
    "version": 1,
    "description": "Execute Uniswap operations",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
      {
        "label": "Operation",
        "name": "operation",
        "type": "options",
        "options": [
          {
            "label": "Swap Tokens",
            "name": "swapTokens",
            "description": "Supports Uniswap v2 and v3 prices together and returns the best price for swapping."
          },
          {
            "label": "Get Pairs",
            "name": "getPairs",
            "description": "Get most liquid pairs."
          },
          {
            "label": "Custom Query",
            "name": "customQuery",
            "description": "Custom subgraph query to retrieve more information."
          }
        ],
        "default": "swapTokens"
      }
    ],
    "networks": [
      {
        "label": "Network",
        "name": "network",
        "type": "options",
        "options": [
          {
            "label": "Ethereum Mainnet",
            "name": "homestead",
            "parentGroup": "Ethereum"
          },
          {
            "label": "Polygon (PoS)",
            "name": "matic",
            "parentGroup": "Polygon"
          },
          {
            "label": "Optimism",
            "name": "optimism",
            "parentGroup": "Optimism"
          },
          {
            "label": "Arbitrum One",
            "name": "arbitrum",
            "parentGroup": "Arbitrum"
          },
          {
            "label": "Base",
            "name": "base",
            "parentGroup": "Base"
          },
          {
            "label": "BNB Chain",
            "name": "bnb",
            "parentGroup": "BNB"
          },
          {
            "label": "Celo",
            "name": "celo",
            "parentGroup": "Celo"
          },
          {
            "label": "Avalanche",
            "name": "avalanche",
            "parentGroup": "Avalanche"
          },
          {
            "label": "Blast",
            "name": "blast",
            "parentGroup": "Blast"
          }
        ],
        "default": "homestead"
      }
    ],
    "credentials": [],
    "inputParameters": [
      {
        "label": "From Token",
        "name": "fromToken",
        "type": "asyncOptions",
        "description": "Contract address of the token you want to convert FROM.",
        "loadMethod": "getTokens",
        "show": {
          "actions.operation": [
            "swapTokens"
          ]
        }
      },
      {
        "label": "To Token",
        "name": "toToken",
        "type": "asyncOptions",
        "description": "Contract address of the token you want to convert TO.",
        "loadMethod": "getTokens",
        "show": {
          "actions.operation": [
            "swapTokens"
          ]
        }
      },
      {
        "label": "Amount To Swap",
        "name": "amountToSwap",
        "type": "number",
        "show": {
          "actions.operation": [
            "swapTokens"
          ]
        }
      },
      {
        "label": "Select Wallet",
        "name": "wallet",
        "type": "asyncOptions",
        "description": "Wallet account to swap tokens.",
        "loadFromDbCollections": [
          "Wallet"
        ],
        "loadMethod": "getWallets",
        "show": {
          "actions.operation": [
            "swapTokens"
          ]
        }
      },
      {
        "label": "Query",
        "name": "query",
        "type": "string",
        "rows": 10,
        "show": {
          "actions.operation": [
            "customQuery"
          ]
        }
      },
      {
        "label": "Slippage Tolerance (%)",
        "name": "slippage",
        "type": "number",
        "default": 0.5,
        "optional": true,
        "description": "How large of a price movement to tolerate before trade will fail to execute. Default is 0.5%.",
        "show": {
          "actions.operation": [
            "swapTokens"
          ]
        }
      },
      {
        "label": "Tx Deadline (mins)",
        "name": "deadlineMinutes",
        "type": "number",
        "default": 20,
        "optional": true,
        "description": "Minutes after which the transaction will fail. Default is 20 mins.",
        "show": {
          "actions.operation": [
            "swapTokens"
          ]
        }
      },
      {
        "label": "Disable Multihops",
        "name": "disableMultihops",
        "type": "boolean",
        "default": false,
        "optional": true,
        "description": "Restricts swaps to direct pairs only. Default is false.",
        "show": {
          "actions.operation": [
            "swapTokens"
          ]
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Uniswap/Uniswap.js"
  },
  {
    "label": "X API",
    "name": "x",
    "icons": {
      "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Twitter/Twitter-Logo.png",
      "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Twitter/Twitter-Logo.png",
      "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/Twitter/Twitter-Logo.png"
    },
    "type": "action",
    "category": "Communication",
    "description": "Manage posts and lookup users using the X API v2",
    "version": 1,
    "incoming": 1,
    "outgoing": 1,
    "credentials": [
      {
        "label": "Credential Method",
        "name": "credentialMethod",
        "type": "string",
        "options": [
          {
            "label": "X API Bearer Token",
            "name": "xApi"
          }
        ],
        "default": "xApi"
      }
    ],
    "inputParameters": [
      {
        "label": "Action",
        "name": "action",
        "type": "options",
        "description": "Select the action to perform.",
        "options": [
          {
            "label": "Create Post",
            "name": "createPost"
          },
          {
            "label": "Delete Post",
            "name": "deletePost"
          },
          {
            "label": "Lookup User by ID",
            "name": "lookupUserId"
          },
          {
            "label": "Lookup User by Username",
            "name": "lookupUsername"
          }
        ],
        "default": "createPost"
      },
      {
        "label": "Post Content",
        "name": "postContent",
        "type": "string",
        "default": "",
        "description": "The content of the post to be created (required for Create Post action).",
        "visibleIf": {
          "action": "createPost"
        }
      },
      {
        "label": "Post ID",
        "name": "postId",
        "type": "string",
        "default": "",
        "description": "The ID of the post to be deleted (required for Delete Post action).",
        "visibleIf": {
          "action": "deletePost"
        }
      },
      {
        "label": "User ID",
        "name": "userId",
        "type": "string",
        "default": "",
        "description": "The ID of the user to look up (required for Lookup User by ID action).",
        "visibleIf": {
          "action": "lookupUserId"
        }
      },
      {
        "label": "Username",
        "name": "username",
        "type": "string",
        "default": "",
        "description": "The username of the user to look up (required for Lookup User by Username action).",
        "visibleIf": {
          "action": "lookupUsername"
        }
      }
    ],
    "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/X/X.js"
  },
{
  "loadMethods": {},
  "label": "Solidity",
  "name": "solidity",
  "icons": {
    "default": "https://github.com/Outerbridgeio/Outerbridge/raw/refs/heads/master/packages/components/nodes/Solidity/solidity.svg",
    "light": "https://github.com/Outerbridgeio/Outerbridge/raw/refs/heads/master/packages/components/nodes/Solidity/solidity.svg",
    "dark": "https://github.com/Outerbridgeio/Outerbridge/raw/refs/heads/master/packages/components/nodes/Solidity/solidity.svg"
  },
  "type": "action",
  "category": "Smart Contract",
  "version": 1,
  "description": "Compile and Deploy Solidity Code",
  "incoming": 1,
  "outgoing": 1,
  "networks": [
    {
      "label": "Network",
      "name": "network",
      "type": "options",
      "options": [
        {
          "label": "Mainnet",
          "name": "homestead",
          "parentGroup": "Ethereum"
        },
        {
          "label": "Goerli",
          "name": "goerli",
          "parentGroup": "Ethereum"
        },
        {
          "label": "Polygon Mainnet",
          "name": "matic",
          "parentGroup": "Polygon"
        },
        {
          "label": "Polygon Mumbai",
          "name": "maticmum",
          "parentGroup": "Polygon"
        },
        {
          "label": "Arbitrum Mainnet",
          "name": "arbitrum",
          "parentGroup": "Arbitrum"
        },
        {
          "label": "Arbitrum Goerli",
          "name": "arbitrum-goerli",
          "parentGroup": "Arbitrum"
        },
        {
          "label": "Optimism Mainnet",
          "name": "optimism",
          "parentGroup": "Optimism"
        },
        {
          "label": "Optimism Goerli",
          "name": "optimism-goerli",
          "parentGroup": "Optimism"
        },
        {
          "label": "Binance Smart Chain Mainnet",
          "name": "bsc",
          "parentGroup": "Binance Smart Chain"
        },
        {
          "label": "Binance Smart Chain Testnet",
          "name": "bsc-testnet",
          "parentGroup": "Binance Smart Chain"
        }
      ],
      "default": "goerli"
    },
    {
      "label": "Network Provider",
      "name": "networkProvider",
      "type": "asyncOptions",
      "loadMethod": "getNetworkProviders"
    },
    {
      "label": "RPC Endpoint",
      "name": "jsonRPC",
      "type": "string",
      "default": "",
      "show": {
        "networks.networkProvider": [
          "customRPC"
        ]
      }
    },
    {
      "label": "Websocket Endpoint",
      "name": "websocketRPC",
      "type": "string",
      "default": "",
      "show": {
        "networks.networkProvider": [
          "customWebsocket"
        ]
      }
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Alchemy API Key",
          "name": "alchemyApi",
          "show": {
            "networks.networkProvider": [
              "alchemy"
            ]
          }
        },
        {
          "label": "Infura API Key",
          "name": "infuraApi",
          "show": {
            "networks.networkProvider": [
              "infura"
            ]
          }
        },
        {
          "label": "QuickNode Endpoints",
          "name": "quickNodeEndpoints",
          "show": {
            "networks.networkProvider": [
              "quicknode"
            ]
          }
        }
      ],
      "show": {
        "networks.networkProvider": [
          "alchemy",
          "infura",
          "quicknode"
        ]
      }
    }
  ],
  "inputParameters": [
    {
      "label": "Solidity Code",
      "name": "code",
      "type": "code",
      "placeholder": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MyToken is ERC20 {\n    constructor() ERC20(\"MyToken\", \"MTK\") {}\n}",
      "description": "Custom Solidity code to compile and deploy"
    },
    {
      "label": "Contract Name",
      "name": "contractName",
      "description": "Contract Name to deploy the Solidity Code",
      "type": "string",
      "default": "",
      "placeholder": "MyContract"
    },
    {
      "label": "Select Wallet",
      "name": "wallet",
      "type": "string",
      "description": "Enter the wallet private key to deploy Solidity code",
      "default": ""
    },
    {
      "label": "Constructor Parameters",
      "name": "parameters",
      "type": "json",
      "placeholder": "[ \"param1\", \"param2\" ]",
      "description": "Input parameters for constructor",
      "optional": true
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/Solidity/Solidity.js"
},
	
{
  "loadMethods": {
    "listModels": "listModels"
  },
  "label": "NVIDIA NIM API",
  "name": "nvidiaNim",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/nvidia.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/nvidia.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/nvidia.png"
  },
  "type": "action",
  "category": "Artificial Intelligence",
  "version": 1,
  "description": "Interact with NVIDIA NIM API to create chat completions, list available models, or retrieve model metadata.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "NIM API Action",
      "name": "api",
      "type": "options",
      "options": [
        {
          "label": "Create Chat Completion",
          "name": "createChatCompletion",
          "description": "Create a chat completion using NVIDIA NIM API."
        },
        {
          "label": "List Available Models",
          "name": "listModels",
          "description": "List all available models for inference."
        },
        {
          "label": "Get Model Metadata",
          "name": "getModelMetadata",
          "description": "Retrieve metadata for a specific model."
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "NVIDIA NIM API Key",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "NVIDIA NIM API Key",
          "name": "nvidiaNimApiKey"
        }
      ],
      "default": "nvidiaNimApiKey"
    }
  ],
  "inputParameters": [
    {
      "label": "Model",
      "name": "model",
      "type": "asyncOptions",
      "loadMethod": "listModels",
      "description": "AI model to use.",
      "default": "",
      "show": {
        "actions.api": [
          "createChatCompletion",
          "getModelMetadata"
        ]
      }
    },
    {
      "label": "Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Enter your prompt here",
      "description": "The prompt to send to the model.",
      "show": {
        "actions.api": [
          "createChatCompletion"
        ]
      }
    },
    {
      "label": "Max Tokens",
      "name": "maxTokens",
      "type": "number",
      "description": "The maximum number of tokens to generate.",
      "default": 100,
      "optional": true,
      "show": {
        "actions.api": [
          "createChatCompletion"
        ]
      }
    },
    {
      "label": "Temperature",
      "name": "temperature",
      "type": "number",
      "description": "Controls randomness in the output.",
      "default": 0.7,
      "optional": true,
      "show": {
        "actions.api": [
          "createChatCompletion"
        ]
      }
    },
    {
      "label": "Top P",
      "name": "topP",
      "type": "number",
      "description": "Nucleus sampling parameter (between 0 and 1).",
      "default": 1.0,
      "optional": true,
      "show": {
        "actions.api": [
          "createChatCompletion"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-org/nodes/main/nodes/NVIDIA_NIM/NVIDIA_NIM.js"
},
{
  "label": "Vercel",
  "name": "vercel",
  "icons": {
    "default": "https://raw.githubusercontent.com/fruitbox12/ndoes/refs/heads/mains/vercel-icon.svg",
    "light": "https://raw.githubusercontent.com/fruitbox12/ndoes/refs/heads/mains/vercel-icon.svg",
    "dark": "https://raw.githubusercontent.com/fruitbox12/ndoes/refs/heads/mains/vercel-icon.svg"
  },
  "type": "action",
  "category": "Developer Tools",
  "version": 1,
  "description": "Perform Vercel operations",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "API",
      "name": "api",
      "type": "options",
      "options": [
        {
          "label": "List Deployments",
          "name": "listDeployments",
          "description": "Returns a list of deployments."
        },
        {
          "label": "Get Deployment",
          "name": "getDeployment",
          "description": "Returns information about a specific deployment."
        },
        {
          "label": "Create Deployment",
          "name": "createDeployment",
          "description": "Creates a new deployment."
        },
        {
          "label": "Delete Deployment",
          "name": "deleteDeployment",
          "description": "Deletes a specific deployment."
        },
        {
          "label": "List Projects",
          "name": "listProjects",
          "description": "Retrieves a list of projects."
        },
        {
          "label": "Get Project",
          "name": "getProject",
          "description": "Returns information about a specific project."
        },
        {
          "label": "Create Project",
          "name": "createProject",
          "description": "Creates a new project."
        },
        {
          "label": "Update Project",
          "name": "updateProject",
          "description": "Updates an existing project."
        },
        {
          "label": "Delete Project",
          "name": "deleteProject",
          "description": "Deletes a specific project."
        }
      ],
      "default": "listDeployments"
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Vercel API Key",
          "name": "vercelApiKey"
        }
      ],
      "default": "vercelApiKey"
    }
  ],
  "inputParameters": [
    {
      "label": "Team ID",
      "name": "teamId",
      "type": "string",
      "optional": true,
      "description": "The ID of the team.",
      "show": {
        "actions.api": [
          "listDeployments",
          "listProjects",
          "createDeployment",
          "createProject",
          "getProject",
          "updateProject",
          "deleteProject"
        ]
      }
    },
    {
      "label": "Project ID",
      "name": "projectId",
      "type": "string",
      "optional": true,
      "description": "The ID of the project.",
      "show": {
        "actions.api": [
          "listDeployments",
          "createDeployment",
          "getProject",
          "updateProject",
          "deleteProject"
        ]
      }
    },
    {
      "label": "Deployment ID",
      "name": "deploymentId",
      "type": "string",
      "description": "The ID of the deployment.",
      "show": {
        "actions.api": [
          "getDeployment",
          "deleteDeployment"
        ]
      }
    },
    {
      "label": "Limit",
      "name": "limit",
      "type": "number",
      "optional": true,
      "description": "Number of items to return.",
      "default": 20,
      "show": {
        "actions.api": [
          "listDeployments",
          "listProjects"
        ]
      }
    },
    {
      "label": "Since",
      "name": "since",
      "type": "number",
      "optional": true,
      "description": "Timestamp in milliseconds to filter items created after this time.",
      "show": {
        "actions.api": [
          "listDeployments"
        ]
      }
    },
    {
      "label": "Until",
      "name": "until",
      "type": "number",
      "optional": true,
      "description": "Timestamp in milliseconds to filter items created before this time.",
      "show": {
        "actions.api": [
          "listDeployments"
        ]
      }
    },
    {
      "label": "State",
      "name": "state",
      "type": "string",
      "optional": true,
      "description": "Filter deployments by state (e.g., 'READY', 'ERROR').",
      "show": {
        "actions.api": [
          "listDeployments"
        ]
      }
    },
    {
      "label": "Project Name",
      "name": "projectName",
      "type": "string",
      "description": "Name of the project.",
      "show": {
        "actions.api": [
          "createProject",
          "updateProject"
        ]
      }
    },
    {
      "label": "Framework",
      "name": "framework",
      "type": "string",
      "optional": true,
      "description": "Framework preset for the project.",
      "show": {
        "actions.api": [
          "createProject",
          "updateProject"
        ]
      }
    },
    {
      "label": "Build Command",
      "name": "buildCommand",
      "type": "string",
      "optional": true,
      "description": "Build command for the project.",
      "show": {
        "actions.api": [
          "createProject",
          "updateProject"
        ]
      }
    },
    {
      "label": "Output Directory",
      "name": "outputDirectory",
      "type": "string",
      "optional": true,
      "description": "Output directory for the project.",
      "show": {
        "actions.api": [
          "createProject",
          "updateProject"
        ]
      }
    },
    {
      "label": "Environment Variables",
      "name": "envVars",
      "type": "json",
      "optional": true,
      "description": "Environment variables for the project (JSON format).",
      "show": {
        "actions.api": [
          "createProject",
          "updateProject",
          "createDeployment"
        ]
      }
    },
    {
      "label": "Source Files",
      "name": "sourceFiles",
      "type": "json",
      "description": "An array of source files for deployment (JSON format).",
      "show": {
        "actions.api": [
          "createDeployment"
        ]
      }
    },
    {
      "label": "Deployment Name",
      "name": "deploymentName",
      "type": "string",
      "description": "Name of the deployment.",
      "show": {
        "actions.api": [
          "createDeployment"
        ]
      }
    },
    {
      "label": "Target",
      "name": "target",
      "type": "string",
      "optional": true,
      "description": "Deployment target (e.g., 'production').",
      "show": {
        "actions.api": [
          "createDeployment"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/Vercel/Vercel.js"
},
  {
  "label": "ERC20 Function",
  "name": "erc20Function",
  "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ERC20Function/erc20.svg",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ERC20Function/erc20.svg",
    "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/ERC20Function/erc20.svg"
  },
  "type": "action",
  "category": "Cryptocurrency",
  "version": 1,
  "description": "Execute ERC20 functions such as balanceOf, transferFrom, approve, and more.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Function",
      "name": "function",
      "type": "options",
      "options": [
        { "label": "Approve", "name": "approve" },
        { "label": "Allowance", "name": "allowance" },
        { "label": "Balance Of", "name": "balanceOf" },
        { "label": "Transfer From", "name": "transferFrom" },
        { "label": "Decimals", "name": "decimals" },
        { "label": "Name", "name": "name" },
        { "label": "Symbol", "name": "symbol" },
        { "label": "Total Supply", "name": "totalSupply" }
      ]
    }
  ],
  "networks": [
    {
      "label": "Network",
      "name": "network",
      "type": "options",
      "options": [
        { "label": "Ethereum Mainnet", "name": "homestead" },
        { "label": "Goerli Testnet", "name": "goerli" },
        { "label": "Polygon Mainnet", "name": "matic" },
        { "label": "Polygon Mumbai", "name": "maticmum" },
        { "label": "Arbitrum Mainnet", "name": "arbitrum" },
        { "label": "Arbitrum Goerli", "name": "arbitrum-goerli" },
        { "label": "Optimism Mainnet", "name": "optimism" },
        { "label": "Optimism Goerli", "name": "optimism-goerli" }
      ]
    },
    {
      "label": "Network Provider",
      "name": "networkProvider",
      "type": "asyncOptions",
      "loadMethod": "getNetworkProviders"
    },
    {
      "label": "RPC Endpoint",
      "name": "jsonRPC",
      "type": "string",
      "default": "",
      "show": {
        "networks.networkProvider": ["customRPC"]
      }
    },
    {
      "label": "Websocket Endpoint",
      "name": "websocketRPC",
      "type": "string",
      "default": "",
      "show": {
        "networks.networkProvider": ["customWebsocket"]
      }
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        { "label": "Alchemy API Key", "name": "alchemyApi" },
        { "label": "Infura API Key", "name": "infuraApi" }
      ],
      "show": {
        "networks.networkProvider": ["alchemy", "infura"]
      }
    }
  ],
  "inputParameters": [
    {
      "label": "ERC20 Token Address",
      "name": "erc20TokenAddress",
      "type": "string",
      "description": "The address of the ERC20 token."
    },
    {
      "label": "Spender Address",
      "name": "spender",
      "type": "string",
      "description": "The address that will be allowed to spend tokens (only required for 'approve' and 'allowance').",
      "optional": true,
      "show": {
        "actions.function": ["approve", "allowance"]
      }
    },
    {
      "label": "Amount",
      "name": "amount",
      "type": "string",
      "description": "Amount of tokens to approve or transfer.",
      "optional": true,
      "show": {
        "actions.function": ["approve", "transferFrom"]
      }
    },
    {
      "label": "Sender Address",
      "name": "sender",
      "type": "string",
      "description": "The address of the sender (only required for 'transferFrom').",
      "optional": true,
      "show": {
        "actions.function": ["transferFrom"]
      }
    },
    {
      "label": "Recipient Address",
      "name": "recipient",
      "type": "string",
      "description": "The address of the recipient (only required for 'transferFrom').",
      "optional": true,
      "show": {
        "actions.function": ["transferFrom"]
      }
    },
    {
      "label": "Wallet Private Key",
      "name": "walletPrivateKey",
      "type": "string",
      "description": "The private key of the wallet that is performing the transaction."
    }
  ],
  "filePath": "https://path/to/ERC20Function.js"
},
  {
  "label": "Confidential Compute Launcher",
  "name": "confidentialComputeLauncher",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/OpenEnclave.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/OpenEnclave.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/OpenEnclave.png"
  },
  "type": "action",
  "category": "Cloud Compute",
  "version": 1,
  "description": "Launch confidential compute instances on various cloud providers",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Cloud Provider",
      "name": "cloudProvider",
      "type": "options",
      "options": [
        {
          "label": "Amazon Web Services (AWS)",
          "name": "aws",
          "description": "Launch confidential compute instances on AWS"
        },
        {
          "label": "Microsoft Azure",
          "name": "azure",
          "description": "Launch confidential compute instances on Azure"
        },
        {
          "label": "Google Cloud Platform (GCP)",
          "name": "gcp",
          "description": "Launch confidential compute instances on GCP"
        },
        {
          "label": "IBM Cloud",
          "name": "ibm",
          "description": "Launch confidential compute instances on IBM Cloud"
        }
      ],
      "default": "aws"
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "options",
      "options": [
        {
          "label": "AWS Access Keys",
          "name": "awsAccessKeys"
        },
        {
          "label": "Azure Service Principal",
          "name": "azureServicePrincipal"
        },
        {
          "label": "GCP Service Account",
          "name": "gcpServiceAccount"
        },
        {
          "label": "IBM Cloud API Key",
          "name": "ibmApiKey"
        }
      ],
      "default": "awsAccessKeys"
    }
  ],
  "inputParameters": [
    {
      "label": "Instance Name",
      "name": "instanceName",
      "type": "string",
      "description": "The name of the instance to create"
    },
    {
      "label": "Region",
      "name": "region",
      "type": "options",
      "description": "The cloud region to launch the instance in",
      "options": [
        {
          "label": "US East (N. Virginia)",
          "name": "us-east-1",
          "show": {
            "actions.cloudProvider": [
              "aws"
            ]
          }
        },
        {
          "label": "US West (Oregon)",
          "name": "us-west-2",
          "show": {
            "actions.cloudProvider": [
              "aws"
            ]
          }
        },
        {
          "label": "East US",
          "name": "eastus",
          "show": {
            "actions.cloudProvider": [
              "azure"
            ]
          }
        },
        {
          "label": "West Europe",
          "name": "westeurope",
          "show": {
            "actions.cloudProvider": [
              "azure"
            ]
          }
        },
        {
          "label": "us-central1",
          "name": "us-central1",
          "show": {
            "actions.cloudProvider": [
              "gcp"
            ]
          }
        },
        {
          "label": "europe-west1",
          "name": "europe-west1",
          "show": {
            "actions.cloudProvider": [
              "gcp"
            ]
          }
        },
        {
          "label": "US South",
          "name": "us-south",
          "show": {
            "actions.cloudProvider": [
              "ibm"
            ]
          }
        },
        {
          "label": "EU Germany",
          "name": "eu-de",
          "show": {
            "actions.cloudProvider": [
              "ibm"
            ]
          }
        }
      ]
    },
    {
      "label": "Instance Type",
      "name": "instanceType",
      "type": "options",
      "description": "The type of confidential compute instance",
      "options": [
        {
          "label": "C5 instances with Nitro Enclaves",
          "name": "c5n",
          "show": {
            "actions.cloudProvider": [
              "aws"
            ]
          }
        },
        {
          "label": "M5 instances with Nitro Enclaves",
          "name": "m5n",
          "show": {
            "actions.cloudProvider": [
              "aws"
            ]
          }
        },
        {
          "label": "DCsv2-Series",
          "name": "DCsv2",
          "show": {
            "actions.cloudProvider": [
              "azure"
            ]
          }
        },
        {
          "label": "DCsv3-Series",
          "name": "DCsv3",
          "show": {
            "actions.cloudProvider": [
              "azure"
            ]
          }
        },
        {
          "label": "N2D Confidential VM",
          "name": "n2d-confidential",
          "show": {
            "actions.cloudProvider": [
              "gcp"
            ]
          }
        },
        {
          "label": "E2 Confidential VM",
          "name": "e2-confidential",
          "show": {
            "actions.cloudProvider": [
              "gcp"
            ]
          }
        },
        {
          "label": "Confidential Computing Virtual Servers",
          "name": "cc-virtual-server",
          "show": {
            "actions.cloudProvider": [
              "ibm"
            ]
          }
        }
      ]
    },
    {
      "label": "Image ID",
      "name": "imageId",
      "type": "string",
      "description": "The ID of the image to use for the instance"
    },
    {
      "label": "Network Configuration",
      "name": "networkConfiguration",
      "type": "collection",
      "description": "Network settings for the instance",
      "options": [
        {
          "label": "VPC ID",
          "name": "vpcId",
          "type": "string",
          "optional": true
        },
        {
          "label": "Subnet ID",
          "name": "subnetId",
          "type": "string",
          "optional": true
        },
        {
          "label": "Security Group IDs",
          "name": "securityGroupIds",
          "type": "array",
          "items": {
            "type": "string"
          },
          "optional": true
        }
      ]
    },
    {
      "label": "User Data",
      "name": "userData",
      "type": "string",
      "description": "User data to provide when launching the instance",
      "optional": true
    },
    {
      "label": "Tags",
      "name": "tags",
      "type": "collection",
      "description": "Tags to assign to the instance",
      "optional": true,
      "options": [
        {
          "label": "Key",
          "name": "key",
          "type": "string"
        },
        {
          "label": "Value",
          "name": "value",
          "type": "string"
        }
      ]
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/ConfidentialCompute/ConfidentialCompute.js"
},
 {
  "loadMethods": {},
  "label": "GitHub",
  "name": "github",
  "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GitHub/GitHub-Logo.png",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GitHub/GitHub-Logo.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/github-icon-1024x994-4h5sdmko.png"
  },
  "type": "action",
  "category": "Development",
  "version": 1.0,
  "description": "GitHub API",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "List User Repositories",
          "name": "listUserRepositories",
          "description": "Lists public repositories for the specified user."
        },
        {
          "label": "List Organization Repositories",
          "name": "listOrganizationRepositories",
          "description": "Lists repositories for the specified organization."
        },
        {
          "label": "List Repository Issues",
          "name": "listRepositoryIssues",
          "description": "List issues in a repository."
        },
        {
          "label": "Create an Issue",
          "name": "createIssue",
          "description": "Any user with pull access to a repository can create an issue."
        },
        {
          "label": "Get an Issue",
          "name": "getIssue",
          "description": "Get an issue in a repository."
        },
        {
          "label": "Update an Issue",
          "name": "updateIssue",
          "description": "Update an issue in a repository."
        },
        {
          "label": "Lock an Issue",
          "name": "lockIssue",
          "description": "Users with push access can lock an issue or pull request's conversation."
        },
        {
          "label": "Unlock an Issue",
          "name": "unlockIssue",
          "description": "Users with push access can unlock an issue's conversation."
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "GitHub API",
          "name": "gitHubApi"
        }
      ],
      "default": "gitHubApi"
    }
  ],
  "inputParameters": [
    {
      "label": "Owner/Organization",
      "name": "owner",
      "type": "string",
      "show": {
        "actions.operation": [
          "listRepositoryIssues",
          "createIssue",
          "getIssue",
          "updateIssue",
          "lockIssue",
          "unlockIssue",
          "listUserRepositories",
          "listOrganizationRepositories"
        ]
      },
      "description": "The account owner of the repository. The name is not case sensitive."
    },
    {
      "label": "Type",
      "name": "orgType",
      "type": "options",
      "options": [
        { "label": "All", "name": "all" },
        { "label": "Public", "name": "public" },
        { "label": "Private", "name": "private" },
        { "label": "Forks", "name": "forks" },
        { "label": "Sources", "name": "sources" },
        { "label": "Member", "name": "member" },
        { "label": "Internal", "name": "internal" }
      ],
      "show": {
        "actions.operation": ["listOrganizationRepositories"]
      },
      "description": "Specifies the types of repositories you want returned.",
      "optional": true,
      "default": "all"
    },
    {
      "label": "Type",
      "name": "userType",
      "type": "options",
      "options": [
        { "label": "All", "name": "all" },
        { "label": "Owner", "name": "owner" },
        { "label": "Member", "name": "member" }
      ],
      "show": {
        "actions.operation": ["listUserRepositories"]
      },
      "description": "Specifies the types of repositories you want returned.",
      "optional": true,
      "default": "owner"
    },
    {
      "label": "Sort",
      "name": "sort",
      "type": "options",
      "options": [
        { "label": "Created", "name": "created" },
        { "label": "Updated", "name": "updated" },
        { "label": "Pushed", "name": "pushed" },
        { "label": "Full Name", "name": "full_name" }
      ],
      "show": {
        "actions.operation": ["listUserRepositories", "listOrganizationRepositories"]
      },
      "description": "The property to sort the results by.",
      "optional": true,
      "default": "created"
    },
    {
      "label": "Direction of Sort",
      "name": "direction",
      "type": "options",
      "options": [
        { "label": "Ascending", "name": "asc" },
        { "label": "Descending", "name": "desc" }
      ],
      "show": {
        "actions.operation": ["listUserRepositories", "listOrganizationRepositories"]
      },
      "description": "The order to sort by.",
      "optional": true,
      "default": "desc"
    },
    {
      "label": "Repository",
      "name": "repo",
      "type": "string",
      "show": {
        "actions.operation": [
          "listRepositoryIssues",
          "createIssue",
          "getIssue",
          "updateIssue",
          "lockIssue",
          "unlockIssue"
        ]
      },
      "description": "The name of the repository. The name is not case sensitive."
    },
    {
      "label": "Title",
      "name": "title",
      "type": "string",
      "show": { "actions.operation": ["createIssue"] },
      "description": "The title of the issue."
    },
    {
      "label": "Title",
      "name": "titleOptional",
      "type": "string",
      "show": { "actions.operation": ["updateIssue"] },
      "description": "The title of the issue.",
      "optional": true
    },
    {
      "label": "Body",
      "name": "body",
      "type": "string",
      "show": { "actions.operation": ["createIssue", "updateIssue"] },
      "description": "The contents of the issue.",
      "optional": true
    },
    {
      "label": "Issue Number",
      "name": "issueNumber",
      "type": "number",
      "show": {
        "actions.operation": [
          "getIssue",
          "updateIssue",
          "lockIssue",
          "unlockIssue"
        ]
      },
      "description": "The number that identifies the issue."
    },
    {
      "label": "Lock Reason",
      "name": "lockReason",
      "type": "options",
      "options": [
        { "label": "Off Topic", "name": "off-topic" },
        { "label": "Too Heated", "name": "too heated" },
        { "label": "Resolved", "name": "resolved" },
        { "label": "Spam", "name": "spam" }
      ],
      "show": { "actions.operation": ["lockIssue"] },
      "description": "The reason for locking the issue or pull request conversation.",
      "optional": true
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/GitHub/GitHub.js"
},
	{
  "loadMethods": {},
  "label": "Create NFT",
  "name": "createNFT",
   "icons": {
      "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/CreateNFT/createNFT.png",
      "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/CreateNFT/createNFT.png",
      "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/CreateNFT/createNFT.png"
    },
  "type": "action",
  "category": "NFT",
  "version": 1,
  "description": "Create new NFT (ERC1155)",
  "incoming": 1,
  "outgoing": 1,
  "networks": [
    {
      "label": "Network",
      "name": "network",
      "type": "options",
      "options": [
        {
          "label": "Mainnet",
          "name": "homestead",
          "parentGroup": "Ethereum"
        },
        {
          "label": "Goerli",
          "name": "goerli",
          "parentGroup": "Ethereum"
        },
        {
          "label": "Polygon Mainnet",
          "name": "matic",
          "parentGroup": "Polygon"
        },
        {
          "label": "Polygon Mumbai",
          "name": "maticmum",
          "parentGroup": "Polygon"
        },
        {
          "label": "Arbitrum Mainnet",
          "name": "arbitrum",
          "parentGroup": "Arbitrum"
        },
        {
          "label": "Arbitrum Goerli",
          "name": "arbitrum-goerli",
          "parentGroup": "Arbitrum"
        },
        {
          "label": "Optimism Mainnet",
          "name": "optimism",
          "parentGroup": "Optimism"
        },
        {
          "label": "Optimism Goerli",
          "name": "optimism-goerli",
          "parentGroup": "Optimism"
        },
        {
          "label": "Binance Smart Chain Mainnet",
          "name": "bsc",
          "parentGroup": "Binance Smart Chain"
        },
        {
          "label": "Binance Smart Chain Testnet",
          "name": "bsc-testnet",
          "parentGroup": "Binance Smart Chain"
        }
      ],
      "default": "goerli"
    },
    {
      "label": "Network Provider",
      "name": "networkProvider",
      "type": "asyncOptions",
      "loadMethod": "getNetworkProviders"
    },
    {
      "label": "RPC Endpoint",
      "name": "jsonRPC",
      "type": "string",
      "default": "",
      "show": {
        "networks.networkProvider": [
          "customRPC"
        ]
      }
    },
    {
      "label": "Websocket Endpoint",
      "name": "websocketRPC",
      "type": "string",
      "default": "",
      "show": {
        "networks.networkProvider": [
          "customWebsocket"
        ]
      }
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Alchemy API Key",
          "name": "alchemyApi",
          "show": {
            "networks.networkProvider": [
              "alchemy"
            ]
          }
        },
        {
          "label": "Infura API Key",
          "name": "infuraApi",
          "show": {
            "networks.networkProvider": [
              "infura"
            ]
          }
        },
        {
          "label": "QuickNode Endpoints",
          "name": "quickNodeEndpoints",
          "show": {
            "networks.networkProvider": [
              "quicknode"
            ]
          }
        }
      ],
      "show": {
        "networks.networkProvider": [
          "alchemy",
          "infura",
          "quicknode"
        ]
      }
    }
  ],
  "inputParameters": [
    {
      "label": "Select Wallet",
      "name": "wallet",
      "type": "asyncOptions",
      "description": "Wallet account to create NFT.",
      "loadFromDbCollections": [
        "Wallet"
      ],
      "loadMethod": "getWallets"
    },
    {
      "label": "NFT Metadata",
      "name": "nftMetadata",
      "type": "options",
      "options": [
        {
          "label": "Ipfs Hash/Pin",
          "name": "ipfsHash",
          "description": "Ipfs hash/pin of the folder that contains the json metadata files"
        },
        {
          "label": "URL",
          "name": "url",
          "description": "URL of the folder that contains the json metadata files. Ex: https://ipfs.io/ipfs/QmSPiKckfBDhw1pXdjHvU4jndN5pn4ZbKHeA9Nnn622C7U"
        }
      ],
      "description": "Fetch metadata from a url OR using Ipfs hash/pin"
    },
    {
      "label": "NFT Metadata URL",
      "name": "nftMetadataJsonUrl",
      "type": "string",
      "placeholder": "https://ipfs.io/ipfs/QmSPiKckfBDhw1pXdjHvU4jndN5pn4ZbKHeA9Nnn622C7U",
      "description": "URL of the folder that contains the json metadata files",
      "show": {
        "inputParameters.nftMetadata": [
          "url"
        ]
      }
    },
    {
      "label": "NFT Metadata Ipfs Hash/Pin",
      "name": "nftMetadataHash",
      "type": "string",
      "placeholder": "QmexuwvmmtwsazQ7LK93SyVdFeYRnDbjET414y2xXiToM4",
      "description": "Ipfs hash/pin of the folder that contains the json metadata files",
      "show": {
        "inputParameters.nftMetadata": [
          "ipfsHash"
        ]
      }
    },
    {
      "label": "Contract Name",
      "name": "contractName",
      "type": "string",
      "default": "",
      "placeholder": "MyContract",
      "optional": true
    },
    {
      "label": "Collection Name",
      "name": "collectionName",
      "type": "string",
      "default": "",
      "placeholder": "MyCollection",
      "optional": true
    },
    {
      "label": "Solidity Version",
      "name": "solidityVersion",
      "type": "options",
      "description": "Soldity version to compile code for NFT creation",
      "options": [
        {
          "label": "0.8.10",
          "name": "0.8.10"
        },
        {
          "label": "0.8.11",
          "name": "0.8.11"
        },
        {
          "label": "0.8.12",
          "name": "0.8.12"
        },
        {
          "label": "0.8.13",
          "name": "0.8.13"
        },
        {
          "label": "0.8.14",
          "name": "0.8.14"
        },
        {
          "label": "0.8.15",
          "name": "0.8.15"
        }
      ],
      "default": "0.8.15"
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/CreateNFT/CreateNFT.js"
},
	{
    "nodeState": null,
    "label": "Fireflies AI",
    "name": "firefliesai",
    "icons": {
        "default": "https://raw.githubusercontent.com/fruitbox12/ndoes/b28b1ac6380c29d57c333334e870350fcab79eb8/packages/server/nodes/fireflies.png",
        "light": "https://raw.githubusercontent.com/fruitbox12/ndoes/b28b1ac6380c29d57c333334e870350fcab79eb8/packages/server/nodes/fireflies.png",
        "dark": "https://raw.githubusercontent.com/fruitbox12/ndoes/b28b1ac6380c29d57c333334e870350fcab79eb8/packages/server/nodes/fireflies.png"
    },
    "type": "action",
    "category": "AI",
    "version": 1,
    "description": "Perform Fireflies AI operations",
    "incoming": 1,
    "outgoing": 1,
    "actions": [
        {
            "label": "Query",
            "name": "query",
            "type": "options",
            "options": [
                {
                    "label": "Get AI Apps",
                    "name": "getAIApps",
                    "description": "Query the list of AI App outputs."
                },
                {
                    "label": "Get User Details",
                    "name": "getUser",
                    "description": "Query user details."
                },
                {
                    "label": "Get Users List",
                    "name": "getUsers",
                    "description": "Query a list of users."
                },
                {
                    "label": "Get Transcript Details",
                    "name": "getTranscript",
                    "description": "Query transcript details."
                },
                {
                    "label": "Get Transcripts List",
                    "name": "getTranscripts",
                    "description": "Query a list of transcripts."
                },
                {
                    "label": "Get Bite Details",
                    "name": "getBite",
                    "description": "Query bite details."
                },
                {
                    "label": "Get Bites List",
                    "name": "getBites",
                    "description": "Query a list of bites."
                }
            ],
            "default": "getAIApps"
        }
    ],
    "networks": [
        {
            "label": "Network",
            "name": "network",
            "type": "options",
            "options": [
                {
                    "label": "Main",
                    "name": "main"
                }
            ],
            "default": "main"
        }
    ],
    "credentials": [
        {
            "label": "Credential Method",
            "name": "credentialMethod",
            "type": "string",
            "options": [
                {
                    "label": "API Key",
                    "name": "apiKey"
                }
            ],
            "default": "apiKey"
        }
    ],
    "inputParameters": [
        {
            "label": "App ID",
            "name": "app_id",
            "type": "string",
            "description": "The ID of the AI App.",
            "show": {
                "actions.query": [
                    "getAIApps"
                ]
            }
        },
        {
            "label": "Transcript ID",
            "name": "transcript_id",
            "type": "string",
            "description": "The ID of the transcript.",
            "show": {
                "actions.query": [
                    "getTranscript",
                    "getBites"
                ]
            }
        },
        {
            "label": "User ID",
            "name": "user_id",
            "type": "string",
            "description": "The ID of the user.",
            "show": {
                "actions.query": [
                    "getUser"
                ]
            }
        },
        {
            "label": "From Date",
            "name": "fromDate",
            "type": "date",
            "optional": true,
            "description": "The start date for filtering transcripts.",
            "show": {
                "actions.query": [
                    "getTranscripts"
                ]
            }
        },
        {
            "label": "To Date",
            "name": "toDate",
            "type": "date",
            "optional": true,
            "description": "The end date for filtering transcripts.",
            "show": {
                "actions.query": [
                    "getTranscripts"
                ]
            }
        }
    ],
    "filePath": "https://example.com/firefliesai/firefliesai.js"
},
	{
  "label": "Advanced Structured Output Parser",
  "name": "advancedStructuredOutputParser",
  "icons": {
    "default": "https://raw.githubusercontent.com/FlowiseAI/Flowise/refs/heads/main/packages/components/nodes/outputparsers/StructuredOutputParser/structure.svg",
    "light": "https://raw.githubusercontent.com/FlowiseAI/Flowise/refs/heads/main/packages/components/nodes/outputparsers/StructuredOutputParser/structure.svg",
    "dark": "https://raw.githubusercontent.com/FlowiseAI/Flowise/refs/heads/main/packages/components/nodes/outputparsers/StructuredOutputParser/structure.svg"
  },
  "type": "action",
  "category": "Output Parsing",
  "version": 1,
  "description": "Parse the output of an LLM call into a given structure by providing a Zod schema.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [],
  "credentials": [],
  "inputParameters": [
    {
      "label": "Autofix",
      "name": "autofixParser",
      "type": "boolean",
      "optional": true,
      "description": "In the event that the first call fails, will make another call to the model to fix any errors.",
      "default": false
    },
    {
      "label": "Example JSON",
      "name": "exampleJson",
      "type": "code",
      "description": "Zod schema for the output of the model.",
      "rows": 10,
      "default": "z.object({\n  title: z.string(),\n  yearOfRelease: z.number().int(),\n  genres: z.enum([\n    \"Action\", \"Comedy\", \"Drama\", \"Fantasy\", \"Horror\",\n    \"Mystery\", \"Romance\", \"Science Fiction\", \"Thriller\", \"Documentary\"\n  ]).array().max(2),\n  shortDescription: z.string().max(500)\n})"
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo-path/nodes/main/nodes/AdvancedStructuredOutputParser/AdvancedStructuredOutputParser.js"
},
{
  "label": "GraphQL",
  "name": "graphQL",
    "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GraphQL/graphql.svg",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GraphQL/graphql.svg",
    "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GraphQL/graphql.svg"
  },
  "type": "action",
  "category": "Development",
  "version": 1,
  "description": "Execute GraphQL request",
  "incoming": 1,
  "outgoing": 1,
  "credentials": [
    {
      "label": "Authorization",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Basic Auth",
          "name": "httpBasicAuth"
        },
        {
          "label": "Bearer Token Auth",
          "name": "httpBearerTokenAuth"
        },
        {
          "label": "No Auth",
          "name": "noAuth",
          "hideRegisteredCredential": true
        }
      ],
      "default": "noAuth"
    }
  ],
  "inputParameters": [
    {
      "label": "URL",
      "name": "url",
      "type": "string",
      "default": "",
      "placeholder": "http://<your-url>.com/"
    },
    {
      "label": "Headers",
      "name": "headers",
      "type": "array",
      "array": [
        {
          "label": "Key",
          "name": "key",
          "type": "string",
          "default": ""
        },
        {
          "label": "Value",
          "name": "value",
          "type": "string",
          "default": ""
        }
      ],
      "optional": true
    },
    {
      "label": "GraphQL Body",
      "name": "body",
      "type": "json",
      "placeholder": "{\n  me {\n    name\n  }\n}",
      "optional": true
    },
    {
      "label": "Variables",
      "name": "variables",
      "type": "json",
      "placeholder": "{\"var1\": \"value1\"}",
      "optional": true
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/GraphQL/GraphQL.js"
},
{
  "loadMethods": {},
  "label": "Superface Hub API",
  "name": "superfaceHubAPI",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/Superface-logo.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/Superface-logo.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/Superface-logo.png"
  },
  "type": "action",
  "category": "API Integration",
  "version": 1,
  "description": "Integrate with Superface Hub API to access various external services through function calls.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "List Available Functions",
          "name": "listFunctions",
          "description": "Retrieve a list of functions currently available for use."
        },
        {
          "label": "Generate User Session",
          "name": "generateSession",
          "description": "Generate a temporary URL for users to configure their access credentials."
        },
        {
          "label": "Perform Function",
          "name": "performFunction",
          "description": "Execute a specified function with provided parameters."
        }
      ],
      "default": "listFunctions"
    }
  ],
  "credentials": [
    {
      "label": "Superface API Token",
      "name": "apiToken",
      "type": "string",
      "description": "API token for authenticating with the Superface Hub API."
    }
  ],
  "inputParameters": [
    {
      "label": "User ID",
      "name": "userId",
      "type": "string",
      "description": "Unique identifier for the user in the format 'your_agent_name|unique_user_id'.",
      "show": {
        "actions.operation": [
          "generateSession"
        ]
      }
    },
    {
      "label": "Function Name",
      "name": "functionName",
      "type": "string",
      "description": "The name of the function to perform, e.g., 'weather__current-weather__CurrentWeather'.",
      "show": {
        "actions.operation": [
          "performFunction"
        ]
      }
    },
    {
      "label": "Function Parameters",
      "name": "functionParameters",
      "type": "json",
      "description": "JSON object containing parameters required by the function.",
      "show": {
        "actions.operation": [
          "performFunction"
        ]
      }
    }
  ],
  "filePath": "https://example.com/superfaceHubAPI/superfaceHubAPI.js"
},
{
  "loadMethods": {},
  "label": "Space and Time SQL API",
  "name": "spaceAndTimeApi",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg"
  },
  "type": "action",
  "category": "Database",
  "version": 1,
  "description": "SQL Operations REST APIs for executing SQL statements, configuring resources, encryption, and querying views on the Space and Time network.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Execute SQL",
          "name": "executeSql"
        },
        {
          "label": "Configure Resources (DDL)",
          "name": "configureResourcesDDL"
        },
        {
          "label": "Modify Data (DML)",
          "name": "modifyDataDML"
        },
        {
          "label": "Execute Queries (DQL)",
          "name": "executeQueriesDQL"
        },
        {
          "label": "Configure Encryption",
          "name": "configureEncryption"
        },
        {
          "label": "View Query",
          "name": "viewQuery"
        },
        {
          "label": "Refresh Materialized View",
          "name": "refreshMaterializedView"
        },
        {
          "label": "Get Materialized View Last Refresh",
          "name": "getLastRefreshed"
        },
        {
          "label": "Execute Content Query",
          "name": "executeContentQuery"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "apikey",
      "name": "credentialMethod",
      "type": "string",
      "description": "JWT Bearer token for authentication",
      "default": ""
    }
  ],
  "inputParameters": [
    {
      "label": "SQL Statement",
      "name": "sqlText",
      "type": "string",
      "default": "",
      "description": "The raw SQL text to execute.",
      "show": {
        "actions.operation": [
          "executeSql",
          "configureResourcesDDL",
          "modifyDataDML",
          "executeQueriesDQL",
          "executeContentQuery"
        ]
      }
    },
    {
      "label": "Biscuits",
      "name": "biscuits",
      "type": "string",
      "default": "",
      "description": "Optional authorization tokens (comma-separated list).",
      "optional": true,
      "show": {
        "actions.operation": [
          "executeSql",
          "configureResourcesDDL",
          "modifyDataDML",
          "executeQueriesDQL",
          "executeContentQuery",
          "viewQuery",
          "refreshMaterializedView",
          "getLastRefreshed",
          "configureEncryption"
        ]
      }
    },
    {
      "label": "Validate Request",
      "name": "validate",
      "type": "boolean",
      "default": false,
      "description": "Determines whether to validate the SQL statement prior to execution.",
      "optional": true,
      "show": {
        "actions.operation": [
          "executeSql",
          "executeContentQuery"
        ]
      }
    },
    {
      "label": "Use Encryption",
      "name": "useEncryption",
      "type": "boolean",
      "default": false,
      "description": "Determines whether to automatically encrypt/decrypt data in the request and response.",
      "optional": true,
      "show": {
        "actions.operation": [
          "executeSql"
        ]
      }
    },
    {
      "label": "View ID",
      "name": "viewId",
      "type": "string",
      "default": "",
      "description": "The view resource identifier (e.g. SCHEMA_NAME.VIEW_NAME).",
      "show": {
        "actions.operation": [
          "viewQuery",
          "refreshMaterializedView",
          "getLastRefreshed"
        ]
      }
    },
    {
      "label": "Query Parameters",
      "name": "parameters",
      "type": "json",
      "default": "{}",
      "description": "A JSON object containing parameter key/value pairs for a parameterized view.",
      "optional": true,
      "show": {
        "actions.operation": [
          "viewQuery"
        ]
      }
    },
    {
      "label": "Encryption Request",
      "name": "encryptionRequest",
      "type": "json",
      "default": "{}",
      "description": "JSON payload for configuring dataset/table encryption.",
      "show": {
        "actions.operation": [
          "configureEncryption"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/SpaceAndTime/SpaceAndTime.js"
},
	{
  "loadMethods": {},
  "label": "Space and Time Gateway (Secrets Proxy)",
  "name": "sxtGatewayProxy",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg"
  },
  "type": "action",
  "category": "Secrets Management",
  "version": 1,
  "description": "Integration for Gateway (Secrets Proxy) REST APIs for centralized secrets management, authentication, and SQL proxy operations.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Register",
          "name": "register"
        },
        {
          "label": "Login",
          "name": "login"
        },
        {
          "label": "Add Existing User",
          "name": "add-existing-user"
        },
        {
          "label": "Reset Password",
          "name": "reset-password"
        },
        {
          "label": "Refresh Session",
          "name": "refresh-session"
        },
        {
          "label": "Convert Session",
          "name": "convert-session"
        },
        {
          "label": "API Key Authentication",
          "name": "apikey-authn"
        },
        {
          "label": "Get All Biscuits",
          "name": "get-all-biscuits"
        },
        {
          "label": "Get All User Biscuits",
          "name": "get-all-user-biscuits"
        },
        {
          "label": "Add User Biscuit",
          "name": "add-user-biscuit"
        },
        {
          "label": "Get User Biscuit by Name",
          "name": "get-user-biscuit-by-name"
        },
        {
          "label": "Remove User Biscuit",
          "name": "remove-user-biscuit"
        },
        {
          "label": "Set Permission",
          "name": "set-permission"
        },
        {
          "label": "Remove Permission",
          "name": "remove-permission"
        },
        {
          "label": "Get User Permissions",
          "name": "get-user-permissions"
        },
        {
          "label": "Get Resource Permissions",
          "name": "get-resource-permissions"
        },
        {
          "label": "Get API Keys",
          "name": "get-api-keys"
        },
        {
          "label": "Create API Key",
          "name": "create-api-key"
        },
        {
          "label": "Delete API Key",
          "name": "delete-api-key"
        },
        {
          "label": "Execute Proxy SQL (Generic)",
          "name": "execute-proxy-sql-generic"
        },
        {
          "label": "Execute Proxy SQL (Content Queries)",
          "name": "execute-proxy-sql-content-queries"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Gateway API Key",
          "name": "gatewayApiKey"
        }
      ],
      "default": "gatewayApiKey"
    }
  ],
  "inputParameters": [
    {
      "label": "User ID",
      "name": "userId",
      "type": "string",
      "description": "User identifier for registration, login, or password reset",
      "show": {
        "actions.operation": [
          "register",
          "login",
          "reset-password"
        ]
      }
    },
    {
      "label": "Password",
      "name": "password",
      "type": "string",
      "description": "Password for registration or login",
      "show": {
        "actions.operation": [
          "register",
          "login"
        ]
      }
    },
    {
      "label": "Join Code",
      "name": "joinCode",
      "type": "string",
      "description": "Subscription join code for registration",
      "show": {
        "actions.operation": [
          "register"
        ]
      }
    },
    {
      "label": "Access Token",
      "name": "accessToken",
      "type": "string",
      "description": "Access token used for adding an existing user or converting a session",
      "show": {
        "actions.operation": [
          "add-existing-user",
          "convert-session"
        ]
      }
    },
    {
      "label": "Temp Password",
      "name": "tempPassword",
      "type": "string",
      "description": "Temporary password for resetting password",
      "show": {
        "actions.operation": [
          "reset-password"
        ]
      }
    },
    {
      "label": "New Password",
      "name": "newPassword",
      "type": "string",
      "description": "New password for resetting password",
      "show": {
        "actions.operation": [
          "reset-password"
        ]
      }
    },
    {
      "label": "Session ID",
      "name": "sid",
      "type": "string",
      "description": "Session identifier for session-related operations and biscuit management",
      "show": {
        "actions.operation": [
          "refresh-session",
          "get-all-biscuits",
          "get-all-user-biscuits",
          "add-user-biscuit",
          "get-user-biscuit-by-name",
          "remove-user-biscuit",
          "set-permission",
          "remove-permission",
          "get-user-permissions",
          "get-resource-permissions",
          "get-api-keys",
          "create-api-key",
          "delete-api-key"
        ]
      }
    },
    {
      "label": "Biscuit Name",
      "name": "biscuitName",
      "type": "string",
      "description": "Name of the biscuit for retrieval or deletion",
      "show": {
        "actions.operation": [
          "get-user-biscuit-by-name",
          "remove-user-biscuit"
        ]
      }
    },
    {
      "label": "Name",
      "name": "name",
      "type": "string",
      "description": "Unique name for a new user biscuit",
      "show": {
        "actions.operation": [
          "add-user-biscuit"
        ]
      }
    },
    {
      "label": "Biscuit",
      "name": "biscuit",
      "type": "string",
      "description": "Base64 encoded biscuit payload",
      "show": {
        "actions.operation": [
          "add-user-biscuit"
        ]
      }
    },
    {
      "label": "Public Key",
      "name": "publicKey",
      "type": "string",
      "description": "Public key associated with the biscuit",
      "show": {
        "actions.operation": [
          "add-user-biscuit"
        ]
      }
    },
    {
      "label": "Resource ID",
      "name": "resourceId",
      "type": "string",
      "description": "Resource identifier for permission operations or resource permissions",
      "show": {
        "actions.operation": [
          "set-permission",
          "remove-permission",
          "get-resource-permissions"
        ]
      }
    },
    {
      "label": "Resource Type",
      "name": "resourceType",
      "type": "options",
      "description": "Type of resource",
      "options": [
        {
          "label": "DB Table",
          "name": "DB_TABLE"
        },
        {
          "label": "DB Schema",
          "name": "DB_SCHEMA"
        }
      ],
      "show": {
        "actions.operation": [
          "set-permission",
          "remove-permission",
          "get-resource-permissions"
        ]
      }
    },
    {
      "label": "Target User ID",
      "name": "targetUserId",
      "type": "string",
      "description": "User identifier for setting or removing permissions",
      "show": {
        "actions.operation": [
          "set-permission",
          "remove-permission"
        ]
      }
    },
    {
      "label": "Access Level",
      "name": "accessLevel",
      "type": "options",
      "description": "Access level for permission",
      "options": [
        {
          "label": "Read Only",
          "name": "READ-ONLY"
        },
        {
          "label": "Read Write",
          "name": "READ-WRITE"
        },
        {
          "label": "Configure",
          "name": "CONFIGURE"
        }
      ],
      "show": {
        "actions.operation": [
          "set-permission"
        ]
      }
    },
    {
      "label": "Key ID",
      "name": "keyId",
      "type": "string",
      "description": "Identifier of the API key to delete",
      "show": {
        "actions.operation": [
          "delete-api-key"
        ]
      }
    },
    {
      "label": "Description",
      "name": "description",
      "type": "string",
      "description": "Description for creating a new API key",
      "show": {
        "actions.operation": [
          "create-api-key"
        ]
      }
    },
    {
      "label": "SQL Text",
      "name": "sqlText",
      "type": "string",
      "description": "The SQL statement to execute",
      "show": {
        "actions.operation": [
          "execute-proxy-sql-generic"
        ]
      }
    },
    {
      "label": "Query ID",
      "name": "queryId",
      "type": "string",
      "description": "Unique identifier for the content query",
      "show": {
        "actions.operation": [
          "execute-proxy-sql-content-queries"
        ]
      }
    },
    {
      "label": "Query Slug",
      "name": "querySlug",
      "type": "string",
      "description": "Slug for the content query",
      "show": {
        "actions.operation": [
          "execute-proxy-sql-content-queries"
        ]
      }
    },
    {
      "label": "Biscuits",
      "name": "biscuits",
      "type": "string",
      "description": "Optional biscuits for SQL authorization (comma-separated if multiple)",
      "optional": true,
      "show": {
        "actions.operation": [
          "execute-proxy-sql-generic",
          "execute-proxy-sql-content-queries"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/GatewayProxy/GatewayProxy.js"
},
	{
  "loadMethods": {},
  "label": "Space and Time Encrypted API",
  "name": "spaceAndTimeEncryptedApi",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg"
  },
  "type": "action",
  "category": "Database",
  "version": 1,
  "description": "Endpoints for executing SQL operations on encrypted tables, modifying encrypted data, and configuring dataset encryption in the Space and Time network.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Execute SQL Query on Encrypted Data",
      "name": "executeEncryptedSQL"
    },
    {
      "label": "Modify Encrypted Data (DML)",
      "name": "modifyEncryptedData"
    },
    {
      "label": "Configure Dataset Encryption",
      "name": "configureEncryption"
    }
  ],
  "credentials": [
    {
      "label": "Space and Time API Key",
      "name": "credentialMethod",
      "type": "string",
      "description": "JWT Bearer token for authentication",
      "default": ""
    }
  ],
  "inputParameters": [
    {
      "label": "SQL Statement",
      "name": "sqlText",
      "type": "string",
      "default": "",
      "description": "The raw SQL text to execute.",
      "show": {
        "actions.operation": [
          "executeEncryptedSQL"
        ]
      }
    },
    {
      "label": "Resources",
      "name": "resources",
      "type": "json",
      "default": "{}",
      "description": "List of tables or datasets to operate on.",
      "optional": true,
      "show": {
        "actions.operation": [
          "executeEncryptedSQL",
          "modifyEncryptedData",
          "configureEncryption"
        ]
      }
    },
    {
      "label": "Row Count",
      "name": "rowCount",
      "type": "number",
      "default": 0,
      "description": "Number of rows affected (used in DML operations).",
      "optional": true,
      "show": {
        "actions.operation": [
          "modifyEncryptedData"
        ]
      }
    },
    {
      "label": "Biscuits",
      "name": "biscuits",
      "type": "string",
      "default": "",
      "description": "Optional authorization tokens (comma-separated list).",
      "optional": true,
      "show": {
        "actions.operation": [
          "executeEncryptedSQL",
          "modifyEncryptedData",
          "configureEncryption"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/SpaceAndTime/SpaceAndTimeEncrypted.js"
},
	{
  "label": "Space and Time Auth API",
  "name": "spaceXTimeAuth",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg"
  },
  "type": "action",
  "category": "Authentication",
  "version": 1,
  "description": "Execute SpaceXTime API operations",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Authenticate User",
      "name": "authenticateUser",
      "description": "Request a temporary authentication challenge for the given user."
    },
    {
      "label": "Register User",
      "name": "registerUser",
      "description": "Request a temporary registration challenge for the given user."
    },
    {
      "label": "Request Token",
      "name": "requestToken",
      "description": "Initiate a new authentication session by providing identity via signature to generate a new accessToken and refreshToken."
    },
    {
      "label": "Refresh Token",
      "name": "refreshToken",
      "description": "Refresh an existing authenticated session by providing a valid refreshToken to generate a new accessToken and refreshToken."
    },
    {
      "label": "Logout",
      "name": "logout",
      "description": "End an authenticated session with a refreshToken."
    },
    {
      "label": "Validate Token",
      "name": "validateToken",
      "description": "Perform simple token validation and return claim metadata on success."
    },
    {
      "label": "Check User Identity",
      "name": "checkUserIdentity",
      "description": "Checks if a given user identifier is in use across the platform, facilitating registration process."
    },
    {
      "label": "Get Current Keychain",
      "name": "getCurrentKeychain",
      "description": "Retrieve public keys available for user authentication."
    },
    {
      "label": "Add Key to Keychain",
      "name": "addKeyToKeychain",
      "description": "Add a new public key to your keychain for authentication."
    },
    {
      "label": "Get Public Key Challenge",
      "name": "getPublicKeyChallenge",
      "description": "Request a challenge for adding a new public key."
    }
  ],
  "credentials": [
    {
      "label": "Space and Time API Key",
      "name": "spaceXTimeApiKey",
      "type": "string",
      "description": "API key required to authenticate requests to SpaceXTime."
    }
  ],
  "inputParameters": [
    {
      "label": "API Action",
      "name": "api",
      "type": "options",
      "options": [
        { "label": "Authenticate User", "name": "authenticateUser" },
        { "label": "Register User", "name": "registerUser" },
        { "label": "Request Token", "name": "requestToken" },
        { "label": "Refresh Token", "name": "refreshToken" },
        { "label": "Logout", "name": "logout" },
        { "label": "Validate Token", "name": "validateToken" },
        { "label": "Check User Identity", "name": "checkUserIdentity" },
        { "label": "Get Current Keychain", "name": "getCurrentKeychain" },
        { "label": "Add Key to Keychain", "name": "addKeyToKeychain" },
        { "label": "Get Public Key Challenge", "name": "getPublicKeyChallenge" }
      ],
      "default": "authenticateUser"
    },
    {
      "label": "Input Parameters",
      "name": "inputParameters",
      "type": "object",
      "description": "Payload parameters required for the selected action."
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo/path-to-file.js"
},
	{
  "loadMethods": {},
  "label": "Space and Time Subscription API",
  "name": "spaceAndTimeSubscription",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/sxtLogo-3c3ae808.svg"
  },
  "type": "action",
  "category": "Web3 Services",
  "version": 1,
  "description": "Manage your Space and Time subscription, users, and settings via API.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        { "label": "Get Subscription Info", "name": "getSubscriptionInfo" },
        { "label": "Get Subscription Users", "name": "getSubscriptionUsers" },
        { "label": "Set Subscription Name", "name": "setSubscriptionName" },
        { "label": "Create Subscription Invite", "name": "createSubscriptionInvite" },
        { "label": "Join Subscription", "name": "joinSubscription" },
        { "label": "Set User Role", "name": "setUserRole" },
        { "label": "Remove User", "name": "removeUser" },
        { "label": "Leave Subscription", "name": "leaveSubscription" },
        { "label": "Get Subscription Balance", "name": "getSubscriptionBalance" },
        { "label": "Get Usage Config", "name": "getUsageConfig" },
        { "label": "Set Usage Config", "name": "setUsageConfig" },
        { "label": "Get Credit Offerings", "name": "getCreditOfferings" },
        { "label": "Get Free Queries", "name": "getFreeQueries" },
        { "label": "Get Default Free Queries", "name": "getDefaultFreeQueries" }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        { "label": "Space and Time API Key", "name": "spaceAndTimeApi" }
      ],
      "default": "spaceAndTimeApi"
    }
  ],
  "inputParameters": [
    {
      "label": "Subscription Name",
      "name": "subscriptionName",
      "type": "string",
      "description": "The new name of your subscription.",
      "optional": false,
      "show": { "actions.operation": ["setSubscriptionName"] }
    },
    {
      "label": "Role",
      "name": "role",
      "type": "options",
      "options": [
        { "label": "Owner", "name": "owner" },
        { "label": "Admin", "name": "admin" },
        { "label": "Member", "name": "member" }
      ],
      "description": "Role to assign in the subscription.",
      "show": { "actions.operation": ["createSubscriptionInvite", "setUserRole"] }
    },
    {
      "label": "Join Code",
      "name": "joinCode",
      "type": "string",
      "description": "The invitation code to join a subscription.",
      "optional": false,
      "show": { "actions.operation": ["joinSubscription"] }
    },
    {
      "label": "User ID",
      "name": "userId",
      "type": "string",
      "description": "ID of the user to modify.",
      "optional": false,
      "show": { "actions.operation": ["setUserRole", "removeUser"] }
    },
    {
      "label": "Usage Config",
      "name": "config",
      "type": "string",
      "description": "Configuration settings for usage limits.",
      "optional": false,
      "show": { "actions.operation": ["setUsageConfig"] }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/SpaceAndTime/SpaceAndTime.js"
},
	{
  "loadMethods": {},
  "label": "Nowhere API",
  "name": "nowhereAPI",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/10545480.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/10545480.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/10545480.png"
  },
  "type": "action",
  "category": "Virtual Spaces",
  "version": 1,
  "description": "Manage stations, spaces, and user roles via the Nowhere API",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Get User Info",
          "name": "getUserInfo"
        },
        {
          "label": "Get Embed Link",
          "name": "getEmbedLink"
        },
        {
          "label": "Create Station",
          "name": "createStation"
        },
        {
          "label": "Update Station",
          "name": "updateStation"
        },
        {
          "label": "Create Space",
          "name": "createSpace"
        },
        {
          "label": "Update Space",
          "name": "updateSpace"
        },
        {
          "label": "Manage Station Roles",
          "name": "manageStationRoles"
        },
        {
          "label": "Manage Space Roles",
          "name": "manageSpaceRoles"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Nowhere API Key",
          "name": "nowhereApiKey"
        }
      ],
      "default": "nowhereApiKey"
    }
  ],
  "inputParameters": [
    {
      "label": "API Key",
      "name": "apiKey",
      "type": "string",
      "description": "Your Nowhere API key",
      "optional": false
    },
    {
      "label": "Space ID",
      "name": "spaceId",
      "type": "string",
      "description": "The ID of the space for operations like fetching embed links",
      "optional": true,
      "show": {
        "actions.operation": [
          "getEmbedLink",
          "createSpace",
          "updateSpace",
          "manageSpaceRoles"
        ]
      }
    },
    {
      "label": "Station ID",
      "name": "stationId",
      "type": "string",
      "description": "The ID of the station for operations like updating or managing roles",
      "optional": true,
      "show": {
        "actions.operation": [
          "updateStation",
          "manageStationRoles"
        ]
      }
    },
    {
      "label": "User ID",
      "name": "userId",
      "type": "string",
      "description": "The ID of the user for managing station or space roles",
      "optional": true,
      "show": {
        "actions.operation": [
          "manageStationRoles",
          "manageSpaceRoles"
        ]
      }
    },
    {
      "label": "Station Data",
      "name": "stationData",
      "type": "json",
      "description": "JSON data for creating or updating a station",
      "optional": true,
      "show": {
        "actions.operation": [
          "createStation",
          "updateStation"
        ]
      }
    },
    {
      "label": "Space Data",
      "name": "spaceData",
      "type": "json",
      "description": "JSON data for creating or updating a space",
      "optional": true,
      "show": {
        "actions.operation": [
          "createSpace",
          "updateSpace"
        ]
      }
    },
    {
      "label": "Embed Link Options",
      "name": "embedOptions",
      "type": "json",
      "description": "Options for fetching the embed link",
      "optional": true,
      "show": {
        "actions.operation": [
          "getEmbedLink"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/Nowhere/Nowhere.js"
},
	{
  "loadMethods": {},
  "label": "PureTalk",
  "name": "pureTalk",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/pure.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/pure.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/pure.png"
  },
  "type": "action",
  "category": "Telecommunications",
  "version": 1,
  "description": "Interact with the Puretalk AI® API to manage voices, AI assistants, phone numbers, calls, and related tasks.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        { "label": "Retrieve all voices", "name": "getVoices" },
        { "label": "Retrieve a specific voice by ID", "name": "getVoice" },
        { "label": "Create a new AI Assistant", "name": "createAssistant" },
        { "label": "Retrieve all AI Assistants", "name": "getAssistants" },
        { "label": "Retrieve a specific AI Assistant by ID", "name": "getAssistant" },
        { "label": "Update an existing AI Assistant", "name": "updateAssistant" },
        { "label": "Delete an AI Assistant by ID", "name": "deleteAssistant" },
        { "label": "Retrieve chatbot configuration for an AI Assistant", "name": "getChatbotConfig" },
        { "label": "Add or update a task for an AI Assistant", "name": "addOrUpdateTask" },
        { "label": "Delete a task for an AI Assistant", "name": "deleteTask" },
        { "label": "Retrieve all phone numbers", "name": "getPhoneNumbers" },
        { "label": "Retrieve a specific phone number by ID", "name": "getPhoneNumber" },
        { "label": "Delete a phone number by ID", "name": "deletePhoneNumber" },
        { "label": "Connect a phone number", "name": "connectPhoneNumber" },
        { "label": "Retrieve a list of calls", "name": "getCallList" },
        { "label": "Retrieve details of a specific call by ID", "name": "getCall" }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        { "label": "PureTalk API Key", "name": "pureTalkApiKey" }
      ],
      "default": "pureTalkApiKey"
    }
  ],
  "inputParameters": [
    {
      "label": "Page",
      "name": "page",
      "type": "number",
      "description": "The page number for paginated results.",
      "optional": true,
      "show": {
        "actions.operation": [
          "getVoices",
          "getAssistants",
          "getPhoneNumbers",
          "getCallList"
        ]
      }
    },
    {
      "label": "Limit",
      "name": "limit",
      "type": "number",
      "description": "The maximum number of results to return.",
      "optional": true,
      "show": {
        "actions.operation": [
          "getVoices",
          "getAssistants",
          "getPhoneNumbers",
          "getCallList"
        ]
      }
    },
    {
      "label": "Voice ID",
      "name": "voice_id",
      "type": "number",
      "description": "ID of the voice to retrieve.",
      "optional": false,
      "show": {
        "actions.operation": [
          "getVoice"
        ]
      }
    },
    {
      "label": "Assistant ID",
      "name": "assistant_id",
      "type": "string",
      "description": "ID of the AI Assistant.",
      "optional": false,
      "show": {
        "actions.operation": [
          "getAssistant",
          "updateAssistant",
          "deleteAssistant",
          "getChatbotConfig",
          "addOrUpdateTask",
          "deleteTask"
        ]
      }
    },
    {
      "label": "Assistant Name",
      "name": "assistant_name",
      "type": "string",
      "description": "Name of the AI Assistant.",
      "optional": false,
      "show": {
        "actions.operation": [
          "createAssistant",
          "updateAssistant"
        ]
      }
    },
    {
      "label": "Assistant Configuration",
      "name": "assistant_config",
      "type": "string",
      "description": "Configuration details for the AI Assistant (JSON format).",
      "optional": false,
      "show": {
        "actions.operation": [
          "createAssistant",
          "updateAssistant"
        ]
      }
    },
    {
      "label": "LLM Task ID",
      "name": "llm_task_id",
      "type": "string",
      "description": "Task ID for the LLM state.",
      "optional": false,
      "show": {
        "actions.operation": [
          "addOrUpdateTask"
        ]
      }
    },
    {
      "label": "LLM Task State",
      "name": "llm_task_state",
      "type": "string",
      "description": "State details for the LLM task (JSON format).",
      "optional": false,
      "show": {
        "actions.operation": [
          "addOrUpdateTask"
        ]
      }
    },
    {
      "label": "Task ID",
      "name": "task_id",
      "type": "string",
      "description": "ID of the task to delete.",
      "optional": false,
      "show": {
        "actions.operation": [
          "deleteTask"
        ]
      }
    },
    {
      "label": "Phone Number ID",
      "name": "phone_number_id",
      "type": "number",
      "description": "ID of the phone number.",
      "optional": false,
      "show": {
        "actions.operation": [
          "getPhoneNumber",
          "deletePhoneNumber",
          "connectPhoneNumber"
        ]
      }
    },
    {
      "label": "Provider",
      "name": "provider",
      "type": "string",
      "description": "Name of the provider to connect the phone number.",
      "optional": false,
      "show": {
        "actions.operation": [
          "connectPhoneNumber"
        ]
      }
    },
    {
      "label": "Call ID",
      "name": "call_id",
      "type": "number",
      "description": "ID of the call to retrieve.",
      "optional": false,
      "show": {
        "actions.operation": [
          "getCall"
        ]
      }
    },
    {
      "label": "Response Format",
      "name": "responseType",
      "type": "options",
      "description": "The response format.",
      "options": [
        { "label": "JSON", "name": "json" },
        { "label": "Base64", "name": "base64" }
      ],
      "default": "json",
      "optional": true
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/PureTalk/PureTalk.js"
},
	{
  "label": "DataScraper",
  "name": "datascraper",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/DataScraper/default.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/DataScraper/light.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/main/nodes/DataScraper/dark.png"
  },
  "type": "action",
  "category": "Web Scraping",
  "version": 1,
  "description": "Extracts data from web pages using customizable extraction rules with Puppeteer.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Action",
      "name": "action",
      "type": "options",
      "options": [
        {
          "label": "Scrape Webpage",
          "name": "scrapeWebpage",
          "description": "Scrapes data from a webpage given a URL and extraction rules."
        },
        {
          "label": "Extract Element",
          "name": "extractElement",
          "description": "Extracts a specific element from the webpage using a CSS selector."
        }
      ],
      "default": "scrapeWebpage"
    }
  ],
  "inputParameters": [
    {
      "label": "URL",
      "name": "url",
      "type": "string",
      "default": "",
      "description": "The URL of the webpage to scrape."
    },
    {
      "label": "Extraction Rules",
      "name": "rules",
      "type": "string",
      "default": "",
      "description": "A JSON string specifying the extraction rules for scraping data.",
      "show": {
        "actions.action": [
          "scrapeWebpage"
        ]
      }
    },
    {
      "label": "CSS Selector",
      "name": "cssSelector",
      "type": "string",
      "default": "",
      "description": "The CSS selector to target a specific element on the page.",
      "show": {
        "actions.action": [
          "extractElement"
        ]
      }
    }
  ],
  "filePath": null
},
{
  "label": "Model Context Protocol",
  "name": "modelContextProtocolTest",
  "icons": {
    "default": "https://raw.githubusercontent.com/nerding-io/n8n-nodes-mcp/575ac49928e8fa192191f0a8f631e407c071fdfb/nodes/McpClient/mcpClient.svg",
    "light": "https://raw.githubusercontent.com/nerding-io/n8n-nodes-mcp/575ac49928e8fa192191f0a8f631e407c071fdfb/nodes/McpClient/mcpClient.svg",
    "dark": "https://raw.githubusercontent.com/nerding-io/n8n-nodes-mcp/575ac49928e8fa192191f0a8f631e407c071fdfb/nodes/McpClient/mcpClient.svg"
  },
  "type": "trigger",
  "category": "Agent Orchestration",
  "version": 1,
  "description": "Executes tools defined in the Model Context Protocol serverless environment.",
  "incoming": 0,
  "outgoing": 1,
  "actions": [
    {
      "label": "Tool to Execute",
      "name": "toolName",
      "type": "options",
      "options": [
        { "label": "Calculator", "name": "calculator" }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [{ "label": "MCP API Key", "name": "apiKey" }],
      "default": "apiKey"
    }
  ],
  "inputParameters": [
    {
      "label": "Arguments",
      "name": "arguments",
      "type": "string",
      "default": "{\"operation\": \"add\", \"numbers\": [1, 2, 3]}",
      "description": "JSON payload of arguments required by the tool.",
      "show": { "actions.toolName": ["calculator"] }
    }
  ],
  "filePath": null
},
{
  "loadMethods": {},
  "label": "Instagram",
  "name": "instagram",
  "icons": {
    "default": "https://raw.githubusercontent.com/tomnemec/Instagram-social-icons/refs/heads/master/insta.png",
    "light":   "https://raw.githubusercontent.com/tomnemec/Instagram-social-icons/refs/heads/master/insta.png",
    "dark":    "https://raw.githubusercontent.com/tomnemec/Instagram-social-icons/refs/heads/master/insta.png"
  },
  "type": "action",
  "category": "Social Media",
  "version": 1,
  "description": "Interact with Instagram’s private API: login, fetch profiles/posts/followers, comment, like, upload and manage direct messages, 2FA, registration, etc.",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        { "label": "Login",                          "name": "login" },
        { "label": "Authenticate 2FA",               "name": "authenticateUser2FA" },
        { "label": "Submit 2FA Code",                "name": "submit2FA" },
        { "label": "Register Username & Password",   "name": "register" },
        { "label": "Reset Password",                 "name": "resetPassword" },
        { "label": "Register Phone",                 "name": "registerPhone" },
        { "label": "Verify Phone",                   "name": "verifyPhone" },
        { "label": "Register Email",                 "name": "registerEmail" },
        { "label": "Verify Email",                   "name": "verifyEmail" },
        { "label": "Register Device",                "name": "registerDevice" },
        { "label": "Solve Challenge",                "name": "solveInstagramChallenge" },
        { "label": "Get User ID",                    "name": "getUserId" },
        { "label": "Get Profile Data",               "name": "getProfileData" },
        { "label": "Get Post Data",                  "name": "getPostData" },
        { "label": "Get Location Data",              "name": "getLocationData" },
        { "label": "Get Hashtag Data",               "name": "getHashtagData" },
        { "label": "Fetch Followers",                "name": "fetchFollowers" },
        { "label": "Fetch Following",                "name": "fetchFollowing" },
        { "label": "Fetch Posts",                    "name": "fetchPosts" },
        { "label": "Fetch Tagged Posts",             "name": "fetchTaggedPosts" },
        { "label": "Fetch Post Comments",            "name": "fetchPostComments" },
        { "label": "Fetch Post Likes",               "name": "fetchPostLikes" },
        { "label": "Like Post",                      "name": "likePost" },
        { "label": "Like Story",                     "name": "likeStory" },
        { "label": "Comment On Post",                "name": "commentOnPost" },
        { "label": "Follow Profile",                 "name": "followProfile" },
        { "label": "Unfollow Profile",               "name": "unfollowProfile" },
        { "label": "Upload Post",                    "name": "uploadPost" },
        { "label": "Upload Story",                   "name": "uploadStory" },
        { "label": "Upload Avatar",                  "name": "uploadAvatar" },
        { "label": "Search",                         "name": "search" },
        { "label": "Get Profile Suggestions",        "name": "getProfileSuggestions" },
        { "label": "Fetch Direct Messages",          "name": "fetchDirectMessages" },
        { "label": "Create DM Thread",               "name": "createDirectMessageThread" },
        { "label": "Send Direct Message",            "name": "sendDirectMessage" },
        { "label": "Fetch DM Thread",                "name": "fetchDirectMessageThread" }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Proxy (optional)",
      "name": "proxy",
      "type": "string",
      "placeholder": "host:port or user:pass@host:port",
      "optional": true
    }
  ],
  "inputParameters": [
    {
      "label": "Username",
      "name": "username",
      "type": "string",
      "default": "",
      "description": "Instagram username",
      "show": {
        "actions.operation": [
          "login",
          "authenticateUser2FA",
          "register",
          "getUserId"
        ]
      }
    },
    {
      "label": "Password",
      "name": "password",
      "type": "string",
      "default": "",
      "placeholder": "••••••••",
      "description": "Instagram password",
      "show": {
        "actions.operation": [
          "login",
          "authenticateUser2FA",
          "register"
        ]
      }
    },
    {
      "label": "2FA Code",
      "name": "code",
      "type": "string",
      "default": "",
      "description": "Two‑factor authentication code",
      "show": {
        "actions.operation": [
          "submit2FA"
        ]
      }
    },
    {
      "label": "Profile Identifier",
      "name": "profileId",
      "type": "string",
      "default": "",
      "description": "Numeric user ID or username",
      "show": {
        "actions.operation": [
          "getProfileData",
          "fetchFollowers",
          "fetchFollowing",
          "fetchPosts",
          "fetchTaggedPosts",
          "getPostData",
          "getLocationData",
          "getHashtagData",
          "fetchPostComments",
          "fetchPostLikes",
          "followProfile",
          "unfollowProfile",
          "createDirectMessageThread",
          "fetchDirectMessageThread"
        ]
      }
    },
    {
      "label": "Post ID",
      "name": "postId",
      "type": "string",
      "default": "",
      "description": "Media/post ID",
      "show": {
        "actions.operation": [
          "getPostData",
          "fetchPostComments",
          "fetchPostLikes",
          "likePost",
          "likeStory",
          "commentOnPost"
        ]
      }
    },
    {
      "label": "Location",
      "name": "location",
      "type": "string",
      "default": "",
      "description": "Location ID or slug",
      "show": {
        "actions.operation": [
          "getLocationData"
        ]
      }
    },
    {
      "label": "Hashtag",
      "name": "hashtag",
      "type": "string",
      "default": "",
      "description": "Hashtag (without #)",
      "show": {
        "actions.operation": [
          "getHashtagData"
        ]
      }
    },
    {
      "label": "Count",
      "name": "count",
      "type": "number",
      "default": 12,
      "optional": true,
      "description": "Number of items to fetch",
      "show": {
        "actions.operation": [
          "fetchFollowers",
          "fetchFollowing",
          "fetchPosts",
          "fetchTaggedPosts",
          "fetchDirectMessages"
        ]
      }
    },
    {
      "label": "Search Query",
      "name": "query",
      "type": "string",
      "default": "",
      "description": "Text to search for users or tags",
      "show": {
        "actions.operation": [
          "search"
        ]
      }
    },
    {
      "label": "Comment Text",
      "name": "comment",
      "type": "string",
      "default": "",
      "placeholder": "Your comment",
      "description": "Text to post on a comment",
      "show": {
        "actions.operation": [
          "commentOnPost"
        ]
      }
    },
    {
      "label": "Caption",
      "name": "caption",
      "type": "string",
      "default": "",
      "placeholder": "Your caption",
      "description": "Caption for a new post",
      "show": {
        "actions.operation": [
          "uploadPost"
        ]
      }
    },
    {
      "label": "Image File",
      "name": "image",
      "type": "file",
      "default": "",
      "description": "Image to upload (post, story or avatar)",
      "show": {
        "actions.operation": [
          "uploadPost",
          "uploadStory",
          "uploadAvatar"
        ]
      }
    },
    {
      "label": "Message Text",
      "name": "message",
      "type": "string",
      "default": "",
      "placeholder": "Your DM message",
      "description": "Direct message text",
      "show": {
        "actions.operation": [
          "sendDirectMessage"
        ]
      }
    },
    {
      "label": "Thread ID",
      "name": "threadId",
      "type": "string",
      "default": "",
      "description": "DM thread ID",
      "show": {
        "actions.operation": [
          "sendDirectMessage",
          "fetchDirectMessageThread"
        ]
      }
    },
    {
      "label": "Email",
      "name": "email",
      "type": "string",
      "default": "",
      "description": "Email address",
      "show": {
        "actions.operation": [
          "resetPassword",
          "registerEmail",
          "verifyEmail"
        ]
      }
    },
    {
      "label": "Phone",
      "name": "phone",
      "type": "string",
      "default": "",
      "description": "Phone number",
      "show": {
        "actions.operation": [
          "registerPhone",
          "verifyPhone"
        ]
      }
    },
    {
      "label": "OTP",
      "name": "OTP",
      "type": "string",
      "default": "",
      "description": "One‑time code sent to phone/email",
      "show": {
        "actions.operation": [
          "verifyPhone",
          "verifyEmail"
        ]
      }
    },
    {
      "label": "Biography",
      "name": "biography",
      "type": "string",
      "default": "",
      "description": "New user biography",
      "show": {
        "actions.operation": [
          "setUserBiography"
        ]
      }
    },
    {
      "label": "Challenge Anchor",
      "name": "anchor",
      "type": "string",
      "default": "",
      "description": "Anchor token for a challenge",
      "show": {
        "actions.operation": [
          "solveInstagramChallenge"
        ]
      }
    },
    {
      "label": "CAPTCHA Data",
      "name": "captchaData",
      "type": "object",
      "default": {},
      "description": "Payload for CAPTCHA challenge",
      "show": {
        "actions.operation": [
          "solveInstagramChallenge"
        ]
      }
    }
  ],
  "filePath": "./modules/Instagram.js"
},
{
  "loadMethods": {},
  "label": "LangChain Web Browser",
  "name": "langchainWebBrowser",
  "icons": {
    "default": "https://raw.githubusercontent.com/FlowiseAI/Flowise/9d9135bed53796b50517e0423bbb3073732cf886/packages/components/nodes/tools/SearchApi/searchapi.svg",
    "light":   "https://raw.githubusercontent.com/FlowiseAI/Flowise/9d9135bed53796b50517e0423bbb3073732cf886/packages/components/nodes/tools/SearchApi/searchapi.svg",
    "dark":    "https://raw.githubusercontent.com/FlowiseAI/Flowise/9d9135bed53796b50517e0423bbb3073732cf886/packages/components/nodes/tools/SearchApi/searchapi.svg"
  },
  "type": "action",
  "category": "Web",
  "version": 1,
  "description": "Open a URL or run a live web search via LangChain’s WebBrowser tool, optionally summarized by an LLM.",
  "incoming": 1,
  "outgoing": 1,

  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Browse / Search",
          "name": "browse",
          "description": "Pass a full URL to fetch + parse it, or a plain question / keyword to search the web."
        }
      ]
    }
  ],

  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        { "label": "OpenAI API Key", "name": "openAIApi" }
      ],
      "default": "openAIApi",
      "description": "Leave blank if you only need raw page text (no LLM summarization)."
    }
  ],

  "inputParameters": [
    {
      "label": "Query or URL",
      "name": "query",
      "type": "string",
      "placeholder": "https://example.com  OR  “What is LangChain?”",
      "description": "Full URL **or** natural‑language query.",
      "show": { "actions.operation": ["browse"] }
    },
    {
      "label": "Model",
      "name": "modelName",
      "type": "options",
      "options": [
        { "label": "gpt-3.5-turbo", "name": "gpt-3.5-turbo" },
        { "label": "gpt-4o-mini",   "name": "gpt-4o-mini" },
        { "label": "gpt-4",         "name": "gpt-4" }
      ],
      "optional": true,
      "default": "gpt-3.5-turbo",
      "description": "Ignored if you don’t supply an API key.",
      "show": { "actions.operation": ["browse"] }
    },
    {
      "label": "Temperature",
      "name": "temperature",
      "type": "number",
      "optional": true,
      "default": 0.0,
      "description": "0 – 1. Higher is more creative.",
      "show": { "actions.operation": ["browse"] }
    },
    {
      "label": "Max Depth",
      "name": "maxDepth",
      "type": "number",
      "optional": true,
      "default": 1,
      "description": "How many link hops the browser may follow.",
      "show": { "actions.operation": ["browse"] }
    }
  ],

  "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/LangChainWebBrowser/LangChainWebBrowser.js"
},
{
"loadMethods": {},
"label": "GitHub OAuth Test",
"name": "github",
"icons": {
  "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GitHub/GitHub-Logo.png",
  "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GitHub/GitHub-Logo.png",
  "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/github-icon-1024x994-4h5sdmko.png"
},
"type": "action",
"category": "Development",
"version": 1.0,
"description": "GitHub API",
"incoming": 1,
"outgoing": 1,
"actions": [
  {
    "label": "Operation",
    "name": "operation",
    "type": "options",
    "options": [
      {
        "label": "List User Repositories",
        "name": "listUserRepositories",
        "description": "Lists public repositories for the specified user."
      },
      {
        "label": "List Organization Repositories",
        "name": "listOrganizationRepositories",
        "description": "Lists repositories for the specified organization."
      },
      {
        "label": "List Repository Issues",
        "name": "listRepositoryIssues",
        "description": "List issues in a repository."
      },
      {
        "label": "Create an Issue",
        "name": "createIssue",
        "description": "Any user with pull access to a repository can create an issue."
      },
      {
        "label": "Get an Issue",
        "name": "getIssue",
        "description": "Get an issue in a repository."
      },
      {
        "label": "Update an Issue",
        "name": "updateIssue",
        "description": "Update an issue in a repository."
      },
      {
        "label": "Lock an Issue",
        "name": "lockIssue",
        "description": "Users with push access can lock an issue or pull request's conversation."
      },
      {
        "label": "Unlock an Issue",
        "name": "unlockIssue",
        "description": "Users with push access can unlock an issue's conversation."
      }
    ]
  }
],
"credentials": [
  {
    "label": "Credential Method",
    "name": "credentialMethod",
    "type": "oauth",
    "options": [
      {
        "label": "GitHub Oauth",
        "name": "github"
      }
    ],
    "default": "github"
  }
],
"inputParameters": [
  {
    "label": "Owner/Organization",
    "name": "owner",
    "type": "string",
    "show": {
      "actions.operation": [
        "listRepositoryIssues",
        "createIssue",
        "getIssue",
        "updateIssue",
        "lockIssue",
        "unlockIssue",
        "listUserRepositories",
        "listOrganizationRepositories"
      ]
    },
    "description": "The account owner of the repository. The name is not case sensitive."
  },
  {
    "label": "Type",
    "name": "orgType",
    "type": "options",
    "options": [
      { "label": "All", "name": "all" },
      { "label": "Public", "name": "public" },
      { "label": "Private", "name": "private" },
      { "label": "Forks", "name": "forks" },
      { "label": "Sources", "name": "sources" },
      { "label": "Member", "name": "member" },
      { "label": "Internal", "name": "internal" }
    ],
    "show": {
      "actions.operation": ["listOrganizationRepositories"]
    },
    "description": "Specifies the types of repositories you want returned.",
    "optional": true,
    "default": "all"
  },
  {
    "label": "Type",
    "name": "userType",
    "type": "options",
    "options": [
      { "label": "All", "name": "all" },
      { "label": "Owner", "name": "owner" },
      { "label": "Member", "name": "member" }
    ],
    "show": {
      "actions.operation": ["listUserRepositories"]
    },
    "description": "Specifies the types of repositories you want returned.",
    "optional": true,
    "default": "owner"
  },
  {
    "label": "Sort",
    "name": "sort",
    "type": "options",
    "options": [
      { "label": "Created", "name": "created" },
      { "label": "Updated", "name": "updated" },
      { "label": "Pushed", "name": "pushed" },
      { "label": "Full Name", "name": "full_name" }
    ],
    "show": {
      "actions.operation": ["listUserRepositories", "listOrganizationRepositories"]
    },
    "description": "The property to sort the results by.",
    "optional": true,
    "default": "created"
  },
  {
    "label": "Direction of Sort",
    "name": "direction",
    "type": "options",
    "options": [
      { "label": "Ascending", "name": "asc" },
      { "label": "Descending", "name": "desc" }
    ],
    "show": {
      "actions.operation": ["listUserRepositories", "listOrganizationRepositories"]
    },
    "description": "The order to sort by.",
    "optional": true,
    "default": "desc"
  },
  {
    "label": "Repository",
    "name": "repo",
    "type": "string",
    "show": {
      "actions.operation": [
        "listRepositoryIssues",
        "createIssue",
        "getIssue",
        "updateIssue",
        "lockIssue",
        "unlockIssue"
      ]
    },
    "description": "The name of the repository. The name is not case sensitive."
  },
  {
    "label": "Title",
    "name": "title",
    "type": "string",
    "show": { "actions.operation": ["createIssue"] },
    "description": "The title of the issue."
  },
  {
    "label": "Title",
    "name": "titleOptional",
    "type": "string",
    "show": { "actions.operation": ["updateIssue"] },
    "description": "The title of the issue.",
    "optional": true
  },
  {
    "label": "Body",
    "name": "body",
    "type": "string",
    "show": { "actions.operation": ["createIssue", "updateIssue"] },
    "description": "The contents of the issue.",
    "optional": true
  },
  {
    "label": "Issue Number",
    "name": "issueNumber",
    "type": "number",
    "show": {
      "actions.operation": [
        "getIssue",
        "updateIssue",
        "lockIssue",
        "unlockIssue"
      ]
    },
    "description": "The number that identifies the issue."
  },
  {
    "label": "Lock Reason",
    "name": "lockReason",
    "type": "options",
    "options": [
      { "label": "Off Topic", "name": "off-topic" },
      { "label": "Too Heated", "name": "too heated" },
      { "label": "Resolved", "name": "resolved" },
      { "label": "Spam", "name": "spam" }
    ],
    "show": { "actions.operation": ["lockIssue"] },
    "description": "The reason for locking the issue or pull request conversation.",
    "optional": true
  }
],
"filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/GitHub/GitHub.js"
},
	
{
  "loadMethods": {},
  "label": "Agent Engine",
  "name": "agentEngine",
  "icons": {
    "default": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/node-schemas/agent2.png",
    "light": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/node-schemas/agent2.png",
    "dark": "https://raw.githubusercontent.com/weave-services/node-assets/refs/heads/main/node-list/node-schemas/agent2.png"
  },
  "type": "action",
  "category": "Artificial Intelligence",
  "version": 1,
  "description": "Agent Engine similar to n8ns",
  "incoming": 1,
  "outgoing": 2,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "ChatGPT",
          "name": "chatgpt"
        },
        {
          "label": "Generate Image via text prompt",
          "name": "generateImage"
        },
        {
          "label": "Generate Text Completion via text prompt",
          "name": "textCompletion"
        }
      ]
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "OpenAI API Key",
          "name": "openAIApi"
        }
      ],
      "default": "openAIApi"
    }
  ],
  "inputParameters": [
    {
      "label": "Model",
      "name": "model",
      "type": "asyncOptions",
      "loadMethod": "listModels",
      "description": "AI model to use.",
      "default": "text-davinci-003",
      "show": {
        "actions.operation": [
          "textCompletion"
        ]
      }
    },
    {
      "label": "Model",
      "name": "model",
      "type": "options",
      "options": [
        {
          "label": "gpt-3.5-turbo",
          "name": "gpt-3.5-turbo"
        },
        {
          "label": "gpt-3.5-turbo-0125",
          "name": "gpt-3.5-turbo-0125"
        },
        {
          "label": "gpt-4.1-preview",
          "name": "gpt-4.1"
        },
        {
          "label": "gpt-4o",
          "name": "gpt-4o"
        },
                  {
          "label": "gpt-4o-mini",
          "name": "gpt-4o-mini"
        },
                          {
          "label": "gpt-4o-search-preview",
          "name": "gpt-4o-search-preview"
        },
        {
          "label": "gpt-4-turbo-preview",
          "name": "gpt-4-turbo-preview"
        },
            {
          "label": "gpt-4.1-mini",
          "name": "gpt-4.1-mini"
        },
        
                {
          "label": "gpt-4.1-nano",
          "name": "gpt-4.1-nano"
        },
                {
          "label": "o1-mini",
          "name": "o1-mini"
        },
            {
          "label": "o1-preview",
          "name": "o1-preview"
        }
      ],
      "description": "ChatGPT model to use.",
      "default": "gpt-3.5-turbo",
      "show": {
        "actions.operation": [
          "chatgpt"
        ]
      }
    },
    {
      "label": "Max Tokens",
      "name": "max_tokens",
      "type": "number",
      "description": "The maximum number of tokens to generate.",
      "optional": true,
      "default": 4096,
      "show": {
        "actions.operation": [
          "chatgpt",
          "textCompletion"
        ]
      }
    },
    {
      "label": "Top P",
      "name": "top_p",
      "type": "number",
      "description": "Nucleus sampling parameter to control diversity (between 0 and 1).",
      "optional": true,
      "default": 1.0,
      "show": {
        "actions.operation": [
          "chatgpt",
          "textCompletion"
        ]
      }
    },
    {
      "label": "Temperature",
      "name": "temperature",
      "type": "number",
      "description": "Controls randomness in output (between 0 and 1).",
      "optional": true,
      "default": 0.7,
      "show": {
        "actions.operation": [
          "chatgpt",
          "textCompletion"
        ]
      }
    },
    {
      "label": "Text Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Write me a 250 words essay on fish",
      "description": "The prompt for ChatGPT",
      "show": {
        "actions.operation": [
          "chatgpt"
        ]
      }
    },
      {
      "label": "Stream",
      "name": "stream",
      "type": "boolean",
      "description": "Stream tokens as they arrive (only for chatgpt/textCompletion).",
      "optional": true,
      "default": false,
      "show": { "actions.operation": ["chatgpt", "textCompletion"] }
    },
    {
      "label": "Text Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Say this is a test",
      "description": "The prompt to generate completions for",
      "show": {
        "actions.operation": [
          "textCompletion"
        ]
      }
    },
    {
      "label": "Image Description",
      "name": "prompt",
      "type": "string",
      "default": "",
      "placeholder": "Photograph of an astronaut riding a horse",
      "description": "Description of the image you want to generate. The maximum length is 1000 characters.",
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Image Number",
      "name": "imageNumber",
      "type": "number",
      "placeholder": "1",
      "default": "1",
      "description": "The number of images to generate. Must be between 1 and 10.",
      "optional": true,
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Image Size",
      "name": "imageSize",
      "type": "options",
      "description": "The size of the generated images.",
      "options": [
        {
          "label": "256x256",
          "name": "256x256"
        },
        {
          "label": "512x512",
          "name": "512x512"
        },
        {
          "label": "1024x1024",
          "name": "1024x1024"
        }
      ],
      "optional": true,
      "default": "1024x1024",
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    },
    {
      "label": "Response Format",
      "name": "response_format",
      "type": "options",
      "description": "The format in which the generated images are returned.",
      "options": [
        {
          "label": "url",
          "name": "url"
        },
        {
          "label": "b64_json",
          "name": "b64_json"
        }
      ],
      "default": "url",
      "optional": true,
      "show": {
        "actions.operation": [
          "generateImage"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/OpenAI/OpenAI.js"
},
{
  "label": "Apify",
  "name": "apify",
  "icons": {
    "default": "https://upload.wikimedia.org/wikipedia/commons/2/28/Apify-logo.svg",
    "light": "https://upload.wikimedia.org/wikipedia/commons/2/28/Apify-logo.svg",
    "dark": "https://upload.wikimedia.org/wikipedia/commons/2/28/Apify-logo.svg"
  },
  "type": "action",
  "category": "Web Scraping",
  "version": 1,
  "description": "Manage Apify Actors, tasks, runs, storages (datasets, key-value stores, request queues), schedules, webhooks and more via the Apify REST API",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "API",
      "name": "api",
      "type": "options",
      "options": [
        {
          "label": "Get list of Actors",
          "name": "getListOfActors"
        },
        {
          "label": "Create Actor",
          "name": "createActor"
        },
        {
          "label": "Get Actor",
          "name": "getActor"
        },
        {
          "label": "Update Actor",
          "name": "updateActor"
        },
        {
          "label": "Delete Actor",
          "name": "deleteActor"
        },
        {
          "label": "Actor version - Get list of versions",
          "name": "getListOfVersions"
        },
        {
          "label": "Actor version - Create version",
          "name": "createVersion"
        },
        {
          "label": "Actor version - Get version",
          "name": "getVersion"
        },
        {
          "label": "Actor version - Update version",
          "name": "updateVersion"
        },
        {
          "label": "Actor version - Delete version",
          "name": "deleteVersion"
        },
        {
          "label": "Environment variable - Get list of environment variables",
          "name": "getListOfEnvVars"
        },
        {
          "label": "Environment variable - Create environment variable",
          "name": "createEnvVar"
        },
        {
          "label": "Environment variable - Get environment variable",
          "name": "getEnvVar"
        },
        {
          "label": "Environment variable - Update environment variable",
          "name": "updateEnvVar"
        },
        {
          "label": "Environment variable - Delete environment variable",
          "name": "deleteEnvVar"
        },
        {
          "label": "Actor build - Get list of builds",
          "name": "getListOfBuilds"
        },
        {
          "label": "Actor build - Build Actor",
          "name": "buildActor"
        },
        {
          "label": "Actor build - Get default build",
          "name": "getDefaultBuild"
        },
        {
          "label": "Actor build - Get build",
          "name": "getBuildByActor"
        },
        {
          "label": "Actor build - Abort build",
          "name": "abortBuildByActor"
        },
        {
          "label": "Actor build - Get OpenAPI definition",
          "name": "getBuildOpenApiActor"
        },
        {
          "label": "Actor run - Get list of runs",
          "name": "getListOfRuns"
        },
        {
          "label": "Run Actor",
          "name": "runActor"
        },
        {
          "label": "Run Actor synchronously with input and return output",
          "name": "runActorSync"
        },
        {
          "label": "Run Actor synchronously with input and get dataset items",
          "name": "runActorSyncDataset"
        },
        {
          "label": "Resurrect run",
          "name": "resurrectRun"
        },
        {
          "label": "Actor run - Get last run",
          "name": "getLastRun"
        },
        {
          "label": "Get list of webhooks (actor)",
          "name": "getListOfActorWebhooks"
        },
        {
          "label": "Get user builds list",
          "name": "getUserBuildsList"
        },
        {
          "label": "Get build",
          "name": "getBuild"
        },
        {
          "label": "Delete build",
          "name": "deleteBuild"
        },
        {
          "label": "Abort build",
          "name": "abortBuild"
        },
        {
          "label": "Get build log",
          "name": "getBuildLog"
        },
        {
          "label": "Get OpenAPI definition (build)",
          "name": "getBuildOpenApi"
        },
        {
          "label": "Get user runs list",
          "name": "getUserRunsList"
        },
        {
          "label": "Get run",
          "name": "getRun"
        },
        {
          "label": "Update status message",
          "name": "updateRunStatus"
        },
        {
          "label": "Delete run",
          "name": "deleteRun"
        },
        {
          "label": "Abort run",
          "name": "abortRun"
        },
        {
          "label": "Metamorph run",
          "name": "metamorphRun"
        },
        {
          "label": "Reboot run",
          "name": "rebootRun"
        },
        {
          "label": "Get list of tasks",
          "name": "getListOfTasks"
        },
        {
          "label": "Create task",
          "name": "createTask"
        },
        {
          "label": "Get task",
          "name": "getTask"
        },
        {
          "label": "Update task",
          "name": "updateTask"
        },
        {
          "label": "Delete task",
          "name": "deleteTask"
        },
        {
          "label": "Get task input",
          "name": "getTaskInput"
        },
        {
          "label": "Update task input",
          "name": "updateTaskInput"
        },
        {
          "label": "Get list of webhooks (task)",
          "name": "getListOfTaskWebhooks"
        },
        {
          "label": "Get list of task runs",
          "name": "getListOfTaskRuns"
        },
        {
          "label": "Run task",
          "name": "runTask"
        },
        {
          "label": "Run task synchronously with input and return output",
          "name": "runTaskSync"
        },
        {
          "label": "Run task synchronously with input and get dataset items",
          "name": "runTaskSyncDataset"
        },
        {
          "label": "Task run - Get last run",
          "name": "getLastTaskRun"
        },
        {
          "label": "Get list of datasets",
          "name": "getListOfDatasets"
        },
        {
          "label": "Create dataset",
          "name": "createDataset"
        },
        {
          "label": "Get dataset",
          "name": "getDataset"
        },
        {
          "label": "Update dataset",
          "name": "updateDataset"
        },
        {
          "label": "Delete dataset",
          "name": "deleteDataset"
        },
        {
          "label": "Get items",
          "name": "getItems"
        },
        {
          "label": "Store items",
          "name": "storeItems"
        },
        {
          "label": "Get dataset statistics",
          "name": "getDatasetStats"
        },
        {
          "label": "Get list of key-value stores",
          "name": "getListOfKeyValueStores"
        },
        {
          "label": "Create key-value store",
          "name": "createKeyValueStore"
        },
        {
          "label": "Get store",
          "name": "getStore"
        },
        {
          "label": "Update store",
          "name": "updateStore"
        },
        {
          "label": "Delete store",
          "name": "deleteStore"
        },
        {
          "label": "Get list of keys",
          "name": "getListOfKeys"
        },
        {
          "label": "Get record",
          "name": "getRecord"
        },
        {
          "label": "Store record",
          "name": "storeRecord"
        },
        {
          "label": "Delete record",
          "name": "deleteRecord"
        },
        {
          "label": "Get list of request queues",
          "name": "getListOfRequestQueues"
        },
        {
          "label": "Create request queue",
          "name": "createRequestQueue"
        },
        {
          "label": "Get request queue",
          "name": "getRequestQueue"
        },
        {
          "label": "Update request queue",
          "name": "updateRequestQueue"
        },
        {
          "label": "Delete request queue",
          "name": "deleteRequestQueue"
        },
        {
          "label": "Add request",
          "name": "addRequest"
        },
        {
          "label": "Add requests",
          "name": "addRequests"
        },
        {
          "label": "Delete requests",
          "name": "deleteRequests"
        },
        {
          "label": "List requests",
          "name": "getListOfRequests"
        },
        {
          "label": "Get request",
          "name": "getRequest"
        },
        {
          "label": "Update request",
          "name": "updateRequest"
        },
        {
          "label": "Delete request",
          "name": "deleteRequest"
        },
        {
          "label": "Get head",
          "name": "getHead"
        },
        {
          "label": "Get head and lock",
          "name": "getHeadAndLock"
        },
        {
          "label": "Prolong request lock",
          "name": "prolongRequestLock"
        },
        {
          "label": "Delete request lock",
          "name": "deleteRequestLock"
        },
        {
          "label": "Get list of webhooks (all)",
          "name": "getListOfWebhooks"
        },
        {
          "label": "Create webhook",
          "name": "createWebhook"
        },
        {
          "label": "Get webhook",
          "name": "getWebhook"
        },
        {
          "label": "Update webhook",
          "name": "updateWebhook"
        },
        {
          "label": "Delete webhook",
          "name": "deleteWebhook"
        },
        {
          "label": "Test webhook",
          "name": "testWebhook"
        },
        {
          "label": "Get list of webhook dispatches",
          "name": "getWebhookDispatches"
        },
        {
          "label": "Get webhook dispatch",
          "name": "getWebhookDispatch"
        },
        {
          "label": "Get list of schedules",
          "name": "getListOfSchedules"
        },
        {
          "label": "Create schedule",
          "name": "createSchedule"
        },
        {
          "label": "Get schedule",
          "name": "getSchedule"
        },
        {
          "label": "Update schedule",
          "name": "updateSchedule"
        },
        {
          "label": "Delete schedule",
          "name": "deleteSchedule"
        },
        {
          "label": "Get schedule log",
          "name": "getScheduleLog"
        },
        {
          "label": "Get list of Actors in store",
          "name": "getListOfActorsInStore"
        },
        {
          "label": "Get log",
          "name": "getLog"
        },
        {
          "label": "Get public user data",
          "name": "getPublicUserData"
        },
        {
          "label": "Get private user data",
          "name": "getPrivateUserData"
        },
        {
          "label": "Get monthly usage",
          "name": "getMonthlyUsage"
        },
        {
          "label": "Get limits",
          "name": "getLimits"
        },
        {
          "label": "Update limits",
          "name": "updateLimits"
        }
      ],
      "default": "getListOfActors"
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "string",
      "options": [
        {
          "label": "Apify API Token",
          "name": "apifyApi"
        }
      ],
      "default": "apifyApi"
    }
  ],
  "inputParameters": [
    {
      "label": "Actor ID or Name",
      "name": "actorId",
      "type": "string",
      "description": "ID or username~actorName of the Actor",
      "show": {
        "actions.api": [
          "getActor",
          "updateActor",
          "deleteActor",
          "getListOfVersions",
          "createVersion",
          "getVersion",
          "updateVersion",
          "deleteVersion",
          "getListOfEnvVars",
          "createEnvVar",
          "getEnvVar",
          "updateEnvVar",
          "deleteEnvVar",
          "getListOfBuilds",
          "buildActor",
          "getDefaultBuild",
          "getBuildByActor",
          "abortBuildByActor",
          "getBuildOpenApiActor",
          "getListOfRuns",
          "runActor",
          "runActorSync",
          "runActorSyncDataset",
          "resurrectRun",
          "getLastRun",
          "getListOfActorWebhooks",
          "createTask"
        ]
      }
    },
    {
      "label": "Actor Version",
      "name": "version",
      "type": "string",
      "description": "Version number or tag of the Actor",
      "show": {
        "actions.api": [
          "getListOfVersions",
          "createVersion",
          "getVersion",
          "updateVersion",
          "deleteVersion",
          "getListOfEnvVars",
          "createEnvVar",
          "getEnvVar",
          "updateEnvVar",
          "deleteEnvVar"
        ]
      }
    },
    {
      "label": "Env Var Name",
      "name": "envVarName",
      "type": "string",
      "description": "Name of the environment variable",
      "show": {
        "actions.api": [
          "getEnvVar",
          "updateEnvVar",
          "deleteEnvVar"
        ]
      }
    },
    {
      "label": "Env Var Value",
      "name": "envVarValue",
      "type": "string",
      "description": "Value for the environment variable",
      "show": {
        "actions.api": [
          "createEnvVar",
          "updateEnvVar"
        ]
      }
    },
    {
      "label": "Build ID",
      "name": "buildId",
      "type": "string",
      "description": "ID of the Actor build",
      "show": {
        "actions.api": [
          "getBuildByActor",
          "abortBuildByActor",
          "getBuildOpenApiActor",
          "getBuild",
          "deleteBuild",
          "abortBuild",
          "getBuildLog",
          "getBuildOpenApi"
        ]
      }
    },
    {
      "label": "Run ID",
      "name": "runId",
      "type": "string",
      "description": "ID of the Actor run",
      "show": {
        "actions.api": [
          "getRun",
          "updateRunStatus",
          "deleteRun",
          "abortRun",
          "metamorphRun",
          "rebootRun",
          "resurrectRun"
        ]
      }
    },
    {
      "label": "Task ID or Name",
      "name": "taskId",
      "type": "string",
      "description": "ID or name of the Actor task",
      "show": {
        "actions.api": [
          "getTask",
          "updateTask",
          "deleteTask",
          "getTaskInput",
          "updateTaskInput",
          "getListOfTaskWebhooks",
          "getListOfTaskRuns",
          "runTask",
          "runTaskSync",
          "runTaskSyncDataset",
          "getLastTaskRun"
        ]
      }
    },
    {
      "label": "Dataset ID or Name",
      "name": "datasetId",
      "type": "string",
      "description": "ID or name of the Dataset",
      "show": {
        "actions.api": [
          "getDataset",
          "updateDataset",
          "deleteDataset",
          "getItems",
          "storeItems",
          "getDatasetStats"
        ]
      }
    },
    {
      "label": "Key-Value Store ID or Name",
      "name": "storeId",
      "type": "string",
      "description": "ID or name of the Key-Value Store",
      "show": {
        "actions.api": [
          "getStore",
          "updateStore",
          "deleteStore",
          "getListOfKeys",
          "getRecord",
          "storeRecord",
          "deleteRecord"
        ]
      }
    },
    {
      "label": "Request Queue ID or Name",
      "name": "queueId",
      "type": "string",
      "description": "ID or name of the Request Queue",
      "show": {
        "actions.api": [
          "getRequestQueue",
          "updateRequestQueue",
          "deleteRequestQueue",
          "addRequest",
          "addRequests",
          "deleteRequests",
          "getListOfRequests",
          "getRequest",
          "updateRequest",
          "deleteRequest",
          "getHead",
          "getHeadAndLock",
          "prolongRequestLock",
          "deleteRequestLock"
        ]
      }
    },
    {
      "label": "Request ID",
      "name": "requestId",
      "type": "string",
      "description": "ID of the request in the queue",
      "show": {
        "actions.api": [
          "getRequest",
          "updateRequest",
          "deleteRequest",
          "prolongRequestLock",
          "deleteRequestLock"
        ]
      }
    },
    {
      "label": "Webhook ID",
      "name": "webhookId",
      "type": "string",
      "description": "ID of the webhook",
      "show": {
        "actions.api": [
          "getWebhook",
          "updateWebhook",
          "deleteWebhook",
          "testWebhook",
          "getWebhookDispatches",
          "getWebhookDispatch"
        ]
      }
    },
    {
      "label": "Dispatch ID",
      "name": "dispatchId",
      "type": "string",
      "description": "ID of the webhook dispatch",
      "show": {
        "actions.api": [
          "getWebhookDispatch"
        ]
      }
    },
    {
      "label": "Schedule ID",
      "name": "scheduleId",
      "type": "string",
      "description": "ID of the schedule",
      "show": {
        "actions.api": [
          "getSchedule",
          "updateSchedule",
          "deleteSchedule",
          "getScheduleLog"
        ]
      }
    },
    {
      "label": "Log ID",
      "name": "logId",
      "type": "string",
      "description": "ID of the log",
      "show": {
        "actions.api": [
          "getLog"
        ]
      }
    },
    {
      "label": "Username or User ID",
      "name": "userIdOrName",
      "type": "string",
      "description": "Username or user ID for public user data",
      "show": {
        "actions.api": [
          "getPublicUserData"
        ]
      }
    },
    {
      "label": "My Actors Only",
      "name": "my",
      "type": "boolean",
      "description": "Set true to list only Actors created by the user",
      "show": {
        "actions.api": [
          "getListOfActors"
        ]
      },
      "default": false,
      "optional": true
    },
    {
      "label": "Limit",
      "name": "limit",
      "type": "number",
      "optional": true,
      "description": "Maximum number of items to return",
      "show": {
        "actions.api": [
          "getListOfActors",
          "getListOfTasks",
          "getListOfDatasets",
          "getListOfKeyValueStores",
          "getListOfRequestQueues",
          "getListOfRequests",
          "getListOfWebhooks",
          "getListOfActorWebhooks",
          "getListOfTaskWebhooks",
          "getWebhookDispatches",
          "getListOfSchedules",
          "getListOfActorsInStore",
          "getUserBuildsList",
          "getUserRunsList",
          "getListOfRuns",
          "getListOfTaskRuns"
        ]
      },
      "default": 100
    },
    {
      "label": "Offset",
      "name": "offset",
      "type": "number",
      "optional": true,
      "description": "Number of items to skip (for pagination)",
      "show": {
        "actions.api": [
          "getListOfActors",
          "getListOfTasks",
          "getListOfDatasets",
          "getListOfKeyValueStores",
          "getListOfRequestQueues",
          "getListOfRequests",
          "getListOfWebhooks",
          "getListOfActorWebhooks",
          "getListOfTaskWebhooks",
          "getWebhookDispatches",
          "getListOfSchedules",
          "getListOfActorsInStore",
          "getUserBuildsList",
          "getUserRunsList",
          "getListOfRuns",
          "getListOfTaskRuns"
        ]
      },
      "default": 0
    },
    {
      "label": "Sort Descending",
      "name": "desc",
      "type": "boolean",
      "optional": true,
      "description": "Sort records in descending order",
      "show": {
        "actions.api": [
          "getListOfActors",
          "getListOfTasks",
          "getListOfDatasets",
          "getListOfKeyValueStores",
          "getListOfRequestQueues",
          "getListOfWebhooks",
          "getListOfActorWebhooks",
          "getListOfTaskWebhooks",
          "getListOfSchedules",
          "getUserBuildsList",
          "getUserRunsList",
          "getListOfRuns",
          "getListOfTaskRuns"
        ]
      },
      "default": false
    },
    {
      "label": "Status filter",
      "name": "status",
      "type": "options",
      "options": [
        {
          "label": "READY",
          "name": "READY"
        },
        {
          "label": "RUNNING",
          "name": "RUNNING"
        },
        {
          "label": "SUCCEEDED",
          "name": "SUCCEEDED"
        },
        {
          "label": "FAILED",
          "name": "FAILED"
        },
        {
          "label": "ABORTED",
          "name": "ABORTED"
        },
        {
          "label": "TIMED-OUT",
          "name": "TIMED-OUT"
        }
      ],
      "description": "Filter runs by status",
      "show": {
        "actions.api": [
          "getListOfRuns",
          "getUserRunsList",
          "getListOfTaskRuns"
        ]
      }
    },
    {
      "label": "Format",
      "name": "format",
      "type": "options",
      "options": [
        {
          "label": "JSON",
          "name": "json"
        },
        {
          "label": "JSONL",
          "name": "jsonl"
        },
        {
          "label": "XML",
          "name": "xml"
        },
        {
          "label": "HTML",
          "name": "html"
        },
        {
          "label": "CSV",
          "name": "csv"
        },
        {
          "label": "XLSX",
          "name": "xlsx"
        },
        {
          "label": "RSS",
          "name": "rss"
        }
      ],
      "description": "Format of the output",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      }
    },
    {
      "label": "Delimiter",
      "name": "delimiter",
      "type": "string",
      "optional": true,
      "description": "Delimiter character for CSV format (default is comma)",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      },
      "default": ","
    },
    {
      "label": "Include BOM",
      "name": "bom",
      "type": "boolean",
      "optional": true,
      "description": "Include BOM (Byte Order Mark) in CSV output",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      },
      "default": false
    },
    {
      "label": "Download Attachment",
      "name": "attachment",
      "type": "boolean",
      "optional": true,
      "description": "Force file download attachment in response",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      },
      "default": false
    },
    {
      "label": "Skip Hidden Fields",
      "name": "clean",
      "type": "boolean",
      "optional": true,
      "description": "Skip hidden fields (clean output)",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      },
      "default": false
    },
    {
      "label": "Fields to Include",
      "name": "fields",
      "type": "string",
      "optional": true,
      "description": "Comma-separated list of fields to include (optional)",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      }
    },
    {
      "label": "Unwind Field",
      "name": "unwind",
      "type": "string",
      "optional": true,
      "description": "Field name to unwind array items (optional)",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      }
    },
    {
      "label": "Skip Header Row",
      "name": "skipHeaderRow",
      "type": "boolean",
      "optional": true,
      "description": "Skip header row in CSV/XLSX output",
      "show": {
        "actions.api": [
          "getItems",
          "runActorSyncDataset",
          "runTaskSyncDataset"
        ]
      },
      "default": false
    },
    {
      "label": "Input (JSON)",
      "name": "input",
      "type": "string",
      "description": "Input JSON for the Actor or task (if required)",
      "show": {
        "actions.api": [
          "runActor",
          "runActorSync",
          "runActorSyncDataset",
          "runTask",
          "runTaskSync",
          "runTaskSyncDataset",
          "updateTaskInput"
        ]
      }
    },
    {
      "label": "Memory (MB)",
      "name": "memory",
      "type": "number",
      "optional": true,
      "description": "Memory limit for run in megabytes (optional)",
      "show": {
        "actions.api": [
          "runActor",
          "runActorSync",
          "runActorSyncDataset",
          "runTask",
          "runTaskSync",
          "runTaskSyncDataset"
        ]
      }
    },
    {
      "label": "Timeout (seconds)",
      "name": "timeout",
      "type": "number",
      "optional": true,
      "description": "Run timeout in seconds (optional)",
      "show": {
        "actions.api": [
          "runActor",
          "runActorSync",
          "runActorSyncDataset",
          "runTask",
          "runTaskSync",
          "runTaskSyncDataset"
        ]
      }
    },
    {
      "label": "Build Tag or Number",
      "name": "build",
      "type": "string",
      "optional": true,
      "description": "Actor build tag or version number to run (optional, default is latest)",
      "show": {
        "actions.api": [
          "runActor",
          "runActorSync",
          "runActorSyncDataset",
          "runTask",
          "runTaskSync",
          "runTaskSyncDataset"
        ]
      }
    },
    {
      "label": "Status Message",
      "name": "statusMessage",
      "type": "string",
      "description": "Status message to set for the Actor run",
      "show": {
        "actions.api": [
          "updateRunStatus"
        ]
      }
    },
    {
      "label": "Target Actor ID or Name",
      "name": "targetActorId",
      "type": "string",
      "optional": true,
      "description": "Actor ID to metamorph into or to run in schedule (optional)",
      "show": {
        "actions.api": [
          "metamorphRun",
          "createSchedule",
          "updateSchedule"
        ]
      }
    },
    {
      "label": "Target Task ID or Name",
      "name": "targetTaskId",
      "type": "string",
      "optional": true,
      "description": "Task ID to run in schedule (optional)",
      "show": {
        "actions.api": [
          "createSchedule",
          "updateSchedule"
        ]
      }
    },
    {
      "label": "Event Types",
      "name": "eventTypes",
      "type": "string",
      "description": "Comma-separated event types that trigger the webhook (e.g. ACTOR.RUN.SUCCEEDED)",
      "show": {
        "actions.api": [
          "createWebhook",
          "updateWebhook"
        ]
      }
    },
    {
      "label": "Request URL",
      "name": "requestUrl",
      "type": "string",
      "description": "Webhook target URL to be called",
      "show": {
        "actions.api": [
          "createWebhook",
          "updateWebhook"
        ]
      }
    },
    {
      "label": "Payload Template",
      "name": "payloadTemplate",
      "type": "string",
      "optional": true,
      "description": "Payload template for webhook JSON (optional)",
      "show": {
        "actions.api": [
          "createWebhook",
          "updateWebhook"
        ]
      }
    },
    {
      "label": "Condition Actor ID",
      "name": "conditionActorId",
      "type": "string",
      "optional": true,
      "description": "Only trigger webhook for this Actor ID (optional)",
      "show": {
        "actions.api": [
          "createWebhook",
          "updateWebhook"
        ]
      }
    },
    {
      "label": "Condition Task ID",
      "name": "conditionTaskId",
      "type": "string",
      "optional": true,
      "description": "Only trigger webhook for this Task ID (optional)",
      "show": {
        "actions.api": [
          "createWebhook",
          "updateWebhook"
        ]
      }
    },
    {
      "label": "Idempotency Key",
      "name": "idempotencyKey",
      "type": "string",
      "optional": true,
      "description": "Unique key to prevent duplicate webhook creation (optional)",
      "show": {
        "actions.api": [
          "createWebhook"
        ]
      }
    },
    {
      "label": "Cron Expression",
      "name": "cronExpression",
      "type": "string",
      "description": "Cron expression for schedule timing",
      "show": {
        "actions.api": [
          "createSchedule",
          "updateSchedule"
        ]
      }
    },
    {
      "label": "Time Zone",
      "name": "timezone",
      "type": "string",
      "optional": true,
      "description": "Time zone for schedule (optional, e.g. UTC)",
      "show": {
        "actions.api": [
          "createSchedule",
          "updateSchedule"
        ]
      }
    },
    {
      "label": "Enabled",
      "name": "isEnabled",
      "type": "boolean",
      "description": "Whether the schedule is enabled",
      "show": {
        "actions.api": [
          "createSchedule",
          "updateSchedule"
        ]
      },
      "default": true
    },
    {
      "label": "Schedule Name",
      "name": "scheduleName",
      "type": "string",
      "optional": true,
      "description": "Name of the schedule (optional)",
      "show": {
        "actions.api": [
          "createSchedule",
          "updateSchedule"
        ]
      }
    },
    {
      "label": "Execution Input (JSON)",
      "name": "scheduleInput",
      "type": "string",
      "optional": true,
      "description": "Input JSON for the scheduled run (optional)",
      "show": {
        "actions.api": [
          "createSchedule",
          "updateSchedule"
        ]
      }
    },
    {
      "label": "Record Key",
      "name": "recordKey",
      "type": "string",
      "description": "Key of the record in the store",
      "show": {
        "actions.api": [
          "getRecord",
          "storeRecord",
          "deleteRecord"
        ]
      }
    },
    {
      "label": "Record Value",
      "name": "recordValue",
      "type": "string",
      "description": "Value to store (JSON or text)",
      "show": {
        "actions.api": [
          "storeRecord"
        ]
      }
    },
    {
      "label": "Content Type",
      "name": "contentType",
      "type": "string",
      "optional": true,
      "description": "Content-Type of the record value (optional)",
      "show": {
        "actions.api": [
          "storeRecord"
        ]
      }
    },
    {
      "label": "Exclusive Start Key",
      "name": "exclusiveStartKey",
      "type": "string",
      "optional": true,
      "description": "Key from which to start listing keys (for pagination)",
      "show": {
        "actions.api": [
          "getListOfKeys"
        ]
      }
    },
    {
      "label": "Requests (JSON array)",
      "name": "requests",
      "type": "string",
      "description": "JSON array of request objects to add",
      "show": {
        "actions.api": [
          "addRequests"
        ]
      }
    },
    {
      "label": "Request (JSON)",
      "name": "request",
      "type": "string",
      "description": "JSON object for a single request",
      "show": {
        "actions.api": [
          "addRequest",
          "updateRequest"
        ]
      }
    },
    {
      "label": "Search Query",
      "name": "search",
      "type": "string",
      "optional": true,
      "description": "Search term to filter Actors in store (optional)",
      "show": {
        "actions.api": [
          "getListOfActorsInStore"
        ]
      }
    },
    {
      "label": "Max Monthly Usage (USD)",
      "name": "maxMonthlyUsageUsd",
      "type": "number",
      "description": "Maximum monthly usage in USD (for updateLimits)",
      "show": {
        "actions.api": [
          "updateLimits"
        ]
      }
    },
    {
      "label": "Data Retention Days",
      "name": "dataRetentionDays",
      "type": "number",
      "description": "Number of days to retain data (for updateLimits)",
      "show": {
        "actions.api": [
          "updateLimits"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/your-repo/nodes/main/nodes/Apify/Apify.js"
},
{
  "loadMethods": {},
  "label": "GoogleSheet",
  "name": "googleSheet",
  "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GoogleSheet/gsheet.svg",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GoogleSheet/gsheet.svg",
    "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GoogleSheet/gsheet.svg"
  },
  "type": "action",
  "category": "Productivity",
  "version": 1,
  "description": "Execute GoogleSheet operations",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Create New SpreadSheet",
          "name": "create",
          "description": "Create a new spreadsheet"
        },
        {
          "label": "Add Rows",
          "name": "addRows",
          "description": "Add multiple rows to a spreadsheet"
        },
        {
          "label": "Get All Values",
          "name": "getAll",
          "description": "Get all values from a spreadsheet"
        },
        {
          "label": "Get Values By Range",
          "name": "getRange",
          "description": "Get values from cells from specified range"
        },
        {
          "label": "Update Cell",
          "name": "updateCell",
          "description": "Update single cell in a spreadsheet"
        },
        {
          "label": "Update Rows",
          "name": "updateRows",
          "description": "Update multiple rows in a spreadsheet"
        },
        {
          "label": "Clear Row",
          "name": "clearRow",
          "description": "Clear the values of a row in a spreadsheet"
        },
        {
          "label": "Clear Column",
          "name": "clearCol",
          "description": "Clear the values of a column in a spreadsheet"
        },
        {
          "label": "Clear By Range",
          "name": "clearRange",
          "description": "Clear the values in a spreadsheet from specified range"
        },
        {
          "label": "Clear All Values",
          "name": "clearAll",
          "description": "Clear all the values in a spreadsheet"
        }
      ],
      "default": "create"
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "oauth",
      "options": [
        {
          "label": "Google Sheet OAuth2",
          "name": "google"
        }
      ],
      "default": "google"
    }
  ],
  "inputParameters": [
    {
      "label": "Spreadsheet Name",
      "name": "spreadsheetName",
      "type": "string",
      "optional": true,
      "description": "Name of the spreadsheet to create. Default to Untitled spreadsheet.",
      "show": {
        "actions.operation": [
          "create"
        ]
      }
    },
    {
      "label": "Spreadsheet",
      "name": "spreadsheetId",
      "type": "asyncOptions",
      "loadMethod": "getAllSheetsFromDrive",
      "hide": {
        "actions.operation": [
          "create"
        ]
      }
    },
    {
      "label": "Sheet Name",
      "name": "sheetName",
      "type": "asyncOptions",
      "loadMethod": "getSheets",
      "hide": {
        "actions.operation": [
          "create"
        ]
      }
    },
    {
      "label": "Range",
      "name": "range",
      "type": "string",
      "placeholder": "A1:B2",
      "description": "For example, if the spreadsheet data is: A1=1, B1=2, A2=3, B2=4, then requesting range=A1:B2, returns [[1, 2],[3, 4]]",
      "show": {
        "actions.operation": [
          "getRange"
        ]
      }
    },
    {
      "label": "Row Values",
      "name": "rowValues",
      "type": "json",
      "placeholder": "[[1, 2], [3, 4]]",
      "description": "For instance: [[1, 2], [3, 4]] will insert 2 new rows. FIRST row: A1=1, B1=2, and SECOND row: A2=3, B2=4",
      "show": {
        "actions.operation": [
          "addRows"
        ]
      }
    },
    {
      "label": "Range",
      "name": "range",
      "type": "string",
      "placeholder": "A1:B4",
      "description": "A1 notation of the rows to update.",
      "show": {
        "actions.operation": [
          "updateRows"
        ]
      }
    },
    {
      "label": "Row Values",
      "name": "rowValues",
      "type": "json",
      "placeholder": "[[1, 2], [3, 4]]",
      "description": "For instance: [[1, 2], [3, 4]] will update FIRST row: A1=1, B1=2, and SECOND row: A2=3, B2=4",
      "show": {
        "actions.operation": [
          "updateRows"
        ]
      }
    },
    {
      "label": "Cell",
      "name": "range",
      "type": "string",
      "placeholder": "A1",
      "description": "A1 notation of the cell to update.",
      "show": {
        "actions.operation": [
          "updateCell"
        ]
      }
    },
    {
      "label": "Cell Value",
      "name": "cellValue",
      "type": "string",
      "placeholder": "New Update Value",
      "default": "",
      "description": "New value of the cell",
      "show": {
        "actions.operation": [
          "updateCell"
        ]
      }
    },
    {
      "label": "Row Number",
      "name": "clearRowNumber",
      "type": "number",
      "placeholder": "1",
      "description": "Row (number) to clear the values",
      "show": {
        "actions.operation": [
          "clearRow"
        ]
      }
    },
    {
      "label": "Column Number",
      "name": "clearColNumber",
      "type": "string",
      "placeholder": "A",
      "description": "Column (alphabet) to clear the values",
      "show": {
        "actions.operation": [
          "clearCol"
        ]
      }
    },
    {
      "label": "Range",
      "name": "range",
      "type": "string",
      "placeholder": "A1:B4",
      "description": "A1 notation of the range to clear.",
      "show": {
        "actions.operation": [
          "clearRange"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/GoogleSheet/GoogleSheet.js"
},
	{
  "loadMethods": {},
  "label": "GoogleDocs",
  "name": "googleDocs",
    "icons": {
    "default": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GoogleDocs/gdocs.svg",
    "light": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GoogleDocs/gdocs.svg",
    "dark": "https://raw.githubusercontent.com/Outerbridgeio/Outerbridge/master/packages/components/nodes/GoogleDocs/gdocs.svg"
  },
  "type": "action",
  "category": "Productivity",
  "version": 1,
  "description": "Execute GoogleDocs operations",
  "incoming": 1,
  "outgoing": 1,
  "actions": [
    {
      "label": "Operation",
      "name": "operation",
      "type": "options",
      "options": [
        {
          "label": "Create New Document",
          "name": "create",
          "description": "Create a new document"
        },
        {
          "label": "Get All Values",
          "name": "getAll",
          "description": "Get all values from a document"
        },
        {
          "label": "Update a Document",
          "name": "update",
          "description": "Update a document"
        }
      ],
      "default": "create"
    }
  ],
  "credentials": [
    {
      "label": "Credential Method",
      "name": "credentialMethod",
      "type": "oauth",
      "options": [
        {
          "label": "Google Docs OAuth2",
          "name": "google"
        }
      ],
      "default": "google"
    }
  ],
  "inputParameters": [
    {
      "label": "Document Name",
      "name": "documentName",
      "type": "string",
      "optional": true,
      "description": "Name of the document to create. Default to Untitled document.",
      "show": {
        "actions.operation": [
          "create"
        ]
      }
    },
    {
      "label": "Document",
      "name": "documentId",
      "type": "asyncOptions",
      "loadMethod": "getAllDocsFromDrive",
      "hide": {
        "actions.operation": [
          "create"
        ]
      }
    },
    {
      "label": "Requests",
      "name": "requests",
      "description": "update a document. You can simply add one reequest data or add multiple request data. If request format is invalid, document won't be updated. The details about how to write a request data can be found at https://developers.google.com/docs/api/reference/rest/v1/documents/batchUpdate",
      "type": "json",
      "placeholder": "[\n                    {\n                        \"insertText\": {\n                          \"text\": \"new text\",\n                            \"location\": {\n                                \"index\": 1 \n                            }\n                        }\n                    },\n                    {\n                        \"insertTable\": {\n                            \"rows\": 3,\n                            \"columns\": 4,\n                            \"endOfSegmentLocation\":{\n                            }\n                        }\n                    }\n]",
      "show": {
        "actions.operation": [
          "update"
        ]
      }
    }
  ],
  "filePath": "https://raw.githubusercontent.com/fruitbox12/nodes/main/nodes/GoogleDocs/GoogleDocs.js"
}
	
]
